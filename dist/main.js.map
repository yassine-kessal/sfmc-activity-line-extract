{"version":3,"file":"./main.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpCA;AACa;;AAEb,8CAA6C,EAAE,aAAa,EAAC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,IAAI;AACpD;AACA;AACA;AACA;AACA,6CAA6C,IAAI;AACjD;AACA;AACA;AACA;AACA,6CAA6C,IAAI;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wQAAwQ;AAChR,QAAQ,qBAAqB;AAC7B,QAAQ,sOAAsO;AAC9O,QAAQ,mCAAmC;AAC3C,QAAQ,4GAA4G;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAuD;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,aAAa;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,SAAS;AACzE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qBAAqB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,MAAM,kCAAkC,KAAK;AACjG,YAAY,IAAqC;AACjD;AACA;AACA,aAAa,EAIJ;AACT;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA,iDAAiD,MAAM,kCAAkC,KAAK,8CAA8C,eAAe;AAC3J;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA,SAAS,EASJ;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO,KAAK,QAAQ;AAC1C;AACA,iBAAiB,IAAI,IAAI,sBAAsB;AAC/C;AACA,QAAQ,KAA+B,EAAE,EAIpC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL;AACA;AACA;AACA,6BAA6B,KAAK,KAAK,MAAM;AAC7C;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB,uDAAuD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA,wDAAwD,KAAK,0BAA0B,oBAAoB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA,gEAAgE,SAAS;AACzE;AACA;AACA;AACA;AACA,2EAA2E,UAAU;AACrF;AACA;AACA,aAAa;AACb;AACA,wBAAwB,WAAW;AACnC;AACA,2DAA2D,SAAS;AACpE;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,UAAU;AAClB,QAAQ,oOAAoO;AAC5O,QAAQ,uCAAuC;AAC/C,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qCAAqC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA,SAAS;AACT,gBAAgB,YAAY,gBAAgB,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B,eAAe,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B,+BAA+B,IAAI;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B,gBAAgB,IAAI;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA,gBAAgB,4BAA4B,+BAA+B,IAAI;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B,cAAc,IAAI;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B,cAAc,IAAI;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,oFAAoF,8BAA8B;AAClH;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B,8BAA8B,IAAI;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD,wBAAwB,iBAAiB;AACzC,gFAAgF,eAAe,MAAM,eAAe;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,oBAAoB,iBAAiB;AACrC;AACA,oEAAoE,eAAe;AACnF,mDAAmD,eAAe,QAAQ,eAAe,MAAM,eAAe;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,oBAAoB,iBAAiB;AACrC,gEAAgE,eAAe,QAAQ,eAAe,MAAM,eAAe;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,oBAAoB,iBAAiB;AACrC,oFAAoF,eAAe,MAAM,eAAe;AACxH;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,oBAAoB,iBAAiB;AACrC,6EAA6E,eAAe,MAAM,gBAAgB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,oBAAoB,iBAAiB;AACrC,wEAAwE,eAAe,QAAQ,eAAe,MAAM,eAAe;AACnI;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAM;AACrB,eAAe,qBAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,IAAqC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD;AACA,YAAY,IAAqC;AACjD,iGAAiG,UAAU;AAC3G;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,iGAAiG,UAAU;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAqC;AACzD,wDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,IAAqC;AACrD;AACA,uDAAuD,gBAAgB,oDAAoD,GAAG,GAAG,SAAS;AAC1I,uFAAuF,gBAAgB,+EAA+E,GAAG,GAAG,SAAS;AACrM,+EAA+E,oBAAoB;AACnG,4FAA4F,SAAS,SAAS,SAAS,OAAO,GAAG;AACjI;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,SAAS;AACrB,QAAQ,IAAqC;AAC7C,+GAA+G,GAAG;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B,MAAM,IAAI;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB,yEAAyE,qBAAqB;AACzI;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB,YAAY,IAAqC;AACjD;AACA,mDAAmD,gBAAgB,oDAAoD,IAAI,mCAAmC,KAAK;AACnK,8EAA8E,iBAAiB,mCAAmC,IAAI,mCAAmC,KAAK;AAC9K,+GAA+G,IAAI,aAAa,KAAK,4CAA4C,SAAS;AAC1L;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,KAAK;AACL;AACA,gBAAgB,MAAM;AACtB;AACA,KAAK;AACL;AACA,gBAAgB,MAAM;AACtB;AACA,KAAK;AACL;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,MAAM;AACtB;AACA,KAAK;AACL;AACA,gBAAgB,MAAM;AACtB;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB,YAAY,IAAqC;AACjD,2EAA2E,oBAAoB;AAC/F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB,YAAY,IAAqC;AACjD,2EAA2E,oBAAoB;AAC/F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB,YAAY,IAAqC;AACjD;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,MAAM;AACtB;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB,YAAY,IAAqC;AACjD;AACA;AACA,0EAA0E,GAAG;AAC7E;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,IAAqC;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,YAAY;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,gBAAgB,IAAqC;AACrD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,gBAAgB,IAAqC;AACrD,uDAAuD,YAAY;AACnE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD,IAAI,IAAqC;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,IAAqC;AACrD;AACA,uDAAuD,gBAAgB,oDAAoD,GAAG,GAAG,gBAAgB;AACjJ,kFAAkF,iBAAiB,mCAAmC,GAAG,GAAG,gBAAgB;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,IAAqC;AACjD,yDAAyD,gBAAgB;AACzE;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,UAAU,IAAqC;AAC/C;AACA,+CAA+C,gBAAgB,oDAAoD,GAAG,GAAG,gBAAgB;AACzI,0EAA0E,iBAAiB,mCAAmC,GAAG,GAAG,gBAAgB;AACpJ;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd,wCAAwC;AACxC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,QAAQ,IAAqC;AAC7C,yFAAyF,iBAAiB;AAC1G;;AAEA;AACA;;AAEA;AACA;AACA,UAAU,IAAqC;AAC/C;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA,UAAU,IAAqC;AAC/C;AACA,+CAA+C,gBAAgB,oDAAoD,GAAG,GAAG,gBAAgB;AACzI,0EAA0E,iBAAiB,mCAAmC,GAAG,GAAG,gBAAgB;AACpJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA,QAAQ,SAAS,IAAqC;AACtD,uEAAuE,iBAAiB,KAAK,IAAI;AACjG;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,WAAW,2BAA2B,MAAM;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,2BAA2B,MAAM;AAClF;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW,2BAA2B,MAAM;AACjF;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW,2BAA2B,MAAM;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA,mFAAmF,WAAW,yBAAyB,KAAK;AAC5H;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAqC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAqC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB,yDAAyD;AAC7E;AACA;AACA,oBAAoB,IAAqC;AACzD,+DAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAqC;AACzD,8DAA8D,kBAAkB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA,gBAAgB,IAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAsC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2DAA2D,MAAM,EAAE,UAAU;AAC7E,wDAAwD,YAAY,QAAQ,cAAc,qBAAqB,QAAQ;AACvH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY,0DAA0D;AACtE,YAAY,mDAAmD;AAC/D;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,KAAqC,EAAE,EAG1C;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAG1C;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAG1C;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAG1C;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN,0BAA0B;;AAE1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA,2BAA2B;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAG1C;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,UAAU;AAC1E;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD;AACA,2EAA2E,UAAU;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uEAAuE;AACnF,QAAQ,IAAqC;AAC7C;AACA;AACA,4DAA4D,gBAAgB,6DAA6D,SAAS;AAClJ,mDAAmD,SAAS,gBAAgB,UAAU;AACtF;AACA;AACA,0HAA0H,sBAAsB;AAChJ;AACA;AACA,0IAA0I,eAAe;AACzJ;AACA;AACA;AACA,YAAY,oFAAoF;AAChG;AACA,UAAU,mFAAmF;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0CAA0C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa,qBAAqB,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa,iBAAiB,IAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa,IAAI,IAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa,UAAU,IAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa,YAAY,IAAI;AACzC;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB,KAAK,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,2DAA2D,IAAI;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,gBAAgB,QAAQ,SAAS,IAAI;AACrC,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,gBAAgB,QAAQ,SAAS,IAAI;AACrC;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA,0CAA0C,IAAI,8CAA8C,gBAAgB;AAC5G;AACA;AACA;AACA;AACA,6DAA6D,IAAI;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA,SAAS;AACT;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA,iDAAiD,kBAAkB,qBAAqB,gBAAgB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,IAAI;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,YAAY;AAC5D;AACA,aAAa;AACb;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,8DAA8D,qBAAqB,OAAO,gBAAgB;AAC1G;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,0GAA0G,qBAAqB,QAAQ,gBAAgB;AACvJ;AACA;AACA,QAAQ,IAAqC;AAC7C,iGAAiG,qBAAqB,OAAO,gBAAgB;AAC7I;AACA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA,uFAAuF,eAAe,QAAQ,iBAAiB,kBAAkB,EAAE,sBAAsB,eAAe;AACxL;AACA;AACA;AACA;AACA,+EAA+E,eAAe,QAAQ,iBAAiB,kBAAkB,EAAE;AAC3I;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD,kDAAkD,IAAI,OAAO,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,0CAA0C,GAAG;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA,yDAAyD,GAAG,GAAG,IAAI;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA,kBAAkB,IAAI,GAAG,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,kBAAkB,sBAAsB,IAAI;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,WAAW,WAAW,IAAI,GAAG,SAAS,GAAG;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,YAAY,uCAAuC;AACnD,YAAY,mEAAmE;AAC/E;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA,YAAY,+GAA+G;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+BAA+B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qBAAqB,IAAI,uBAAuB;AAC9D;AACA;AACA;AACA;AACA,cAAc,0BAA0B,IAAI,OAAO;AACnD;AACA;AACA,yBAAyB,aAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAG1C;AACL,YAAY,WAAW;AACvB,YAAY,qBAAqB;AACjC;AACA;AACA,4GAA4G,gCAAgC,YAAY,SAAS,OAAO,GAAG;AAC3K;AACA;AACA;AACA,6DAA6D,SAAS,OAAO,GAAG;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yLAAyL,oBAAoB;AAC7M;AACA;AACA,iLAAiL,qBAAqB;AACtM;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,wHAAwH,iBAAiB;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,iDAAiD;AACjE;AACA;AACA;AACA,oBAAoB,IAAqC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,GAAG,qEAAqE,YAAY,uCAAuC,iBAAiB;AAC3O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6BAA6B;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,YAAY,OAAO,QAAQ,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY,kBAAkB;AAC9B;AACA;AACA,YAAY,IAAqC;AACjD,gFAAgF,WAAW,OAAO,GAAG;AACrG;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,MAAM;AACd;AACA,YAAY,IAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,QAAQ,IAAqC;AAC7C,wCAAwC,IAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA,iEAAiE,IAAI;AACrE,uEAAuE,IAAI,uCAAuC,gBAAgB;AAClI,yEAAyE,IAAI,8CAA8C,gBAAgB;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,yEAAyE,QAAQ;AACjF;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA,YAAY,0BAA0B;AACtC,sCAAsC,SAAS;AAC/C,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,MAAM;;AAEZ,iBAAiB;;AAEjB;AACA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA;AACA,EAAE;AACF;;;AAGA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA,2BAA2B,UAAU,GAAG,OAAO;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ,4CAA4C;;AAE5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM;;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,IAAqC;AAC3C,6JAA6J,eAAe;AAC5K;;AAEA;AACA,uBAAuB;;AAEvB,oCAAoC,SAAS;AAC7C;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA,SAAS;AACT;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,IAAqC;AAC3C;AACA;AACA,SAAS,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,MAAM;AACV;;AAEA,oDAAoD,QAAQ;AAC5D;AACA;AACA,MAAM,+BAA+B;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,uCAAuC,SAAS;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,yCAAyC,SAAS;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA,8BAA8B;;AAE9B;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gCAAgC;;AAEhC;AACA;AACA,+BAA+B;;AAE/B;AACA,kCAAkC;;AAElC,oBAAoB;;AAEpB;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA,0DAA0D;AAC1D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,KAAK;AACL;;;AAGA;AACA;AACA;AACA,IAAI,4EAA4E;;AAEhF;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,IAAqC;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,IAAI;AACpE;AACA;AACA,gBAAgB,0DAA0D;AAC1E;AACA,oBAAoB,yCAAyC;AAC7D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,2DAA2D,iBAAiB,4CAA4C;AACxH;AACA;AACA,oBAAoB,IAAqC;AACzD,2DAA2D,4CAA4C;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,uDAAuD,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAqC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,wEAAwE,wBAAwB,eAAe,4CAA4C;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,YAAY,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD,wDAAwD,4CAA4C,gBAAgB,SAAS,oCAAoC,UAAU,eAAe,aAAa;AACvM;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,qBAAqB,IAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAqC;AACjD,oDAAoD,4CAA4C,uDAAuD,eAAe,eAAe,gCAAgC;AACrN;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,mBAAmB,IAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA,kCAAkC,KAAK,IAAI,yCAAyC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,YAAY,IAAqC;AACjD,oDAAoD,4CAA4C,uDAAuD,WAAW,eAAe,SAAS;AAC1L;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAsC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA,oDAAoD,IAAI,gBAAgB,aAAamDAAmD;AACnD;AACA,0HAA0H,QAAQ;AAClI;AACA;AACA,qIAAqI,KAAK;AAC1I;AACA;AACA,gHAAgH,MAAM;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,QAAQ,uDAAuD;AAC/D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA,4GAA4G,oBAAoB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8CAA8C,IAAI;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;;AAEA,wBAAwB;AACxB,mCAAmC;AACnC,WAAW;AACX,qCAAqC;AACrC,6BAA6B;AAC7B,qBAAqB;AACrB,+BAA+B;AAC/B,uBAAuB;AACvB,wBAAwB;AACxB,8BAA8B;AAC9B,0BAA0B;AAC1B,gBAAgB;AAChB,gBAAgB;AAChB,yBAAyB;AACzB,0BAA0B;AAC1B,wBAAwB;AACxB,yBAAyB;AACzB,sBAAsB;AACtB,6BAA6B;AAC7B,gBAAgB;AAChB,qBAAqB;AACrB,iBAAiB;AACjB,oBAAoB;AACpB,aAAa;AACb,cAAc;AACd,YAAY;AACZ;;;;;;;;;;;AClkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,IAAI;AACpD;AACA;AACA;AACA;AACA,6CAA6C,IAAI;AACjD;AACA;AACA;AACA;AACA,6CAA6C,IAAI;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iLAAiL;AACzL,QAAQ,UAAU;AAClB,QAAQ,oOAAoO;AAC5O,QAAQ,4GAA4G;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wOAAwO;AAChP,QAAQ,2GAA2G;AACnH,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yOAAyO;AACjP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,uEAAuE;AACvE;AACA;AACA,QAAQ,mDAAmD;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,QAAQ,yHAAyH;AACjI;AACA;AACA,QAAQ,oBAAoB;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wKAAwK;;AAEhL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gBAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAuD;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkD;AAC9D;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA,6FAA6F,gBAAgB,aAAa,KAAK,4CAA4C,SAAS;AACpL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA,gGAAgG,cAAc,aAAa,KAAK,4CAA4C,SAAS;AACrL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA,SAAS,EAIJ;AACL;AACA;AACA,+CAA+C,2BAA2B;AAC1E;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,uIAAuI,KAAK;AAC5I,kIAAkI,KAAK;AACvI,kLAAkL,KAAK;AACvL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,4IAA4I,MAAM;AAClJ,kIAAkI,KAAK;AACvI,mLAAmL,MAAM;AACzL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uBAAuB;AAC/B;AACA;AACA;AACA,yBAAyB;AACzB;AACA,wBAAwB;AACxB;AACA,wBAAwB;AACxB;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU;AACzC;AACA;AACA,wBAAwB,aAAa,EAAE,UAAU;AACjD;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D,qBAAqB;AACjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,eAAe;AACf,IAAI;AACJ;AACA,eAAe;AACf,IAAI;AACJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;;AAEA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,QAAQ,KAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+EAA+E,eAAe;AAC9F;AACA;AACA;AACA;AACA,wEAAwE,gBAAgB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,KAAqC;AACnE;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA,EAAE;AACF;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,uBAAuB;AACvB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC,gBAAgB;AACxD,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,eAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8FAA8F;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA,YAAY,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA,gBAAgB,yCAAyC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uHAAuH;AACvH;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAqC;AACrD,0FAA0F,cAAc;AACxG;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C,SAAS;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC,GAAG;;AAEJ,IAAI,IAA+B;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,8FAA8F,cAAc,IAAI,eAAe;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAqC;AAC7C,iGAAiG,cAAc,IAAI,eAAe,4CAA4C,yBAAyB;AACvM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAA8D;AAC1E;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA,gCAAgC,0BAA0B;AAC1D,4CAA4C,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA,kDAAkD;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uEAAuE;;AAEvE;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA,gCAAgC;;AAEhC;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC,GAAG;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,yMAAyM,UAAU,6CAA6C,MAAM;AACtQ;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wCAAwC;AAC5D;AACA;AACA;AACA;AACA,uDAAuD,SAAS;AAChE;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AC58JA,iEAAe;;;;;;;;;;;;;;;;;;;;;;;ACAuC;;AAEyB;;AAEjC;AACU;AACA;AACR;AACA;AACX;AACrmIAAmI;AAC5I,SAAS,oBAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wDAAgB;AAClE;AACA;AACA,KAAK,+CAA+C,4DAAoB,+CAA+C,uDAAe;AACtI;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK,iDAAiD,4DAAoB,qDAAqD,4DAAoB,uDAAuD,4DAAoB,+CAA+C,uDAAe;AAC5R;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK,iDAAiD,4DAAoB,sDAAsD,4DAAoB;AACpJ;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG,qEAAqE,wDAAgB;AACxF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,yDAAoB;AACxB,gDAAgD,yDAAoB;AACpE;AACA,IAAI,4EAA0B;AAC9B,gDAAgD,4EAA0B;AAC1E;AACA,IAAI,yDAAoB,IAAI,4EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;AC9K2H;AACnF;;AAExC,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;;AAEvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,4CAA4C,oKAAoK,mFAAmF,KAAK;;AAE1e,4CAA4C,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;;AAErJ;AACX;AACpC,uBAAuB,2DAAkB;;AAEzC,0BAA0B,iDAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,0DAAa;AACjB,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;;AAGA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA;AACA;AACA,aAAa,GAAG;AAChB;;;AAGA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB;;;AAGA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA,4BAA4B;AAC5B;AACA;AACA,+DAA+D;;AAE/D;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,0DAA0D;;AAE1D;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,0DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;ACxLF;AACA;AACA;AACe;AACf;;AAEA;AACA,4DAA4D;;AAE5D;AACA;;AAEA;AACA;AACA,kBAAkB;;AAElB;;AAEA;AACA;AACA;AACA;AACA,6DAA6D,mFAAQ,GAAY,EAAE,EAAE,MAAM,CAAC;AAC5F,OAAO;AACP,MAAM;AACN;AACA;AACA,IAAI;;;AAGJ;AACA;;AAEA,iBAAiB,mBAAO,CAAC,oEAAuB;;AAEhD;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;AC9CA,iEAAe,OAAO;;;;;;;;;;;;;;;ACAtB,iEAAe,KAAK;;;;;;;;;;;;;;;ACApB,iEAAe,cAAc;;;;;;;;;;;;;;;ACA7B,iEAAe,aAAa;;;;;;;;;;;;;;;ACA5B,iEAAe,WAAW;;;;;;;;;;;;;;;ACA1B,iEAAe,UAAU;;;;;;;;;;;;;;;ACAzB,iEAAe,QAAQ;;;;;;;;;;;;;;;ACAvB,iEAAe,KAAK;;;;;;;;;;;;;;;ACApB,iEAAe,GAAG;;;;;;;;;;;;;;;ACAlB,iEAAe,IAAI;;;;;;;;;;;;;;;ACAnB,iEAAe,OAAO;;;;;;;;;;;;;;;ACAtB,iEAAe,WAAW,YAAY;;;;;;;;;;;;;;;ACAtC,iEAAe,GAAG;;;;;;;;;;;;;;;ACAlB,iEAAe,GAAG;;;;;;;;;;;;;;;ACAlB,iEAAe,WAAW;;;;;;;;;;;;;;;ACA1B,iEAAe,QAAQ;;;;;;;;;;;;;;;ACAvB,iEAAe,OAAO;;;;;;;;;;;;;;;ACAtB,iEAAe,qBAAqB;;;;;;;;;;;;;;;ACApC,iEAAe,mBAAmB;;;;;;;;;;;;;;;ACAlC,iEAAe,kBAAkB;;;;;;;;;;;;;;;ACAjC,iEAAe,iCAAiC;;;;;;;;;;;;;;;ACAhD,iEAAe,GAAG;;;;;;;;;;;;;;;ACAlB,iEAAe,MAAM;;;;;;;;;;;;;;;ACArB,iEAAe,QAAQ;;;;;;;;;;;;;;;ACAvB,iEAAe,2EAA2E;;;;;;;;;;;;;;;ACA1F,iEAAe,MAAM;;;;;;;;;;;;;;;ACArB,iEAAe,kCAAkC;;;;;;;;;;;;;;;ACAjD,iEAAe,GAAG;;;;;;;;;;;;;;;ACAlB,iEAAe,OAAO;;;;;;;;;;;;;;;ACAtB,iEAAe,KAAK;;;;;;;;;;;;;;;ACApB,iEAAe,YAAY;;;;;;;;;;;;;;;ACA3B,iEAAe,GAAG;;;;;;;;;;;;;;;ACAlB,iEAAe,KAAK;;;;;;;;;;;;;;;ACApB,iEAAe,QAAQ;;;;;;;;;;;;;;;ACAvB,iEAAe,SAAS;;;;;;;;;;;;;;;ACAxB,iEAAe,mBAAmB;;;;;;;;;;;;;;;ACAlC,iEAAe,qCAAqC;;;;;;;;;;;;;;;ACApD,iEAAe,SAAS;;;;;;;;;;;;;;;ACAxB,iEAAe,iBAAiB;;;;;;;;;;;;;;;ACAhC,iEAAe,QAAQ;;;;;;;;;;;;;;;ACAvB,iEAAe,OAAO;;;;;;;;;;;;;;;ACAtB,iEAAe,UAAU;;;;;;;;;;;;;;;ACAzB,iEAAe,SAAS;;;;;;;;;;;;;;;ACAxB,iEAAe,UAAU;;;;;;;;;;;;;;;ACAzB,iEAAe,eAAe;;;;;;;;;;;;;;;ACA9B,iEAAe,MAAM;;;;;;;;;;;;;;;ACArB,iEAAe,+CAA+C,EAAE,EAAE;;;;;;;;;;;;;;;ACAlE,iEAAe,uBAAuB,EAAE,CAAC;;;;;;;;;;;;;;;ACAzC,iEAAe,wBAAwB,GAAG,KAAK,EAAE,CAAC;;;;;;;;;;;;;;;ACAlD,iEAAe,sBAAsB,EAAE,CAAC;;;;;;;;;;;;;;;ACAxC,iEAAe,YAAY;;;;;;;;;;;;;;;ACA3B,iEAAe,gBAAgB;;;;;;;;;;;;;;;ACA/B,iEAAe,gBAAgB,GAAG,YAAY;;;;;;;;;;;;;;;ACA9C,iEAAe,gBAAgB,GAAG,UAAU;;;;;;;;;;;;;;;ACA5C,iEAAe,oBAAoB,EAAE,CAAC;;;;;;;;;;;;;;;ACAtC,iEAAe,MAAM;;;;;;;;;;;;;;;ACArB,iEAAe,OAAO;;;;;;;;;;;;;;;ACAtB,iEAAe,aAAa;;;;;;;;;;;;;;;ACA5B,iEAAe,sBAAsB;;;;;;;;;;;;;;;ACArC,iEAAe,gDAAgD;;;;;;;;;;;;;;;ACA/D,iEAAe,yBAAyB;;;;;;;;;;;;;;;ACAxC,iEAAe,wBAAwB;;;;;;;;;;;;;;;ACAvC,iEAAe,oDAAoD;;;;;;;;;;;;;;;ACAnE,iEAAe,sCAAsC;;;;;;;;;;;;;;;ACArD,iEAAe,yBAAyB;;;;;;;;;;;;;;;ACAxC,iEAAe,0BAA0B;;;;;;;;;;;;;;;ACAzC,iEAAe,qCAAqC;;;;;;;;;;;;;;;ACApD,iEAAe,sBAAsB;;;;;;;;;;;;;;;ACArC,iEAAe,MAAM;;;;;;;;;;;;;;;ACArB,iEAAe,EAAE,GAAG,UAAU;;;;;;;;;;;;;;;ACA9B,iEAAe,eAAe;;;;;;;;;;;;;;;ACA9B,iEAAe,cAAc;;;;;;;;;;;;;;;ACA7B,iEAAe,iBAAiB;;;;;;;;;;;;;;;ACAhC,iEAAe,iBAAiB;;;;;;;;;;;;;;;;;;ACAQ;AACsB;AACqB;AACnF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA,wDAAwD,GAAG;AAC3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;;AAEA;AACA,IAAI,wEAAgB;AACpB;AACA,KAAK;AACL;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;;AAEA,EAAE,wEAAgB;AAClB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,yEAAiB;AACrC;AACA;AACA,gBAAgB,4DAAI;AACpB;AACA;;AAEA;AACA,yEAAyE,IAAI;AAC7E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6CAA6C;;AAE7C,yEAAyE;;AAEzE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8CAA8C,UAAU,GAAG,UAAU;AACrE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,mDAAmD;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gEAAgE;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;;AAGV;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iEAAe,sDAAkB;AACjC,QAAQ,0DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;AC3QiE;;AAEyB;;AAEvD;AACrC;AACA;AACA,SAAS,+FAA+F;AACxG;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,sEAAoB;AACxB,gDAAgD,sEAAoB;AACpE;AACA,IAAI,yFAA0B;AAC9B,gDAAgD,yFAA0B;AAC1E;AACA,IAAI,sEAAoB,IAAI,yFAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;AC3B2H;AACtE;;AAErD,iDAAiD,iDAAgB;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,uEAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AC9CyH;AAC/E;AACb;AACI;;AAEnC,wCAAwC,iDAAgB;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,aAAa,kDAAI;AACjB;;AAEA,WAAW,oDAAM;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,8DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACvG4C;;AAEyB;;AAE3B;AAC0C;AACjD;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,yEAAyE;AAClF,+FAA+F,sDAAc;AAC7G;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,yIAAyI,2EAAmC;AAC/K;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,+IAA+I,2EAAmC;AACrL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,+GAA+G,sDAAc;AAChI;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,iDAAoB;AACxB,gDAAgD,iDAAoB;AACpE;AACA,IAAI,oEAA0B;AAC9B,gDAAgD,oEAA0B;AAC1E;AACA,IAAI,iDAAoB,IAAI,oEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;ACrGgD;;AAEyB;;AAE7B;AAC0C;AACjD;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAAyE;AAClF,+FAA+F,sDAAc;AAC7G;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,yIAAyI,2EAAmC;AAC/K;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,mDAAoB;AACxB,gDAAgD,mDAAoB;AACpE;AACA,IAAI,sEAA0B;AAC9B,gDAAgD,sEAA0B;AAC1E;AACA,IAAI,mDAAoB,IAAI,sEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA,mDAAmD,aAAa,iBAAiB,qBAAqB,qDAAqD,0BAA0B;AACrL;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;;;;ACN2B;;AAEyB;;AAEnC;AACkB;AACM;AAC/B;AACruJAAuJ;AAChK,SAAS,kGAAkG;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG,4DAA4D,sDAAc;AAC7E;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG,kDAAkD,+DAAuB,2aAA2a,sDAAc;AACrgB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,6EAA6E,kEAA0B;AACvG;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO,sDAAsD,kEAA0B;AACvF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,yDAAoB;AACxB,gDAAgD,yDAAoB;AACpE;AACA,IAAI,4EAA0B;AAC9B,gDAAgD,4EAA0B;AAC1E;AACA,IAAI,yDAAoB,IAAI,4EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpW2H;AACnF;AACuD;AACM;AACtB;AACsC;AACnE;AACQ;AACf;AACgG,CAAC;;AAExE;AACrB;AAC/C;AACA,uBAAuB,+FAAwB;AAC/C,0BAA0B,kGAA2B;AACrD,kCAAkC,0GAAmC;AACrE,eAAe,uFAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,iDAAgB;AACpD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mEAAkB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oEAAY;AACvB;;AAEA;AACA,WAAW,oEAAY;AACvB;;AAEA;AACA,WAAW,oEAAY;AACvB;;AAEA;AACA;;AAEA;AACA,sBAAsB,oEAAY;AAClC,KAAK;;AAEL,WAAW,8EAAsB;AACjC;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,uEAAe;AAC1C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,wEAAgB;;AAE1D;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;;AAErC;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,mEAAgB;AAC5C;;AAEA;AACA,oBAAoB,uEAAe;AACnC,qBAAqB,mEAAgB;AACrC,oBAAoB,mEAAgB;AACpC,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,wEAAgB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC,8CAA8C;;AAE9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,mEAAgB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,MAAM,IAAI,MAAM;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;;AAErD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,oEAAY;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,8EAAsB;AACjC;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,yDAAQ;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,WAAW,yDAAQ,yEAAyE,oBAAoB;AAChH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,oBAAoB,yDAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,MAAM,+DAAoB;AAC1B;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA,yBAAyB,mEAAgB;AACzC;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8EAA8E;;AAE9E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6EAA6E;;AAE7E;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,mBAAmB;AAC5E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,oEAAY;AAC3C;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,sEAAc;AAClC,kBAAkB,qEAAa;AAC/B,OAAO;AACP;AACA,oBAAoB,sEAAc;AAClC,kBAAkB,wEAAgB;AAClC,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,yDAAQ;AACnB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,8DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,2CAA2C,4BAA4B;AACvE;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,sBAAsB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACniEAAe,sDAAkB;AACjC,QAAQ,0DAAK;AACb,CAAC,CAAC,EAAC;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;;;;;ACriCO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzD4E;;AAE5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B,gCAAgC,0FAAkC;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3LoD;;AAEyB;;AAEf;AACzB;AACrC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,sFAAsF;AAC/F,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG,kDAAkD,+DAAuB;AAC5E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,uDAAoB;AACxB,gDAAgD,uDAAoB;AACpE;AACA,IAAI,0EAA0B;AAC9B,gDAAgD,0EAA0B;AAC1E;AACA,IAAI,uDAAoB,IAAI,0EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;ACzDyG;AACnE;AACK;AAC2B,CAAC;;AAEpB;AACc;AACxB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,iEAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,0BAA0B,6DAAO;AACjC;AACA;AACA,OAAO;;AAEP;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,YAAY;AACZ,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,WAAW,wDAAQ;AACnB;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,uEAAS;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,uEAAS;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,uEAAS;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,yDAAQ;AAC5B;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,oBAAoB,yDAAQ;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA,MAAM;AACN;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,wDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AC3R8C;;AAEyB;;AAEX;AACzB;AACrC;AACA,SAAS,sFAAsF;AAC/F,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG,sEAAsE,+DAAuB;AAChG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,sHAAsH,+DAAuB;AAChJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,mDAAoB;AACxB,gDAAgD,mDAAoB;AACpE;AACA,IAAI,sEAA0B;AAC9B,gDAAgD,sEAA0B;AAC1E;AACA,IAAI,mDAAoB,IAAI,sEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;AC1DyG;AACvE;AACS;AAC2B;AACL;AAC5B;AACrC;AACA;AACA;;AAEA,8BAA8B,iEAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oDAAQ;AACnB;;AAEA;AACA,oBAAoB,yDAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,uEAAS;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,uEAAS;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,uEAAS;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,yDAAQ;AACnB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,oDAAK;AACb,CAAC,CAAC,EAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtLA;AACA;AACA;AACA,sJAAsJ,QAAQ,aAAa;AAC3K;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;;;;ACNuB;;AAEyB;;AAEnB;AACR;AACM;AACjB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0JAA0J;AACnK,SAAS,mCAAmC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,8CAA8C,2DAAmB,mIAAmI,4DAAoB;AAC3N;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,gIAAgI,4DAAoB;AACvJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG,wEAAwE,wDAAgB;AAC3F;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,qDAAoB;AACxB,gDAAgD,qDAAoB;AACpE;AACA,IAAI,wEAA0B;AAC9B,gDAAgD,wEAA0B;AAC1E;AACA,IAAI,qDAAoB,IAAI,wEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5M2H;AACvF;AACuD;AACV;AACQ;AAChB;AACc;AAC5C;AACa;AACK;AACR;AACE;AACkB;AACkH;AAC7G;AAC9E;AACA,kBAAkB,gGAAmB;AACrC,aAAa,2FAAc;AAC3B,iBAAiB,+FAAkB;AACnC,SAAS,uFAAU;AACnB,gBAAgB,8FAAiB;AACjC;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,gCAAgC,iDAAgB;AAChD;AACA;AACA;;AAEA;AACA;AACA,yEAAyE,mEAAc;;AAEvF;AACA;;AAEA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sEAAgB;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,gFAAQ;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,qFAAa;AAC9C;;AAEA;AACA;AACA,WAAW,qFAAa;AACxB;;AAEA;AACA,2BAA2B,yFAAiB;AAC5C;AACA,sCAAsC;;AAEtC,2BAA2B,2BAA2B;AACtD;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,8DAAkB;;AAEzC,oBAAoB,oCAAoC;AACxD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,yFAAiB,QAAQ,uFAAe,wBAAwB;;AAEvF,QAAQ,8EAAoB;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;;AAEA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAQ;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB,yFAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;;AAE/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,uEAAc,MAAM;AAC/B,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA,uEAAuE,KAAK;;AAE5E;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,WAAW;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,mEAAuB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,wFAAgB;AAC3B;;AAEA;AACA,WAAW,qFAAa,aAAa,yEAAoB;AACzD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,gFAAQ;AAChC;;AAEA;AACA,yBAAyB,+EAAO;AAChC;;AAEA;AACA;;AAEA;AACA,sEAAsE;AACtE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,sDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;ACjmByD;AACpD;AACP;AACA,mBAAmB,yEAAiB;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpF2D;;AAEyB;;AAE/C;AACrmFAAmF;AAC5F,SAAS,kDAAkD;AAC3D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE,aAAa,EAAE;AAClD;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,8DAAoB;AACxB,gDAAgD,8DAAoB;AACpE;AACA,IAAI,iFAA0B;AAC9B,gDAAgD,iFAA0B;AAC1E;AACA,IAAI,8DAAoB,IAAI,iFAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpT2H;AAC9E;AAC2B;AACI;AAC8B;AACtB;AACZ;AACM;AACF;AACA;AACJ;AACE;AACP;AACjB;AACuB;AACyB;AAClG;AACA,UAAU,qFAAW;AACrB,YAAY,uFAAa;AACzB,2BAA2B,sGAA4B;AACvD,gBAAgB,2FAAiB;AACjC,UAAU,qFAAW;AACrB,aAAa,wFAAc;AAC3B,YAAY,uFAAa;AACzB,YAAY,uFAAa;AACzB,UAAU,sFAAW;AACrB,WAAW,uFAAY;AACvB;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,iDAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAAgB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,sEAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,yDAAY;AAChC;AACA;AACA,gBAAgB,qDAAQ;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,mCAAmC;AAC7D;;AAEA;AACA,0BAA0B,iCAAiC,mBAAmB;AAC9E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,qDAAQ;AAC/B,uBAAuB,qDAAQ;AAC/B,0BAA0B,qBAAqB,iBAAiB,qBAAqB;AACrF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oDAAoD;;AAEpD;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA,gBAAgB,qDAAQ;AACxB;AACA,8BAA8B,qDAAQ,MAAM;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,yDAAY;AACxC;AACA;AACA,kBAAkB,qDAAQ;AAC1B;AACA,kBAAkB,qDAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,2BAA2B,sEAAe;AAC1C;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,qDAAQ;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA,gCAAgC;;AAEhC,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC,0BAA0B,SAAS;AACnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,kEAAa;AAC7B;AACA;AACA;AACA,gBAAgB,gEAAW;AAC3B;AACA;AACA;AACA,gBAAgB,mEAAc;AAC9B;AACA;AACA;AACA,gBAAgB,kEAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAQ,MAAM;AACpC;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC,0BAA0B,SAAS;AACnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,0DAAa;AACxB;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,+DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;AChgBK;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC,EAAE,aAAa,EAAE;;AAExD;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACO;AACP,8BAA8B,EAAE,UAAU,EAAE,UAAU,EAAE;;AAExD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACO;AACP;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACzJ0D;;AAEyB;;AAEb;AACjC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0GAA0G;AACnH,SAAS,oBAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,uDAAuD,mEAA2B;AACrF;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,6DAAoB;AACxB,gDAAgD,6DAAoB;AACpE;AACA,IAAI,gFAA0B;AAC9B,gDAAgD,gFAA0B;AAC1E;AACA,IAAI,6DAAoB,IAAI,gFAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;;AChG2H;AAC/E;AACwC;AACD;AACE;AACL;AACrC;AACO;AAClD;AACA,gBAAgB,2FAAiB;AACjC,aAAa,6FAAc;AAC3B,cAAc,8FAAe;AAC7B,cAAc,yFAAe;AAC7B;AACA;;AAEA,wCAAwC,iDAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,yDAAQ;AACnB;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,yDAAQ;AACnB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,mEAAe;AACzC;AACA;AACA,MAAM,6CAA6C,gEAAY;AAC/D;AACA;AACA,MAAM,8CAA8C,gEAAY;AAChE;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,8DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACvHiD,CAAC;;AAEpD;AACA;AACA;AACA;AACA,EAAE;AACF,oBAAoB,gEAAgB;;AAEpC,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,IAAI;AACP;;AAEe;AACf;AACA,oCAAoC;AACpC;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtD8D;;AAE9D;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,kEAAmB;AAChC,KAAK;;AAEL;AACA,iBAAiB;AACjB,KAAK;;AAEL;AACA,wBAAwB;AACxB,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;;;;;AC5CyG;AACxD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACwE;AACJ;AACtB,CAAC;;AAE/C,iCAAiC,IAAI,EAAE,GAAG;;AAE1C,4BAA4B,IAAI,GAAG,MAAM;;AAEzC,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC,mCAAmC;;AAEnC,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA,yCAAyC,qBAAqB,SAAS,aAAa;AACpF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,+EAAiB,GAAG,6EAAe;AAC1D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uDAAmB;AACnB;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,mEAAK;AACb,CAAC,CAAC,EAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAW;AACpB;;;;;;;;;;;;;;;;;AC/JA;AACA;AAC0K;AAC3H;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,kEAAc;AAC3C;AACA;;AAEA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,wEAAoB;AAC7B;AACA,gBAAgB,qBAAqB,GAAG,uBAAuB,GAAG,uBAAuB,GAAG,kCAAkC;;AAE9H;AACA;AACA,gBAAgB,MAAM,GAAG,wBAAwB,EAAE,OAAO;;AAE1D;AACA;AACA;AACA;AACA,gBAAgB,MAAM,GAAG,uBAAuB,GAAG,wBAAwB,EAAE,OAAO;AACpF;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,YAAY,oBAAoB,IAAI,oCAAoC;AACxE,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,MAAM,4EAAoB;AAC1B,mBAAmB,gBAAgB,GAAG,yBAAyB;AAC/D,IAAI,SAAS,gFAAwB;AACrC,sBAAsB,kEAAc;AACpC;AACA;AACA,MAAM;AACN,qBAAqB,MAAM;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;AACF;;;AAGA;AACA,iBAAiB,wEAAoB,IAAI,gFAAwB;AACjE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA,uGAAuG,OAAO;AAC9G;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA,aAAa,8DAAQ;AACrB;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,gDAAgD;;AAEhD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;;AAEnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,4BAA4B,EAAE,QAAQ,IAAI,SAAS,EAAE;;AAErD;AACA;AACA,sBAAsB,IAAI,OAAO,IAAI,OAAO,EAAE;AAC9C;;AAEA;AACA,oCAAoC,IAAI,SAAS,EAAE;AACnD;;AAEA;AACA,IAAI;;;AAGJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA,6FAA6F;;AAE7F;AACA;;AAEA,sBAAsB,KAAK,GAAG,WAAW,GAAG,SAAS;AACrD,8BAA8B,SAAS;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,wEAAoB;AAC7B,gBAAgB,mBAAmB,GAAG,yBAAyB,GAAG,oBAAoB;;AAEtF;AACA,gBAAgB,oBAAoB,GAAG,eAAe,GAAG,mBAAmB;;AAE5E;AACA,gBAAgB,8BAA8B,EAAE,eAAe,IAAI,mBAAmB;;AAEtF;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB,EAAE,eAAe,IAAI,mBAAmB;AAC1E;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS,4EAAoB;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;ACzZmD;;AAEyB;;AAEzB;AACI;AACJ;AACf;AACrC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0GAA0G;AACnH,SAAS,gFAAgF;AACzF;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,oKAAoK,0DAAkB;AACzL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+CAA+C,4DAAoB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,qEAAqE,0DAAkB;AAC1F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,uDAAoB;AACxB,gDAAgD,uDAAoB;AACpE;AACA,IAAI,0EAA0B;AAC9B,gDAAgD,0EAA0B;AAC1E;AACA,IAAI,uDAAoB,IAAI,0EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJ2H;AACrF;AAC+C;AACI;AACE;AACE;AACA;AACY;AACjC;AACiB;AACjB;AACE;AACJ;AAC0C;AAClD;AAC2B;AACjC;AACmF;AACxD;AACK;AACxF;AACA,eAAe,6FAAgB;AAC/B,iBAAiB,+FAAkB;AACnC,kBAAkB,gGAAmB;AACrC,mBAAmB,iGAAoB;AACvC,mBAAmB,iGAAoB;AACvC,yBAAyB,uGAA0B;AACnD,YAAY,mFAAa;AACzB,iBAAiB,+FAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,iDAAgB;AAClD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wFAAgB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wFAAgB;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,6DAAW;AACnD;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,6DAAW;AACxD;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,6DAAW;AACzD;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,qEAAY;AACvB;;AAEA;AACA,WAAW,qEAAY;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,yEAAgB;AACpB;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,wFAAgB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,mEAAgB;AAC5C;;AAEA;AACA,oBAAoB,uEAAgB;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,wEAAe;AACrC;AACA;AACA,KAAK;AACL;AACA,2BAA2B,wFAAgB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAAgB;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,uEAAoB;AAChD;;AAEA;AACA,WAAW,0DAAQ;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,qEAAY;AACvB;;AAEA;AACA;AACA,WAAW,qEAAY;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;;AAEA;AACA,iBAAiB,qEAAY;;AAE7B;AACA;AACA;AACA,KAAK;;AAEL,WAAW,+EAAsB;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,6DAAW;AACtB;;AAEA;AACA;AACA;AACA,aAAa,6DAAW;AACxB,MAAM;AACN;AACA,aAAa,6DAAW;AACxB,MAAM;AACN;AACA,aAAa,6DAAW;AACxB;;AAEA;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;AAClD;AACA;;AAEA,QAAQ,2DAAM;AACd;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA,6BAA6B,wFAAgB;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,uEAA2B;AAC/B;;AAEA;AACA;AACA,IAAI,yEAA6B;AACjC;;AAEA;AACA,IAAI,uEAA2B;AAC/B;;AAEA;AACA;AACA;AACA,yBAAyB,wFAAgB;AACzC;AACA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,4EAAgB;AAC3C;AACA;AACA;AACA,sBAAsB,uEAAe;AACrC,oBAAoB,qEAAa;AACjC,SAAS;AACT;AACA,sBAAsB,uEAAe;AACrC,oBAAoB,wEAAgB;AACpC,SAAS;AACT;AACA;AACA;;AAEA,OAAO;AACP,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,MAAM,2EAAe;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,kFAAe;AACpC;;AAEA;AACA,qBAAqB,iFAAc;AACnC;;AAEA;AACA,qBAAqB,mFAAgB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qFAAa,aAAa,yEAAoB;AACzD;;AAEA;AACA;AACA;AACA,YAAY,iFAAc,EAAE,mFAAgB,EAAE,kFAAe;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,8FAAsB;AACpC;AACA,MAAM;;AAEN;AACA;;AAEA;AACA,4BAA4B,uEAAoB;AAChD;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACniEAAe,sDAAkB;AACjC,QAAQ,wDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;AC7vByD;AACpD;AACP,UAAU,yEAAiB;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA,MAAM,yEAAiB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC/BwD;;AAEyB;;AAE7B;AACI;AACA;AACnB;AACrC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0GAA0G;AACnH,SAAS,8BAA8B;AACvC;AACA;AACA;AACA,GAAG,4IAA4I,0DAAkB;AACjK;AACA;AACA,KAAK;AACL;AACA,GAAG,0IAA0I,4DAAoB;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,8CAA8C,4DAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,2DAAoB;AACxB,gDAAgD,2DAAoB;AACpE;AACA,IAAI,8EAA0B;AAC9B,gDAAgD,8EAA0B;AAC1E;AACA,IAAI,2DAAoB,IAAI,8EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1H2H;AACjF;AACkC;AACa;AACE;AACf;AACpB;AAC0D;AACO;AACjE;AAC6C;AACrG;AACA,QAAQ,2FAAS;AACjB,iBAAiB,+FAAkB;AACnC,kBAAkB,gGAAmB;AACrC,QAAQ,2FAAS;AACjB;;AAEA,sCAAsC,iDAAgB;AACtD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,4DAAW;AACxD;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,4DAAW;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,mEAAgB;AAC5C;;AAEA;AACA,oBAAoB,uEAAgB;AACpC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,uEAAoB;AAChD;;AAEA;AACA,WAAW,yDAAQ;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,oEAAY;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,8EAAsB;AACjC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,8EAAsB;AACjC;;AAEA;AACA,4BAA4B,uEAAoB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uEAAgB;AACpC;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,wEAAgB;AACtB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,MAAM,wEAAgB;AACtB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA,gCAAgC,mEAAgB;AAChD;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,2CAA2C,qFAAc;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,kEAAc;AACvD,oBAAoB,iGAA0B;AAC9C;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,2FAAoB;AAChD,wDAAwD,kEAAc;;AAEtE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,2FAAoB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,2FAAoB;AAC/C;AACA;AACA;;AAEA;AACA,2DAA2D,kEAAc;AACzE;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACniEAAe,sDAAkB;AACjC,QAAQ,4DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;ACrnBiD;;AAEyB;;AAEvC;AACrC;AACA;AACA,SAAS,6DAA6D;AACtE,SAAS,oBAAoB;AAC7B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;AACA;;;AAGA,IAAI,sDAAoB;AACxB,gDAAgD,sDAAoB;AACpE;AACA,IAAI,yEAA0B;AAC9B,gDAAgD,yEAA0B;AAC1E;AACA,IAAI,sDAAoB,IAAI,yEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;ACjD2H;AACtF;AAC0B;;AAE/D,wBAAwB,iDAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,WAAW,6EAAuB;AAClC;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,uDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;ACjHuD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,UAAU;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA,OAAO;;AAEP,sBAAsB,yBAAyB;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oFAAoF;;AAEpF;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;;;AAGA;AACA;AACA;AACA,+DAA+D;;AAE/D,+EAA+E,mEAAa;AAC5F;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;;;AAGA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;;AAGO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnSkD;;AAEyB;;AAEb;AACzB;AACrC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,yEAAyE;AAClF;AACA;AACA;AACA;AACA,GAAG,kDAAkD,+DAAuB;AAC5E;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,qDAAoB;AACxB,gDAAgD,qDAAoB;AACpE;AACA,IAAI,wEAA0B;AAC9B,gDAAgD,wEAA0B;AAC1E;AACA,IAAI,qDAAoB,IAAI,wEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;ACjD2H;AACvF;AAC+D;AACjD;AACO;AACd;AACqB;AAChE,gCAAgC,iGAA0B;AAC1D;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,iDAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,0BAA0B,6DAAO;AACjC;AACA;AACA,cAAc,wEAAkB;AAChC,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA,QAAQ,gEAAW;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uEAAe;AAC1B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0EAA0E,iBAAiB,QAAQ,QAAQ;AAC3G,uDAAuD,QAAQ;AAC/D;AACA;AACA,YAAY;AACZ,aAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,0EAA0E,MAAM;AAChF;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA,oBAAoB,yDAAQ;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,sDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;AC5MF;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;ACjBmE;AACrB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,SAAS,kEAAQ;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACgC;AACzB;AACA;AACP,uDAAuD,uEAAa;;AAEpE;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,uDAAc;AACxB;AACA;AACA,0BAA0B,yBAAyB,IAAI,qBAAqB;AAC5E,kBAAkB,OAAO,EAAE,WAAW,EAAE,aAAa,GAAG,kBAAkB;AAC1E;;AAEA,gBAAgB,WAAW,EAAE,aAAa,GAAG,kBAAkB;AAC/D;AACA;;AAEA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,SAAS,GAAG,KAAK;AACzC;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC/E0C;AACoB;AAC9D;AACA;AACA;AACA;AACA;AACA,iEAAe,sDAAkB;AACjC,QAAQ,4DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;ACTF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACkC;AACM;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP,OAAO,oDAAW;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,UAAU,GAAG,GAAG;;AAEzC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;;;AAGZ;AACA,gCAAgC,qDAAQ;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,GAAG;AAChE;AACA,+BAA+B,UAAU,GAAG,GAAG;AAC/C;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;AClFuC;AACuB;AAChB,CAAC;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,uDAAc;AAC5C,iEAAe,sDAAkB;AACjC,QAAQ,yDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;ACb4C;;AAEyB;;AAET;AACzB;AACrC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,yEAAyE;AAClF,yDAAyD,+DAAuB;AAChF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,iDAAoB;AACxB,gDAAgD,iDAAoB;AACpE;AACA,IAAI,oEAA0B;AAC9B,gDAAgD,oEAA0B;AAC1E;AACA,IAAI,iDAAoB,IAAI,oEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;ACrC2H;AAC3F;AACoD;AACH;AACvC;AAC1C;AACA;AACA;;AAEA,4BAA4B,iDAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;;AAGA,iBAAiB,0DAAM;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;;AAEA,QAAQ,gEAAW;AACnB,uBAAuB,gEAAW,sBAAsB;AACxD;;AAEA;AACA,QAAQ,yEAAiB;AACzB;AACA,WAAW,qEAAgB;AAC3B,WAAW,qEAAgB;AAC3B,SAAS;AACT;;AAEA;AACA,MAAM;AACN,yDAAyD,MAAM,IAAI;AACnE;AACA;;AAEA,MAAM,yEAAiB;AACvB;AACA,SAAS,qEAAgB;AACzB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA,WAAW,uEAAe;AAC1B;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA,WAAW,uDAAgB;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,kDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;ACvKgD;AACO;AAClD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,gEAAW;AACjB,WAAW,uEAAe;AAC1B;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;;;;;;;;ACnBA;AACO;AACP;AACA,YAAY,OAAO,GAAG,UAAU;AAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJiD;AACU;AACgE;AACnE;AACjD;AACP;AACA;;;;;;;;;;;;;;;;;ACNsD;AACtD;AACA;AACA;AACA,SAAS,QAAQ;AACjB,SAAS,QAAQ;AACjB,SAAS,QAAQ;AACjB;;AAEO;AACP;AACA;AACA,4BAA4B,gEAAY;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,QAAQ;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU;AACnB,SAAS,QAAQ;AACjB,SAAS,QAAQ;AACjB,SAAS,SAAS;AAClB,UAAU,UAAU;AACpB;;AAEO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA,wCAAwC;AACxC,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;ACrJyD;AAClD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAK;AACb,SAAS,SAAS;AAClB;;AAEO;AACP,SAAS,uEAAe;AACxB;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBqF;AACc;AACJ;AACE;AACJ;AACV;AACE;AACQ;AACA;AACa;AAC1D;AAChD;AACA;AACA,YAAY,gGAAa;AACzB,eAAe,gGAAa;AAC5B,mBAAmB,uGAAoB;AACvC,iBAAiB,qGAAkB;AACnC,kBAAkB,sGAAmB;AACrC,gBAAgB,oGAAiB;AACjC,WAAW,+FAAY;AACvB,YAAY,gGAAa;AACzB,gBAAgB,oGAAiB;AACjC,gBAAgB,oGAAiB;AACjC,yBAAyB,wGAA0B;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEO;AACP;AACA;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA,IAAI,+DAAM;AACV;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC;;AAExC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACO;AACP,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,OAAO,IAAI;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;;;;;;;;;;;;;;;;;;ACpT6I;AACtI;AACP,SAAS,uFAAgB;AACzB,EAAE;;AAEK;AACP,SAAS,2FAAoB;AAC7B;AACO;AACP,SAAS,uFAAgB;AACzB,EAAE;;AAEK;AACP,SAAS,iGAA0B;AACnC;;;;;;;;;;;;;;;;ACdA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA,wBAAwB,MAAM,GAAG;;AAEjC;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEO;AACP;AACA,wBAAwB,MAAM,GAAG;;AAEjC;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;;;AAGJ;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA,2CAA2C,gBAAgB,sBAAsB,gBAAgB,mJAAmJ,eAAe,kBAAkB,qBAAqB;AAC1S;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;ACNoB;;AAEyB;;AAEpB;AACU;AAC0B;AACA;AAChC;AACA;AACQ;AAC3B;AACrnH,SAAS,sOAAsO;AAC/O;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,+LAA+L,0DAAkB;AACpN;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,sEAAsE,+DAAuB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,kDAAkD,+DAAuB;AAC5E;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG,4KAA4K,0DAAkB;AACjM;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG,8IAA8I,0DAAkB;AACnK;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG,iEAAiE,4EAAoC;AACxG;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,8EAA8E,+DAAuB;AACxG;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,oKAAoK,0DAAkB;AACzL;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,yGAAyG,4EAAoC;AAChJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,sFAAsF,4DAAoB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,8EAA8E,4DAAoB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,sFAAsF,gEAAwB;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,kDAAoB;AACxB,gDAAgD,kDAAoB;AACpE;AACA,IAAI,qEAA0B;AAC9B,gDAAgD,qEAA0B;AAC1E;AACA,IAAI,kDAAoB,IAAI,qEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnqB2H;AAC1F;AACyD;AACP;AACM;AACG;AACI;AACxB;AACD;AACQ;AACmB;AACA;AACE;AAC/C;AACE;AACC;AACiQ;AACvQ;AACL;AAC+D;AAClC;AAC2C;AACkH;AACrK;AAChB;AAClD;AACA,mBAAmB,8FAAoB;AACvC,qBAAqB,qFAAsB;AAC3C,wBAAwB,wFAAyB;AACjD,uBAAuB,4FAAwB;AAC/C,yBAAyB,8FAA0B;AACnD,0BAA0B,gGAA2B;AACrD,0BAA0B,gGAA2B;AACrD,YAAY,mFAAa;AACzB,SAAS,gFAAe;AACxB,WAAW,kFAAqB;AAChC,2BAA2B,iGAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA,6BAA6B,iDAAgB;AAC7C;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+DAAY,QAAQ;AAChD;;AAEA,oBAAoB,0EAAiB,QAAQ;AAC7C;AACA;;AAEA,+BAA+B,4DAAmB;AAClD;;AAEA;AACA;AACA,8BAA8B,+DAAY;AAC1C,MAAM;AACN;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA,gCAAgC,mEAAgB;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,6DAAQ;AAChB;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,4DAAc;AAC7C;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA,sBAAsB,wEAAe;AACrC;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,4BAA4B,wEAAe;AAC3C;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,sBAAsB,yEAAgB;AACtC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA,6BAA6B,EAAE,aAAa,EAAE;AAC9C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,mBAAmB,0EAAiB;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,yEAAgB;;AAEpC;AACA;AACA,MAAM;AACN;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;;AAErC;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,2DAAc;;AAEhC;AACA,oBAAoB,6DAAe,SAAS;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+CAA+C;;;AAG/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA,4BAA4B,mEAAgB;AAC5C;;AAEA;AACA,oBAAoB,uEAAgB;;AAEpC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;;AAErC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;;AAErC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;;AAErC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA,6BAA6B,kEAAY;AACzC;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,+EAAsB;AACjC;;AAEA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,+EAAsB;AACjC;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,+EAAsB;AACjC;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,+EAAsB;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,uEAAoB;AAChD;;AAEA;AACA,4BAA4B,wEAAqB;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,yBAAyB;AACnD;;AAEA;AACA,WAAW,qEAAY;AACvB;;AAEA;AACA;AACA;AACA,aAAa,qEAAY;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,qEAAY;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,qEAAY;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,0DAAQ;;AAE5B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,0DAAQ;;AAE/B,kDAAkD;AAClD,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,0DAAQ;AACnB;AACA,KAAK;AACL;;AAEA;AACA,WAAW,0DAAQ;AACnB;AACA,KAAK;AACL;;AAEA;AACA,WAAW,0DAAQ;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,QAAQ,+EAAsB;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,kEAAoB;AACvE;AACA,QAAQ;AACR;AACA;;;AAGA;AACA,YAAY,oEAAsB,0BAA0B,2DAAa;AACzE,iCAAiC,4DAAc;AAC/C;;AAEA;AACA;;AAEA,aAAa,0DAAY;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,mEAAgB,qBAAqB,uEAAoB;AACrF;;AAEA;AACA,gCAAgC,6EAAoB;AACpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,2DAAa;AACjC;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,oBAAoB,kEAAqB;AACzC;;AAEA,kBAAkB,yDAAY;AAC9B;AACA,QAAQ;AACR;AACA;AACA;;;AAGA;AACA;AACA;AACA,+CAA+C,6DAAa;AAC5D,iBAAiB,+EAAO;AACxB;;AAEA;AACA;AACA,+CAA+C,6DAAa;AAC5D,iBAAiB,gFAAQ;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC,mFAAgC;AAChE;AACA;AACA;AACA;;AAEA;AACA,OAAO,cAAc;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA,4BAA4B,uEAAoB;AAChD;;AAEA;AACA,WAAW,6DAAW;AACtB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,QAAQ,6DAAQ;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE;;AAEpE;AACA,oBAAoB,0EAAiB;;AAErC,iCAAiC,oEAAsB;AACvD;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,+DAAM;AACV,IAAI,+DAAM,gIAAgI,KAAK;;AAE/I;AACA,MAAM,+DAAM;AACZ;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,IAAI,+DAAM,qGAAqG,MAAM;AACrH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iGAAwC;AAC9C,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN,8CAA8C;;AAE9C;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,0DAAY;AACnC,QAAQ;AACR;AACA;;AAEA;AACA,uBAAuB,sEAAsB;AAC7C,QAAQ;AACR,uBAAuB,6DAAa;AACpC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,sEAAU;AACrB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,kBAAkB,kEAAoB;AACtC;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;;AAEA,2BAA2B,4DAAc;;AAEzC;;AAEA;;AAEA;AACA;;AAEA;AACA,IAAI,0EAAiB;AACrB,oDAAoD,wEAAqB;AACzE,uDAAuD,uEAAoB;AAC3E,KAAK;AACL;;AAEA;AACA,qBAAqB,6DAAe;AACpC;AACA,2BAA2B,4DAAc;AACzC;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,MAAM;AACN,2BAA2B,6EAA+B,cAAc;AACxE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,6DAAa;AAC5B,MAAM;AACN,eAAe,6DAAa;AAC5B,MAAM;AACN,eAAe,oEAAoB;AACnC;;AAEA;AACA;;AAEA;AACA,IAAI,yEAAgB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,yEAAgB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,IAAI,yEAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACniEAAe,sDAAkB;AACjC,QAAQ,mDAAK;AACb,CAAC,CAAC,EAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1oEO;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN0E;AACF;AACqC;AACxD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACO;AACP,SAAS,wFAAiB,6BAA6B,gFAAgB;AACvE,EAAE;;AAEK;AACP;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACO;AACP,MAAM,mEAAa;AACnB;AACA;;AAEA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,qBAAqB,mFAAY;AACjC,IAAI,gBAAgB;AACpB;;AAEA;AACA,EAAE;;AAEK;AACP;AACA;AACA;;AAEA,mEAAmE,gFAAgB;AACnF,kEAAkE,iFAAiB,EAAE;;AAErF;;AAEA;AACA;AACA;AACA;;AAEA,gDAAgD,0FAAmB;AACnE;AACO;AACP;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA,sCAAsC,aAAa;AACnD;AACA;AACO;AACP;AACA,kCAAkC;;AAElC,yCAAyC,IAAI;AAC7C;;AAEA;AACA;AACA,IAAI;;;AAGJ,uCAAuC,IAAI;AAC3C,iEAAiE;;AAEjE;AACA,EAAE;;AAEK;AACP;AACA;AACA;;AAEA;AACA,qDAAqD;;AAErD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7NgE;AACG;AACnE;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,eAAe,SAAS;AACxB;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA,QAAQ,4DAAQ;AAChB,aAAa,+DAAO;AACpB;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;;;AAGA,QAAQ,0DAAM;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uDAAmB;AACnB;AACA,CAAC;;;;;;;;;;;;;;;AC7HD;AACA;AACA;AACA,qBAAqoBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,QAAQ;AACrB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,cAAc;AAC5B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,cAAc;AAC9B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,YAAY,gBAAgB;AAC5B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;;AAEA,+BAA+B,oBAAoB;AACnD;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,kCAAkC,wBAAwB;AAC1D;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD;AACzD;;AAEA;;AAEA;AACA;;AAEA;AACA,0CAA0C,yBAAyB;AACnE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;;AAGV;AACA;AACA,MAAM,MAAM;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,4BAA4B;AAC5B;;AAEA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;;;AAGA;AACA;AACA,gEAAgE;;AAEhE,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,8CAA8C;AAC7D;AACA;AACA;;AAEA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,iFAAiF;AAC/F,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,iFAAiF;AAC/F,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,iFAAiF;AAC/F,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,GAAG;AAChB,aAAa,QAAQ;AACrB,cAAc,GAAG;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,SAAS;AACvB;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8DAA8D,gEAAgE;AAC9H;AACA,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,GAAG;AAChB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,qHAAqH;;AAErH;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;;AAEA;AACA,mBAAmB;AACnB;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,GAAG;AAChB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC13CA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvKgD;AAC0B;AACA;AAC0E;AAC2E;AACxN;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ,0EAA0E,kEAAc;AACxF,EAAE,8DAAM,CAAC,gFAAwB,wJAAwJ,cAAc,SAAS,MAAM;AACtN,qBAAqB,mEAAa,iBAAiB,wEAAoB;;AAEvE;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ,oBAAoB,qEAAe;AACnC;AACA;AACA,kBAAkB,gEAAU;AAC5B;AACA;AACO;AACP;AACA,0BAA0B,4EAAoB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,8DAAM,CAAC,4EAAoB,8HAA8H,cAAc,SAAS,MAAM;AACxL,qBAAqB,+DAAS;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gEAAU;AAC5B;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,8DAAM,CAAC,gFAAwB,uJAAuJ,cAAc,SAAS,MAAM;AACrN,qBAAqB,0EAAoB;;AAEzC;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,uEAAiB;AACzC;AACA;AACA;AACA,cAAc,4EAAoB;AAClC,kBAAkB,uEAAiB;AACnC;AACA;AACO;AACP;;AAEA;AACA;AACA;;AAEA,qBAAqB,mEAAa,sBAAsB,kFAAgB;;AAExE;AACA;AACA;;AAEA,wBAAwB,uEAAiB;AACzC;AACA;AACO;AACP;;AAEA;AACA;AACA;;AAEA,qBAAqB,+DAAS,sBAAsB,kFAAgB;;AAEpE;AACA;AACA;;AAEA;AACA,EAAE;;AAEK;AACP;;AAEA;AACA;AACA,IAAI;AACJ;;;AAGA,qBAAqB,sEAAgB;;AAErC;AACA;AACA;;AAEA,wBAAwB,uEAAiB;AACzC;AACA;AACO;AACP;AACA;AACA;AACO;AACP,YAAY,mBAAmB,GAAG,yBAAyB,GAAG,oBAAoB;AAClF;AACO;AACP,YAAY,qBAAqB,GAAG,uBAAuB,GAAG,uBAAuB,GAAG,kCAAkC;AAC1H;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA,0EAA0E;AAC1E;;AAEA,SAAS,uEAAiB;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AChLuD;AACA,CAAC;AACxD;;AAEA,0BAA0B,+DAAgB;AAC1C,yBAAyB;;AAElB;AACP,uCAAuC,6DAAkB;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEK;AACP,uCAAuC,6DAAkB;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjF6C;AACO;AACmD;AACrB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,+DAAM;AACnD;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,qEAAe;AACxC,oBAAoB,uEAAiB;AACrC,SAAS,mEAAa;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,UAAU,gFAAwB,yBAAyB,kEAAc;AACzE,eAAe,gEAAU;AACzB,QAAQ;;;AAGR;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA,kBAAkB,6DAAe;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtHmE;AACnB;AAChD;AACO;AACP;AACA;AACA;AACA;AACA,MAAM,8DAAM,iIAAiI,cAAc,SAAS,MAAM;AAC1K;AACA,2BAA2B,8DAAQ;AACnC,aAAa,qEAAe;AAC5B;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdmE;AACZ;AACF;AACM;AACJ;AAC4B;AACJ;AAC+J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP9O;AACkE;AACJ;AACvD;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,wBAAwB;;AAExB,EAAE,gFAAsB;AACxB;AACA,GAAG;AACH;AACA;AACO;AACP,wBAAwB;;AAExB,EAAE,gFAAsB;AACxB;AACA,GAAG;AACH;AACA;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B,EAAE,yCAAyC;AAC3C;;AAEO;AACP;AACA;AACA;;AAEA;AACA,SAAS,4EAAoB;AAC7B;AACA;;AAEA;AACA;;AAEA,wEAAwE;;AAExE,iDAAiD,EAAE,oCAAoC,EAAE,oCAAoC,EAAE;AAC/H,2CAA2C;AAC3C;;AAEA,uKAAuK;AACvK;;AAEA;;AAEA,kBAAkB,8BAA8B;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;AAEK;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;AACO;AACP,SAAS,gFAAsB;AAC/B;;;;;;;;;;;;;;;ACvGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,2BAA2B;;AAE3B,sBAAsB,gBAAgB;AACtC;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,6DAA6D;AAC5E;AACA;AACA;;AAEA;AACA;AACA,wDAAwD;AACxD;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,oGAAoG;AAClH,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,oGAAoG;AAClH,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,oGAAoG;AAClH,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,QAAQ;AACrB,qBAAqB,oGAAoG;AACzH,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA,oBAAoB,yBAAyB;AAC7C;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpb8D;AACc;AACrE;AACP,yCAAyC,EAAE,wDAAgB;;AAE3D;AACA,WAAW,2EAAoB;AAC/B;;AAEA;AACA;AACA,mBAAmB,yDAAiB;AACpC,eAAe,2EAAoB;AACnC;;AAEA,mCAAmC,oDAAY;AAC/C;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnBgD;AACS;AAClD;AACP,uBAAuB,yDAAa;AACpC;AACA;AACA,aAAa,qEAAe;AAC5B;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACTgE;AACE;AACE;AACnB;AACkD;;AAEnG;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mCAAmC,iEAAQ;AAC3C;;AAEA;AACA,6BAA6B,8EAAc,sBAAsB,6EAAa,GAAG,4EAAY;AAC7F;;AAEA;AACA;AACA;AACA,iBAAiB,0DAAkB;AACnC,aAAa,yDAAiB;;AAE9B;AACA,eAAe,4DAAoB,WAAW,mDAAW;AACzD;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrC6C;AACmB;AACE;AACE;AACnB,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ,wBAAwB;AACxB,+DAA+D;AAC/D,cAAc,sDAAsD,EAAE,qDAAqD;AAC3H,IAAI;;;AAGJ;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C,+DAAM;AACrD;AACA;AACA;;AAEA;AACA;AACA,6DAA6D;;AAE7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,4EAAY;;AAEhC;AACA,kBAAkB,8EAAc;AAChC,IAAI;AACJ,kBAAkB,6EAAa;AAC/B;;AAEA,qCAAqC;AACrC;AACA;;AAEA;AACA,yCAAyC;AACzC,uDAAuD,iEAAQ;;AAE/D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE,2DAA2D,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACA;AACA;AACP,yCAAyC,EAAE,MAAM,EAAE;AAC5C;AACP;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClEoD;;AAEyB;;AAExC;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;AACA;;;AAGA,IAAI,uDAAoB;AACxB,gDAAgD,uDAAoB;AACpE;AACA,IAAI,0EAA0B;AAC9B,gDAAgD,0EAA0B;AAC1E;AACA,IAAI,uDAAoB,IAAI,0EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;AC3B2H;AACrF;AACqG;AAC3I;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,iDAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,iEAAoB;AAC5C;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,+DAAkB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,6DAAgB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0DAAa;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,0DAAa;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,0DAAa;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,0DAAa;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,+DAAkB;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,IAAI,yDAAY;AAChB;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,wDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACpMuD;AACd;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA,SAAS,uEAAe;AACxB;AACA;AACA,GAAG;AACH;AACO;AACP;AACA,SAAS,uEAAe;AACxB;AACA;AACA,GAAG;AACH;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,yDAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,mCAAmC,yDAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,mCAAmC,yDAAQ;AAC3C;AACA;AACA;;AAEA;AACA,2BAA2B,gBAAgB,EAAE,KAAK;AAClD;AACA,GAAG;AACH;AACA;;AAEA;AACA,mCAAmC,yDAAQ;AAC3C;;AAEA;AACA,uCAAuC,UAAU;AACjD;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACzKA;AACA;AACA;AACA,iFAAiF,kCAAkC,gBAAgB;AACnI;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;ACNqB;;AAEyB;;AAEpC;AACrC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;AACA;;;AAGA,IAAI,mDAAoB;AACxB,gDAAgD,mDAAoB;AACpE;AACA,IAAI,sEAA0B;AAC9B,gDAAgD,sEAA0B;AAC1E;AACA,IAAI,mDAAoB,IAAI,sEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;AC9B2H;AACzF;AAC4E;AACpD;AAC1D;AACA;AACA;;AAEA,8BAA8B,iDAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,2DAAc,QAAQ,yDAAgB;AAClE;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,2DAAc,QAAQ,uDAAc;AAC9D;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,2DAAc,QAAQ,iDAAQ;AACzD;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,wEAAgB;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,+DAAkB;AACrC;AACA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,oDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACvHuD;AACd;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACP;AACA;AACO;AACP;AACA,SAAS,uEAAe;AACxB;AACA;AACA,GAAG;AACH;AACO;AACP,wBAAwB,yDAAQ;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACnDsD;AAC/C;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,4BAA4B,+DAAgB;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AC5DyD;AAClB,CAAC;;AAExC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,kEAA+B;AAC1C,YAAY,mEAAgC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,SAAS,uEAAe;AACxB;AACA;AACA,GAAG;AACH;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA,EAAE;;AAEK;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;AACA,0EAA0E;;AAE1E;AACA,sFAAsF;AACtF;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9IgD;AACzC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA,QAAQ,yDAAsB;AAC9B,WAAW,uDAAoB;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iEAA8B;AACtC;AACA,2BAA2B,iEAA8B,2BAA2B;;AAEpF,WAAW,yDAAsB;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,8CAAO;AAChB;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,uDAAoB;;AAElC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,WAAW,yDAAsB;AACjC;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,qBAAqB,4EAAyC;AAC9D,sBAAsB,6EAA0C;AAChE;AACA;AACA,qBAAqB,4EAAyC;AAC9D,sBAAsB,6EAA0C;AAChE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc,uDAAoB;;AAElC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,uBAAuB;AACtD,8BAA8B,qBAAqB;;AAEnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,WAAW;AAC7C,mCAAmC,YAAY;AAC/C;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AC7MgE;AAClB;AACsB;AACpB;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,yDAAsB;AAC/B,2CAA2C,qDAAkB,UAAU;;AAEvE,MAAM,8DAAM,uIAAuI,qDAAkB,CAAC;AACtK;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,uDAAY;AACrC;AACA;AACA;AACA;AACA,OAAO;;AAEP,IAAI,8CAAO;AACX;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,uDAAmB;AACnB;AACA,CAAC;;AAED;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;AC9GsC;AAC/B;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,mDAAY;AACrC;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFgE;AACxB;AACE;AACuF;AAC/E;AAC+I;AAC/E;AAClE;AACF;AACM;AACpD;;AAEA;AACA;AACA;;AAEA,MAAM,iEAA8B;AACpC,mBAAmB,iEAA8B,SAAS;AAC1D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gDAAgD,2DAAkB;;AAElE;AACA,qDAAqD,2DAAkB;AACvE;AACA;;AAEA;AACA;;AAEA;AACA,EAAE,8DAAM,mBAAmB,gDAAS;AACpC,EAAE,8DAAM,mBAAmB,yDAAsB,mBAAmB,gDAAS;AAC7E;;AAEA;AACA,EAAE,uDAAU;AACZ,yBAAyB,0DAAmB,CAAC,wDAAiB,yBAAyB,uDAAoB;;AAE3G;AACA,uBAAuB,uEAAgC;AACvD;;AAEA;;AAEA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,+DAAW;AAC9B,kBAAkB,+DAAW,iBAAiB;;AAE9C,2CAA2C;;AAE3C;AACA;AACA,IAAI;;;AAGJ,yCAAyC;;AAEzC;AACA;AACA;;AAEA,0BAA0B,mDAAU,CAAC,2DAAe;AACpD,0BAA0B,mDAAU,CAAC,yDAAa;AAClD;;AAEA;AACA,mBAAmB,uDAAgB;AACnC;AACA;AACA;AACA,cAAc,+DAAW;AACzB,eAAe;AACf,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC,MAAM;AACN,8BAA8B,mDAAU;AACxC;AACA;;AAEA;AACA,4BAA4B,mDAAU;AACtC;AACA;AACA,cAAc,+DAAW;AACzB,eAAe;AACf,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,EAAE,2DAAc;;AAEhB;AACA,IAAI,uDAAU;AACd;;AAEA,aAAa,uDAAY;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,uBAAuB,yDAAa;AACpC,6BAA6B,yDAAa;AAC1C,IAAI;AACJ;;;AAGA;;AAEA;AACA,2BAA2B,wDAAgB;AAC3C;AACA,MAAM,4BAA4B,qDAAa;AAC/C;AACA,MAAM,4BAA4B,wDAAgB;AAClD;AACA,gDAAgD,qDAAa;AAC7D,QAAQ;AACR,gDAAgD,wDAAgB;AAChE;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B,sDAAc;AAC3C;AACA,MAAM,8BAA8B,uDAAe;AACnD;AACA,MAAM,8BAA8B,wDAAgB;AACpD;AACA,oDAAoD,sDAAc;AAClE,QAAQ;AACR,oDAAoD,uDAAe;AACnE;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,yDAAa,qBAAqB,8DAAkB,mBAAmB,sDAAc;AAC/G,wBAAwB,yDAAa,mBAAmB,8DAAkB,iBAAiB,qDAAa;AACxG,KAAK;AACL;AACA,0BAA0B,yDAAa,2BAA2B,8DAAkB,yBAAyB,sDAAc;AAC3H,wBAAwB,yDAAa,yBAAyB,8DAAkB,uBAAuB,wDAAgB;AACvH;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,gEAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2CAA2C;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEO;AACP,EAAE,8DAAM;AACR,EAAE,8DAAM;AACR,eAAe,uDAAgB;AAC/B;AACA,mDAAmD;;AAEnD;AACA;AACA;;AAEA,kBAAkB,uDAAgB;AAClC,mBAAmB,uDAAgB,WAAW;;AAE9C,qBAAqB,6DAAe,kBAAkB;;AAEtD,+CAA+C;AAC/C;;AAEA;AACA;AACA,IAAI,wDAAW;AACf,IAAI;;;AAGJ,2BAA2B,6DAAe,iBAAiB;AAC3D;AACA;;AAEA;AACA;AACA,IAAI,wDAAW;AACf,IAAI;AACJ;;;AAGA,uBAAuB,wDAAiB,yBAAyB,sDAAS;AAC1E;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA,WAAW,qEAA8B;AACzC;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,uDAAmB;AACnB;AACA,CAAC;;;;;;;;;;;;;;;;;ACpXyC;AACE;AACrC;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,sDAAsD,qDAAkB,CAAC,IAAI,iCAAiC,qDAAkB,EAAE;;AAElI;AACA;AACA;AACA,MAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,uDAAU;AAChB;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AC1DgE;AAClB;AACa;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yEAAiB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,QAAQ,2DAAO;AACf;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uDAAmB;AACnB;AACA,CAAC;;AAED;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;ACvIoE;AAC5B;AACjC;AACP;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mEAAoB;AAC3C,uBAAuB,mEAAoB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,uDAAY,eAAe,uDAAY,eAAe,uDAAY,CAAC,yDAAiB;AAC7G,qEAAqE,sBAAsB,mEAAoB,CAAC,sDAAc,uBAAuB,mEAAoB,CAAC,sDAAc;AACxL;;AAEA;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAe;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;;AAGA;;AAEA,uBAAuB;;AAEvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1NgD;AACT;AAChC;;AAEP;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI,8DAAM;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEO;AACA;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,GAAG;AACH;AACO;AACP;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACO;AACP;;AAEA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP,iBAAiB,SAAS;AAC1B;AACO;AACP;AACA;AACA;AACA,6BAA6B,mBAAmB,IAAI,SAAS;AAC7D;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC,uBAAuB,4DAAG,oCAAoC;AAC9D;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;ACjNyD;;AAEyB;;AAE7C;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC,SAAS,KAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,4DAAoB;AACxB,gDAAgD,4DAAoB;AACpE;AACA,IAAI,+EAA0B;AAC9B,gDAAgD,+EAA0B;AAC1E;AACA,IAAI,4DAAoB,IAAI,+EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;ACtC2H;AAChF;AACA;AACgB;AAC3D;AACA;AACA;AACA;;AAEA,uCAAuC,iDAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA,IAAI;;;AAGJ;AACA,oBAAoB,yDAAQ,8CAA8C;;AAE1E;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,yEAAiB;AACrB;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,6DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;ACjJuD;;AAEyB;;AAE7C;AACrC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,4DAAoB;AACxB,gDAAgD,4DAAoB;AACpE;AACA,IAAI,+EAA0B;AAC9B,gDAAgD,+EAA0B;AAC1E;AACA,IAAI,4DAAoB,IAAI,+EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;ACvB2H;AAChF;AACiF;AACjF;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,iDAAgB;AACvD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,wEAAgB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,wEAAgB;AACpB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,wEAAgB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,wEAAgB;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,8BAA8B,uEAAe;AAC7C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,8BAA8B,uEAAe;AAC7C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA,4BAA4B,uEAAe;AAC3C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,0DAAM;AACd;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,MAAM,wEAAgB;AACtB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,oBAAoB,yDAAQ;AAC5B,gBAAgB,6EAAqB;AACrC;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,6DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;AChVkE;;AAEyB;;AAE/B;AACM;AAC/B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sFAAsF;AAC/F,SAAS,UAAU;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG,wIAAwI,+DAAuB,kKAAkK,kEAA0B;AAC9V;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,uEAAoB;AACxB,gDAAgD,uEAAoB;AACpE;AACA,IAAI,0FAA0B;AAC9B,gDAAgD,0FAA0B;AAC1E;AACA,IAAI,uEAAoB,IAAI,0FAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;ACrF2H;AACrE;AACoC;AACtB;AACV;AAC1D;AACA,mBAAmB,8FAAoB;AACvC;;AAEA,yCAAyC,iDAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,yBAAyB;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,mEAAY;AAC3C;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,qEAAc;AAClC,kBAAkB,oEAAa;AAC/B,OAAO;AACP;AACA,oBAAoB,qEAAc;AAClC,kBAAkB,uEAAgB;AAClC,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,wEAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;ACjIF;AACA;AACA;AACA,sCAAsC,uBAAuB;AAC7D;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;ACNyC;;AAEyB;;AAExD;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;AACA;;;AAGA,IAAI,uEAAoB;AACxB,gDAAgD,uEAAoB;AACpE;AACA,IAAI,0FAA0B;AAC9B,gDAAgD,0FAA0B;AAC1E;AACA,IAAI,uEAAoB,IAAI,0FAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;AC3B2H;AACrE;AACI;;AAE1D,kDAAkD,iDAAgB;AAClE;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,wEAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;AC1FF;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,GAAG;;AAEN;AACA;AACA;;AAEA;AACA,YAAY,SAAS,EAAE,IAAI;AAC3B,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,gWAA8C;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,6VAA6C;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,mWAA+C;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,gWAA8C;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,6VAA6C;AACjE;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,uVAA2C;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,oVAA0C;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,0VAA4C;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,uVAA2C;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,oVAA0C;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzIA;AACA;AACA;AACA,0EAA0E,sBAAsB;AAChG;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;ACN4B;;AAEyB;;AAExB;AACxD;AACA,SAAS,yCAAyC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,oBAAoB,sDAAiB;AACrC,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,0DAAoB;AACxB,gDAAgD,0DAAoB;AACpE;AACA,IAAI,6EAA0B;AAC9B,gDAAgD,6EAA0B;AAC1E;AACA,IAAI,0DAAoB,IAAI,6EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrC2H;AAClF;AACE;AAC2B;AAClB;AACiB;AAC9B;AACoC;;AAE3E,qCAAqC,iDAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,gEAAW;AACnB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA,QAAQ,sDAAc,CAAC,4DAAG;AAC1B,yBAAyB,sDAAc,CAAC,4DAAG;AAC3C;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,wDAAgB,CAAC,4DAAG;AACrD,QAAQ;AACR;AACA,mGAAmG,cAAc,IAAI,UAAU;AAC/H;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,6DAAQ;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,gEAAW;AACvB;AACA,+CAA+C,WAAW,GAAG,SAAS;;AAEtE;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,2DAAgB;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,4DAAO;AAClB;;AAEA;AACA,WAAW,uEAAS;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uEAAS;AACpB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,oBAAoB,yDAAQ;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+BAA+B,eAAe;AAC9C;;AAEA;AACA;AACA;;;AAGA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,2DAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AC/L8C;;AAEyB;;AAErB;AACf;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uIAAuI;AAChJ,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,oIAAoI,0DAAkB;AACzJ;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,mDAAoB;AACxB,gDAAgD,mDAAoB;AACpE;AACA,IAAI,sEAA0B;AAC9B,gDAAgD,sEAA0B;AAC1E;AACA,IAAI,mDAAoB,IAAI,sEAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;ACrG2H;AACzF;AACsC;AAC7B;AACkE;AAC0B;AACvI;AACA,YAAY,mFAAa;AACzB;;AAEA,8BAA8B,iDAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,kEAAgB;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,wEAAgB;AACpB,0BAA0B,oEAAY;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA,4BAA4B,kEAAgB;AAC5C;;AAEA;AACA,oBAAoB,sEAAgB;AACpC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,qBAAqB,wEAAgB;AACrC;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI,yEAAiB;AACrB,oDAAoD,uEAAqB;AACzE,uDAAuD,sEAAoB;AAC3E,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,0BAA0B,qEAAe;AACzC;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,sEAAoB;AAChD;;AAEA;AACA,WAAW,yDAAQ;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA,gCAAgC,oEAAkB;AAClD;AACA;AACA,qDAAqD,mEAAa;AAClE;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iEAAe,sDAAkB;AACjC,QAAQ,oDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;AC3ZkD;;AAEyB;;AAEzB;AACQ;AACvB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0GAA0G;AACnH,SAAS,mCAAmC;AAC5C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG,oKAAoK,0DAAkB;AACzL;AACA;AACA,KAAK;AACL;AACA,GAAG,yFAAyF,8DAAsB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,iEAAe,qDAAgB,MAAM,EAAC;AACtC;;;AAGA,IAAI,uDAAoB;AACxB,gDAAgD,uDAAoB;AACpE;AACA,IAAI,0EAA0B;AAC9B,gDAAgD,0EAA0B;AAC1E;AACA,IAAI,uDAAoB,IAAI,0EAA0B;AACtD;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvF2H;AACrF;;AAEtC;AACqF;AACI;AACE;AACnB;AACA;AACE;AAC7B;AACW;AACqG;AAC/F;AAC+B;AAC5B;AACjE;AACA,eAAe,6FAAgB;AAC/B,iBAAiB,+FAAkB;AACnC,kBAAkB,gGAAmB;AACrC,YAAY,mFAAa;AACzB;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,iDAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,4DAAW;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,4DAAW,qBAAqB,wFAAgB;AAC7F;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,4DAAW,sBAAsB,wFAAgB;AAC/F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,6EAAoB;AAChD,2BAA2B,wFAAgB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;;AAErC;AACA,sBAAsB,mEAAgB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,yEAAgB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,mEAAgB;AAC5C;;AAEA;AACA,oBAAoB,uEAAgB;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,wEAAe;AACrC;AACA;AACA,KAAK;AACL;AACA,2BAA2B,wFAAgB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,yEAAgB;AACpB;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,uEAAoB;AAChD;;AAEA;AACA,WAAW,yDAAQ;AACnB;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,iFAAe;AAC7C;AACA,oBAAoB,iFAAS,CAAC,6EAAoB;AAClD;AACA,oBAAoB,iFAAS,CAAC,6EAAoB;AAClD;AACA;;AAEA,6BAA6B,gBAAgB;AAC7C,4BAA4B,cAAc;AAC1C;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA,UAAU;;;AAGV;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,0DAAkB;;AAE9C;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;;AAEA;AACA,6BAA6B;;AAE7B;AACA;AACA;;AAEA;AACA,yBAAyB,wFAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,kFAAU;AACvB;;AAEA,WAAW,wFAAgB;AAC3B;;AAEA;AACA,+BAA+B,iFAAS,CAAC,6EAAoB;AAC7D,qBAAqB,gFAAQ;AAC7B;;AAEA;AACA,+BAA+B,iFAAS,CAAC,6EAAoB;AAC7D,qBAAqB,+EAAO;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,kFAAgB;AACrC;;AAEA;AACA,qBAAqB,iFAAe;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,kFAAgB,EAAE,iFAAe;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,8FAAsB;AACpC;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,uEAAoB;AAChD;AACA;;;AAGA;;AAEA;;AAEA,uDAAmB;AACniEAAe,sDAAkB;AACjC,QAAQ,wDAAK;AACb,CAAC,CAAC;;;;;;;;;;;;;;;;ACxkBkF;AACpF;AACA;AACA;;AAEO;AACP,uBAAuB,gFAAS;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,uFAAgB;AACzB;;;;;;;;;;;;;;;;;;;;;;ACpC+E;;AAE/E,2CAA2C,gCAAgC,oCAAoC,oDAAoD,6DAA6D,iEAAiE,sCAAsC;;AAEvU,iCAAiC,gBAAgB,sBAAsB,OAAO,uDAAuD,6DAA6D,4CAA4C,oKAAoK,mFAAmF,KAAK;;AAE1e,4CAA4C,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;;AAEhI;AAC2B;AAC9B;AACX;AAC/C;AACP,qBAAqB,cAAc,GAAG,4DAAI,GAAG;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,4BAA4B,kDAAa;AACzC,UAAU,iEAAwB;AAClC,KAAK;AACL;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAM;AACV;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,iBAAiB,uEAAe;AAChC;AACA;AACA,KAAK,GAAG;;AAER;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,8EAAsB;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iGAAiG;;AAEjG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,YAAY;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,mEAAY;AAC3C,MAAM;;;AAGN;AACA,mDAAmD,qEAAc;AACjE,+CAA+C,uEAAgB;AAC/D;AACA;AACA,yDAAyD,qEAAc;AACvE,qDAAqD,oEAAa;AAClE,OAAO;;AAEP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uDAAmB;AACnB;AACA,CAAC;;;;;;;;;;;;;;;;AChWkC;AACnC;AACA;AACA;AACA;;AAEO;AACP,MAAM,4CAAM;AACZ;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AClBA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,yCAAyC;AACzC,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,2CAA2C,mBAAmB;AAC9D;AACA,KAAK;AACL;AACA;;AAEA;AACA,0CAA0C,mBAAmB;AAC7D,yCAAyC,6BAA6B,EAAE,cAAc;;AAEtF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;;AAGO;AACP;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,8CAA8C;AACpE;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AC3FO;AACP,MAAM,IAAqC;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACNO;AACA;AACA,0CAA0C;;AAE1C;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACfO;AACP;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB,UAAU,UAAU;AACpB,WAAW,cAAc;AACzB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB,UAAU,UAAU;AACpB,WAAW,cAAc;AACzB;;;AAGA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB,WAAW,SAAS;AACpB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB,UAAU,UAAU;AACpB,WAAW,cAAc;AACzB;;;AAGA;AACA;;AAEA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO,aAAa,kBAAkB;AACnD;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;ACxDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB;;AAEO;AACP;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,qBAAqB;;AAErB;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;AClFwC;AACjC,6EAA6E,WAAW,OAAO,wCAAwC,2CAA2C,KAAK,qoCAAqoC,KAAK,2nCAA2nC,UAAU,OAAO;AAC78E,yCAAyC,KAAK,YAAY,MAAM,aAAa,MAAM,EAAE,KAAK;AAC1F;AACA;AACA;AACP,SAAS,qDAAe;AACxB;AACO;AACP,mBAAmB,MAAM;AACzB;;;;;;;;;;;;;;;;;ACVoH;AACpH;AACA;AACA;;AAEA,iCAAiC,0DAAkB,CAAC,IAAI,sDAAc,CAAC,GAAG,wDAAgB,CAAC;AAC3F,yCAAyC,sDAAc,CAAC,GAAG,wDAAgB,CAAC;AAC5E,8BAA8B,wDAAgB;AAC9C,gCAAgC,0DAAkB;;AAElD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,0DAAc;AACxB,YAAY,IAAI,GAAG,MAAM;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,2DAAe;AACzB,YAAY,MAAM,GAAG,MAAM;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,0BAA0B,SAAS;AACnC;AACA;AACA,aAAa;AACb;;;AAGO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,aAAa;AACb;;AAEO;AACP;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA,QAAQ,QAAQ;AAChB,QAAQ,QAAQ;AAChB,QAAQ,QAAQ;AAChB,QAAQ,OAAO;AACf,SAAS,QAAQ;AACjB;AACO,2CAA2C;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,KAAK;AACb,SAAS,SAAS;AAClB;;AAEO;AACP;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,KAAK;AACb,SAAS,QAAQ;AACjB;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;ACvDA;AACA;AACO;AACP;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA,mCAAmC;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;AACO;AACP;AACA;;;;;;;;;;;;;;;;ACH6C;AAC7C;AACA,2BAA2B,GAAG;AAC9B,uBAAuB,EAAE,KAAK,EAAE,KAAK,EAAE;AACvC,+BAA+B,GAAG;AAClC,2BAA2B,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;;AAEzC;AACP,4CAA4C,+DAAM;AAClD;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACvCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACO;AACP;AACA;AACO;AACP;AACA,uCAAuC,SAAS,IAAI,IAAI;AACxD;;;;;;;;;;;;;;;;;ACPA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,cAAc;AAC3B;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,wEAAwE,MAAM,IAAI;AAClF;AACA;AACA;;AAEA;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpF2B;AACuC;AAC3B;AACS;AAC3B;AAC2B;AACO;AAChC;AAC0B;AACqB;AAClC;AAC6D;AACc;AACvF;AACwB;AACT;AACY;AACwB;AAC3B;AACC;AACxD;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA,IAAI,sEAAiB;AACrB,GAAG;AACH;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;;AAEO;AACP,kCAAkC,sBAAsB,sBAAsB,wBAAwB,wBAAwB;AAC9H;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AClMA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACO;AACP;AACA;;;;;;;;;;;;;;;AC3BA;AACA,kDAAkD,EAAE;AACpD,WAAW,QAAQ,iFAAiF,EAAE;AACtG,YAAY,cAAc;AAC1B,aAAa,QAAQ,+BAA+B,GAAG,MAAM,EAAE;AAC/D;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,MAAM;AAC7B;AACA,GAAG;AACH;;;;;;;;;;;;;;;ACjBA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACsC;AACY;;;;;;;;;;;;ACLrC;AACb,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;;ACRL;AACb,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;ACRlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAA0C;AAC/C,EAAE,iCAAqB,EAAE,mCAAE,cAAc,uBAAuB;AAAA,kGAAC;AACjE,GAAG,KAAK,EAKN;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC7UD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;;;;;;;;;;;;;;;;ACrF+B;AACK;AACkB;AACtD,iBAAiB,kDAAa;AAC9B,MAAM,kEAAW;AACjB,CAAC;AACD,sD","sources":["webpack://sfmc-activity-extract-data/./client/src/test/testdata/ sync ^\\.\\/.*\\.json$","webpack://sfmc-activity-extract-data/./node_modules/@lwc/engine-dom/dist/engine-dom.cjs.js","webpack://sfmc-activity-extract-data/./node_modules/@lwc/synthetic-shadow/dist/synthetic-shadow.js","webpack://sfmc-activity-extract-data/./client/src/extract-data/extract-data.css","webpack://sfmc-activity-extract-data/./client/src/extract-data/extract-data.html","webpack://sfmc-activity-extract-data/./client/src/extract-data/extract-data.js","webpack://sfmc-activity-extract-data/./client/src/test/testMock.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-client-formFactor.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-currency.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.longDateFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumDateFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.mediumTimeFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.shortDateFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dateTime.shortTimeFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-dir.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-firstDayOfWeek.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-lang.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-locale.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.currencyFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.decimalSeparator.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.groupingSeparator.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.numberFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-number.percentFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-showJapaneseCalendar.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-i18n-timeZone.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-Duration.secondsAgo.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-Duration.secondsLater.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.a11yTriggerText.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.bInput.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.blueAbbr.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.cancelButton.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.colorPickerInstructions.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.doneButton.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.errorMessage.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.gInput.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.greenAbbr.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.hexLabel.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.hueInput.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.rInput.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPicker.redAbbr.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPickerPanel.customTab.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningColorPickerPanel.defaultTab.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.ariaSelectedOptions.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.deselectOptionKeyboard.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.loadingText.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningCombobox.pillCloseButtonAlternativeText.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.activeCapitalized.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.clear.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.inactiveCapitalized.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.loading.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningControl.required.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.ariaLabelMonth.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.dateLabel.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.invalidDate.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.maxRangeMessage.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.minAndMaxRangeMessage.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.minRangeMessage.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.nextMonth.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.previousMonth.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeOverflow.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.rangeUnderflow.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.selectDateFor.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.timeLabel.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.today.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningDateTimePicker.yearSelector.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityBadInput.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityPatternMismatch.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityRangeOverflow.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityRangeUnderflow.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validitySelectAtleastOne.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityStepMismatch.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTooLong.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTooShort.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityTypeMismatch.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningErrorMessage.validityValueMissing.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningHelptext.buttonAlternativeText.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInput.helptextAlternativeText.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputFile.bodyText.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputFile.buttonLabel.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputNumber.decrementCounter.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/scopedImports/@salesforce-label-LightningInputNumber.incrementCounter.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/ariaObserver/ariaObserver.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseComboboxFormattedText/baseComboboxFormattedText.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseComboboxItem/baseComboboxItem.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseComboboxItem/card.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseComboboxItem/inline.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.css","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseCombobox/baseCombobox.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseCombobox/baseComboboxEvents.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/baseCombobox/keyboard.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/buttonIcon/buttonIcon.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/button/button.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/button/button.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/calendar/calendar.css","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/calendar/calendar.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/calendar/calendar.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/calendar/keyboard.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorPickerCustom.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/colorPickerCustom/colorUtil.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/colorPickerPanel/colorPickerPanel.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/configProvider/configProvider.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/configProvider/defaultConfig.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/configProvider/defaultDurationConfig.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/configProvider/defaultLocalizationConfig.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/datepicker/datepicker.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/datepicker/keyboard.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/datetimepicker/datetimepicker.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/datetimepicker/datetimepicker.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/focusTrap/focusTrap.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/focusTrap/focusTrap.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/focusUtils/focus.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/helptext/helptext.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/helptext/helptext.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/iconUtils/fetchSvg.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/iconUtils/iconUtils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/iconUtils/isIframeInEdge.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/iconUtils/polyfill.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/iconUtils/supportsSvg.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/icon/icon.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/icon/icon.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/icon/util.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/inputUtils/idGenerator.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/inputUtils/inputUtils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/inputUtils/interacting.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/inputUtils/normalize.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/inputUtils/validity.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/input/dateTimeUtil.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/input/emailUtil.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/input/input.css","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/input/input.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/input/input.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/input/normalize.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/input/numberUtil.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/input/selection.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/address/AddressFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeOptions.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/dateTimeUtils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/intlDisplayNames.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/datetime/intlFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/duration/RelativeFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/internationalizationLibrary.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/localizationService.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/name/NameFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/NumberFormat.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/numberFormatFallback.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/numberOptions.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/internationalizationLibrary/number/utils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/iso8601Utils/iso8601Utils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/layoutItem/layoutItem.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/layoutItem/layoutItem.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/layoutItem/styleUtils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/layout/layout.css","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/layout/layout.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/layout/layout.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/layout/styleUtils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/constraint.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/direction.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxy.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/elementProxyCache.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/overlayDetector.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/positionLibrary.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/relationship.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/reposition.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/transformBuilder.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/transformers.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/positionLibrary/util.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveBubble/primitiveBubble.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveButton/primitiveButton.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveColorpickerButton/primitiveColorpickerButton.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.css","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveFileDroppableZone/primitiveFileDroppableZone.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveIcon/fetch.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.css","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/primitiveIcon/primitiveIcon.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/select/select.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/select/select.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.html","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/timepicker/timepicker.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/timepicker/utils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/tooltipLibrary/tooltipLibrary.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/animation.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/aria.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/assert.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/browser.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/classListMutation.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/eventEmitter.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/guid.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/inert.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/keyboard.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkUtils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/linkify.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/normalize.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/observers.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/pageReference.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/phonify.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/scroll.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/smartSetAttribute.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/url.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/utility.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/utilsPrivate.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utilsPrivate/videoUtils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utils/classSet.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utils/labelUtils.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utils/queryFocusable.js","webpack://sfmc-activity-extract-data/./node_modules/lightning-base-components/src/lightning/utils/utils.js","webpack://sfmc-activity-extract-data/./node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js","webpack://sfmc-activity-extract-data/./node_modules/lwc-webpack-plugin/dist/mocks/empty-style.js?4125","webpack://sfmc-activity-extract-data/./node_modules/postmonger/postmonger.js","webpack://sfmc-activity-extract-data/webpack/bootstrap","webpack://sfmc-activity-extract-data/webpack/runtime/compat get default export","webpack://sfmc-activity-extract-data/webpack/runtime/define property getters","webpack://sfmc-activity-extract-data/webpack/runtime/ensure chunk","webpack://sfmc-activity-extract-data/webpack/runtime/get javascript chunk filename","webpack://sfmc-activity-extract-data/webpack/runtime/global","webpack://sfmc-activity-extract-data/webpack/runtime/hasOwnProperty shorthand","webpack://sfmc-activity-extract-data/webpack/runtime/load script","webpack://sfmc-activity-extract-data/webpack/runtime/make namespace object","webpack://sfmc-activity-extract-data/webpack/runtime/publicPath","webpack://sfmc-activity-extract-data/webpack/runtime/jsonp chunk loading","webpack://sfmc-activity-extract-data/./client/src/index.js"],"sourcesContent":["var map = {\n\t\"./ready.json\": \"./client/src/test/testdata/ready.json\",\n\t\"./requestActivityPermissions.json\": \"./client/src/test/testdata/requestActivityPermissions.json\",\n\t\"./requestContactsSchema.json\": \"./client/src/test/testdata/requestContactsSchema.json\",\n\t\"./requestCulture.json\": \"./client/src/test/testdata/requestCulture.json\",\n\t\"./requestDataSources.json\": \"./client/src/test/testdata/requestDataSources.json\",\n\t\"./requestEndpoints.json\": \"./client/src/test/testdata/requestEndpoints.json\",\n\t\"./requestEngineSettings.json\": \"./client/src/test/testdata/requestEngineSettings.json\",\n\t\"./requestEntryEventDefinitionKey.json\": \"./client/src/test/testdata/requestEntryEventDefinitionKey.json\",\n\t\"./requestExpressionBuilderAttributes.json\": \"./client/src/test/testdata/requestExpressionBuilderAttributes.json\",\n\t\"./requestI18nConfig.json\": \"./client/src/test/testdata/requestI18nConfig.json\",\n\t\"./requestInteraction.json\": \"./client/src/test/testdata/requestInteraction.json\",\n\t\"./requestInteractionDefaults.json\": \"./client/src/test/testdata/requestInteractionDefaults.json\",\n\t\"./requestSchema.json\": \"./client/src/test/testdata/requestSchema.json\",\n\t\"./requestTokens.json\": \"./client/src/test/testdata/requestTokens.json\",\n\t\"./requestTriggerEventDefinition.json\": \"./client/src/test/testdata/requestTriggerEventDefinition.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./client/src/test/testdata sync recursive ^\\\\.\\\\/.*\\\\.json$\";","/* proxy-compat-disable */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction invariant(value, msg) {\n    if (!value) {\n        throw new Error(`Invariant Violation: ${msg}`);\n    }\n}\nfunction isTrue$1(value, msg) {\n    if (!value) {\n        throw new Error(`Assert Violation: ${msg}`);\n    }\n}\nfunction isFalse$1(value, msg) {\n    if (value) {\n        throw new Error(`Assert Violation: ${msg}`);\n    }\n}\nfunction fail(msg) {\n    throw new Error(msg);\n}\n\nvar assert = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    invariant: invariant,\n    isTrue: isTrue$1,\n    isFalse: isFalse$1,\n    fail: fail\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst { assign, create, defineProperties, defineProperty, freeze, getOwnPropertyDescriptor: getOwnPropertyDescriptor$1, getOwnPropertyNames: getOwnPropertyNames$1, getPrototypeOf: getPrototypeOf$1, hasOwnProperty: hasOwnProperty$1, isFrozen, keys, seal, setPrototypeOf, } = Object;\nconst { isArray: isArray$1 } = Array;\nconst { filter: ArrayFilter, find: ArrayFind, indexOf: ArrayIndexOf, join: ArrayJoin, map: ArrayMap, push: ArrayPush$1, reduce: ArrayReduce, reverse: ArrayReverse, slice: ArraySlice, splice: ArraySplice, unshift: ArrayUnshift, forEach, } = Array.prototype;\nconst { fromCharCode: StringFromCharCode } = String;\nconst { charCodeAt: StringCharCodeAt, replace: StringReplace, slice: StringSlice, toLowerCase: StringToLowerCase, } = String.prototype;\nfunction isUndefined$1(obj) {\n    return obj === undefined;\n}\nfunction isNull(obj) {\n    return obj === null;\n}\nfunction isTrue(obj) {\n    return obj === true;\n}\nfunction isFalse(obj) {\n    return obj === false;\n}\nfunction isBoolean(obj) {\n    return typeof obj === 'boolean';\n}\nfunction isFunction$1(obj) {\n    return typeof obj === 'function';\n}\nfunction isObject(obj) {\n    return typeof obj === 'object';\n}\nfunction isString(obj) {\n    return typeof obj === 'string';\n}\nfunction isNumber(obj) {\n    return typeof obj === 'number';\n}\nfunction noop() {\n    /* Do nothing */\n}\nconst OtS$1 = {}.toString;\nfunction toString$1(obj) {\n    if (obj && obj.toString) {\n        // Arrays might hold objects with \"null\" prototype So using\n        // Array.prototype.toString directly will cause an error Iterate through\n        // all the items and handle individually.\n        if (isArray$1(obj)) {\n            return ArrayJoin.call(ArrayMap.call(obj, toString$1), ',');\n        }\n        return obj.toString();\n    }\n    else if (typeof obj === 'object') {\n        return OtS$1.call(obj);\n    }\n    else {\n        return obj + '';\n    }\n}\nfunction getPropertyDescriptor(o, p) {\n    do {\n        const d = getOwnPropertyDescriptor$1(o, p);\n        if (!isUndefined$1(d)) {\n            return d;\n        }\n        o = getPrototypeOf$1(o);\n    } while (o !== null);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * According to the following list, there are 48 aria attributes of which two (ariaDropEffect and\n * ariaGrabbed) are deprecated:\n * https://www.w3.org/TR/wai-aria-1.1/#x6-6-definitions-of-states-and-properties-all-aria-attributes\n *\n * The above list of 46 aria attributes is consistent with the following resources:\n * https://github.com/w3c/aria/pull/708/files#diff-eacf331f0ffc35d4b482f1d15a887d3bR11060\n * https://wicg.github.io/aom/spec/aria-reflection.html\n */\nconst AriaPropertyNames = [\n    'ariaActiveDescendant',\n    'ariaAtomic',\n    'ariaAutoComplete',\n    'ariaBusy',\n    'ariaChecked',\n    'ariaColCount',\n    'ariaColIndex',\n    'ariaColSpan',\n    'ariaControls',\n    'ariaCurrent',\n    'ariaDescribedBy',\n    'ariaDetails',\n    'ariaDisabled',\n    'ariaErrorMessage',\n    'ariaExpanded',\n    'ariaFlowTo',\n    'ariaHasPopup',\n    'ariaHidden',\n    'ariaInvalid',\n    'ariaKeyShortcuts',\n    'ariaLabel',\n    'ariaLabelledBy',\n    'ariaLevel',\n    'ariaLive',\n    'ariaModal',\n    'ariaMultiLine',\n    'ariaMultiSelectable',\n    'ariaOrientation',\n    'ariaOwns',\n    'ariaPlaceholder',\n    'ariaPosInSet',\n    'ariaPressed',\n    'ariaReadOnly',\n    'ariaRelevant',\n    'ariaRequired',\n    'ariaRoleDescription',\n    'ariaRowCount',\n    'ariaRowIndex',\n    'ariaRowSpan',\n    'ariaSelected',\n    'ariaSetSize',\n    'ariaSort',\n    'ariaValueMax',\n    'ariaValueMin',\n    'ariaValueNow',\n    'ariaValueText',\n    'role',\n];\nconst { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap } = /*@__PURE__*/ (() => {\n    const AriaAttrNameToPropNameMap = create(null);\n    const AriaPropNameToAttrNameMap = create(null);\n    // Synthetic creation of all AOM property descriptors for Custom Elements\n    forEach.call(AriaPropertyNames, (propName) => {\n        const attrName = StringToLowerCase.call(StringReplace.call(propName, /^aria/, () => 'aria-'));\n        AriaAttrNameToPropNameMap[attrName] = propName;\n        AriaPropNameToAttrNameMap[propName] = attrName;\n    });\n    return { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap };\n})();\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Inspired from: https://mathiasbynens.be/notes/globalthis\nconst _globalThis = /*@__PURE__*/ (function () {\n    // On recent browsers, `globalThis` is already defined. In this case return it directly.\n    if (typeof globalThis === 'object') {\n        return globalThis;\n    }\n    let _globalThis;\n    try {\n        // eslint-disable-next-line no-extend-native\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // __magic__ is undefined in Safari 10 and IE10 and older.\n        // @ts-ignore\n        // eslint-disable-next-line no-undef\n        _globalThis = __magic__;\n        // @ts-ignore\n        delete Object.prototype.__magic__;\n    }\n    catch (ex) {\n        // In IE8, Object.defineProperty only works on DOM objects.\n    }\n    finally {\n        // If the magic above fails for some reason we assume that we are in a legacy browser.\n        // Assume `window` exists in this case.\n        if (typeof _globalThis === 'undefined') {\n            // @ts-ignore\n            _globalThis = window;\n        }\n    }\n    return _globalThis;\n})();\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst KEY__IS_NATIVE_SHADOW_ROOT_DEFINED = '$isNativeShadowRootDefined$';\nconst KEY__SHADOW_RESOLVER = '$shadowResolver$';\nconst KEY__SHADOW_TOKEN = '$shadowToken$';\nconst KEY__SYNTHETIC_MODE = '$$lwc-synthetic-mode';\nconst KEY__SCOPED_CSS = '$scoped$';\n/**\n * Map composed of properties to attributes not following the HTML property to attribute mapping\n * convention.\n */\nconst NO_STANDARD_PROPERTY_ATTRIBUTE_MAPPING = new Map([\n    ['accessKey', 'accesskey'],\n    ['readOnly', 'readonly'],\n    ['tabIndex', 'tabindex'],\n    ['bgColor', 'bgcolor'],\n    ['colSpan', 'colspan'],\n    ['rowSpan', 'rowspan'],\n    ['contentEditable', 'contenteditable'],\n    ['crossOrigin', 'crossorigin'],\n    ['dateTime', 'datetime'],\n    ['formAction', 'formaction'],\n    ['isMap', 'ismap'],\n    ['maxLength', 'maxlength'],\n    ['minLength', 'minlength'],\n    ['noValidate', 'novalidate'],\n    ['useMap', 'usemap'],\n    ['htmlFor', 'for'],\n]);\n/**\n * Map associating previously transformed HTML property into HTML attribute.\n */\nconst CACHED_PROPERTY_ATTRIBUTE_MAPPING = new Map();\nfunction htmlPropertyToAttribute(propName) {\n    const ariaAttributeName = AriaPropNameToAttrNameMap[propName];\n    if (!isUndefined$1(ariaAttributeName)) {\n        return ariaAttributeName;\n    }\n    const specialAttributeName = NO_STANDARD_PROPERTY_ATTRIBUTE_MAPPING.get(propName);\n    if (!isUndefined$1(specialAttributeName)) {\n        return specialAttributeName;\n    }\n    const cachedAttributeName = CACHED_PROPERTY_ATTRIBUTE_MAPPING.get(propName);\n    if (!isUndefined$1(cachedAttributeName)) {\n        return cachedAttributeName;\n    }\n    let attributeName = '';\n    for (let i = 0, len = propName.length; i < len; i++) {\n        const code = StringCharCodeAt.call(propName, i);\n        if (code >= 65 && // \"A\"\n            code <= 90 // \"Z\"\n        ) {\n            attributeName += '-' + StringFromCharCode(code + 32);\n        }\n        else {\n            attributeName += StringFromCharCode(code);\n        }\n    }\n    CACHED_PROPERTY_ATTRIBUTE_MAPPING.set(propName, attributeName);\n    return attributeName;\n}\nconst XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nconst XLINK_NAMESPACE = 'http://www.w3.org/1999/xlink';\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Increment whenever the LWC template compiler changes\nconst LWC_VERSION = \"2.13.0\";\nconst LWC_VERSION_COMMENT_REGEX = /\\/\\*LWC compiler v([\\d.]+)\\*\\/\\s*}/;\n/** version: 2.13.0 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect(propName) {\n    return Object.getOwnPropertyDescriptor(Element.prototype, propName) === undefined;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst nodeToAriaPropertyValuesMap = new WeakMap();\nfunction getAriaPropertyMap(elm) {\n    let map = nodeToAriaPropertyValuesMap.get(elm);\n    if (map === undefined) {\n        map = {};\n        nodeToAriaPropertyValuesMap.set(elm, map);\n    }\n    return map;\n}\nfunction getNormalizedAriaPropertyValue(value) {\n    return value == null ? null : String(value);\n}\nfunction createAriaPropertyPropertyDescriptor(propName, attrName) {\n    return {\n        get() {\n            const map = getAriaPropertyMap(this);\n            if (hasOwnProperty$1.call(map, propName)) {\n                return map[propName];\n            }\n            // otherwise just reflect what's in the attribute\n            return this.hasAttribute(attrName) ? this.getAttribute(attrName) : null;\n        },\n        set(newValue) {\n            const normalizedValue = getNormalizedAriaPropertyValue(newValue);\n            const map = getAriaPropertyMap(this);\n            map[propName] = normalizedValue;\n            // reflect into the corresponding attribute\n            if (newValue === null) {\n                this.removeAttribute(attrName);\n            }\n            else {\n                this.setAttribute(attrName, newValue);\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    };\n}\nfunction patch$1(propName) {\n    // Typescript is inferring the wrong function type for this particular\n    // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n    // @ts-ignore type-mismatch\n    const attrName = AriaPropNameToAttrNameMap[propName];\n    const descriptor = createAriaPropertyPropertyDescriptor(propName, attrName);\n    Object.defineProperty(Element.prototype, propName, descriptor);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ElementPrototypeAriaPropertyNames = keys(AriaPropNameToAttrNameMap);\nfor (let i = 0, len = ElementPrototypeAriaPropertyNames.length; i < len; i += 1) {\n    const propName = ElementPrototypeAriaPropertyNames[i];\n    if (detect(propName)) {\n        patch$1(propName);\n    }\n}\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst features = {\n    ENABLE_ELEMENT_PATCH: null,\n    ENABLE_FORCE_NATIVE_SHADOW_MODE_FOR_TEST: null,\n    ENABLE_HMR: null,\n    ENABLE_HTML_COLLECTIONS_PATCH: null,\n    ENABLE_INNER_OUTER_TEXT_PATCH: null,\n    ENABLE_MIXED_SHADOW_MODE: null,\n    ENABLE_NODE_LIST_PATCH: null,\n    ENABLE_NODE_PATCH: null,\n    ENABLE_REACTIVE_SETTER: null,\n    ENABLE_WIRE_SYNC_EMIT: null,\n};\nif (!_globalThis.lwcRuntimeFlags) {\n    Object.defineProperty(_globalThis, 'lwcRuntimeFlags', { value: create(null) });\n}\nconst runtimeFlags = _globalThis.lwcRuntimeFlags;\n/**\n * Set the value at runtime of a given feature flag. This method only be invoked once per feature\n * flag. It is meant to be used during the app initialization.\n */\nfunction setFeatureFlag(name, value) {\n    if (!isBoolean(value)) {\n        const message = `Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". Runtime feature flags can only be set to a boolean value.`;\n        if (process.env.NODE_ENV !== 'production') {\n            throw new TypeError(message);\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.error(message);\n            return;\n        }\n    }\n    if (isUndefined$1(features[name])) {\n        const availableFlags = keys(features)\n            .map((name) => `\"${name}\"`)\n            .join(', ');\n        // eslint-disable-next-line no-console\n        console.warn(`Failed to set the value \"${value}\" for the runtime feature flag \"${name}\" because it is undefined. Available flags: ${availableFlags}.`);\n        return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        // Allow the same flag to be set more than once outside of production to enable testing\n        runtimeFlags[name] = value;\n    }\n    else {\n        // Disallow the same flag to be set more than once in production\n        const runtimeValue = runtimeFlags[name];\n        if (!isUndefined$1(runtimeValue)) {\n            // eslint-disable-next-line no-console\n            console.error(`Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". \"${name}\" has already been set with the value \"${runtimeValue}\".`);\n            return;\n        }\n        defineProperty(runtimeFlags, name, { value });\n    }\n}\n/**\n * Set the value at runtime of a given feature flag. This method should only be used for testing\n * purposes. It is a no-op when invoked in production mode.\n */\nfunction setFeatureFlagForTest(name, value) {\n    if (process.env.NODE_ENV !== 'production') {\n        setFeatureFlag(name, value);\n    }\n}\n/** version: 2.13.0 */\n\n/* proxy-compat-disable */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet nextTickCallbackQueue = [];\nconst SPACE_CHAR = 32;\nconst EmptyObject = seal(create(null));\nconst EmptyArray = seal([]);\nfunction flushCallbackQueue() {\n    if (process.env.NODE_ENV !== 'production') {\n        if (nextTickCallbackQueue.length === 0) {\n            throw new Error(`Internal Error: If callbackQueue is scheduled, it is because there must be at least one callback on this pending queue.`);\n        }\n    }\n    const callbacks = nextTickCallbackQueue;\n    nextTickCallbackQueue = []; // reset to a new queue\n    for (let i = 0, len = callbacks.length; i < len; i += 1) {\n        callbacks[i]();\n    }\n}\nfunction addCallbackToNextTick(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!isFunction$1(callback)) {\n            throw new Error(`Internal Error: addCallbackToNextTick() can only accept a function callback`);\n        }\n    }\n    if (nextTickCallbackQueue.length === 0) {\n        Promise.resolve().then(flushCallbackQueue);\n    }\n    ArrayPush$1.call(nextTickCallbackQueue, callback);\n}\nfunction guid() {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n// Borrowed from Vue template compiler.\n// https://github.com/vuejs/vue/blob/531371b818b0e31a989a06df43789728f23dc4e8/src/platforms/web/util/style.js#L5-L16\nconst DECLARATION_DELIMITER = /;(?![^(]*\\))/g;\nconst PROPERTY_DELIMITER = /:(.+)/;\nfunction parseStyleText(cssText) {\n    const styleMap = {};\n    const declarations = cssText.split(DECLARATION_DELIMITER);\n    for (const declaration of declarations) {\n        if (declaration) {\n            const [prop, value] = declaration.split(PROPERTY_DELIMITER);\n            if (prop !== undefined && value !== undefined) {\n                styleMap[prop.trim()] = value.trim();\n            }\n        }\n    }\n    return styleMap;\n}\n// Make a shallow copy of an object but omit the given key\nfunction cloneAndOmitKey(object, keyToOmit) {\n    const result = {};\n    for (const key of Object.keys(object)) {\n        if (key !== keyToOmit) {\n            result[key] = object[key];\n        }\n    }\n    return result;\n}\nfunction flattenStylesheets(stylesheets) {\n    const list = [];\n    for (const stylesheet of stylesheets) {\n        if (!Array.isArray(stylesheet)) {\n            list.push(stylesheet);\n        }\n        else {\n            list.push(...flattenStylesheets(stylesheet));\n        }\n    }\n    return list;\n}\n\n//\n// Primitives\n//\nlet ssr$1;\nfunction setSsr(ssrImpl) {\n    ssr$1 = ssrImpl;\n}\nlet isNativeShadowDefined$1;\nfunction setIsNativeShadowDefined(isNativeShadowDefinedImpl) {\n    isNativeShadowDefined$1 = isNativeShadowDefinedImpl;\n}\nlet isSyntheticShadowDefined$1;\nfunction setIsSyntheticShadowDefined(isSyntheticShadowDefinedImpl) {\n    isSyntheticShadowDefined$1 = isSyntheticShadowDefinedImpl;\n}\nlet HTMLElementExported$1;\nfunction setHTMLElement(HTMLElementImpl) {\n    HTMLElementExported$1 = HTMLElementImpl;\n}\nlet isHydrating$1;\nfunction setIsHydrating$1(isHydratingImpl) {\n    isHydrating$1 = isHydratingImpl;\n}\nlet insert$1;\nfunction setInsert(insertImpl) {\n    insert$1 = insertImpl;\n}\nlet remove$1;\nfunction setRemove(removeImpl) {\n    remove$1 = removeImpl;\n}\nlet createElement$2;\nfunction setCreateElement(createElementImpl) {\n    createElement$2 = createElementImpl;\n}\nlet createText$1;\nfunction setCreateText(createTextImpl) {\n    createText$1 = createTextImpl;\n}\nlet createComment$1;\nfunction setCreateComment(createCommentImpl) {\n    createComment$1 = createCommentImpl;\n}\nlet nextSibling$1;\nfunction setNextSibling(nextSiblingImpl) {\n    nextSibling$1 = nextSiblingImpl;\n}\nlet attachShadow$1;\nfunction setAttachShadow(attachShadowImpl) {\n    attachShadow$1 = attachShadowImpl;\n}\nlet getProperty$1;\nfunction setGetProperty(getPropertyImpl) {\n    getProperty$1 = getPropertyImpl;\n}\nlet setProperty$1;\nfunction setSetProperty(setPropertyImpl) {\n    setProperty$1 = setPropertyImpl;\n}\nlet setText$1;\nfunction setSetText(setTextImpl) {\n    setText$1 = setTextImpl;\n}\nlet getAttribute$1;\nfunction setGetAttribute(getAttributeImpl) {\n    getAttribute$1 = getAttributeImpl;\n}\nlet setAttribute$1;\nfunction setSetAttribute(setAttributeImpl) {\n    setAttribute$1 = setAttributeImpl;\n}\nlet removeAttribute$1;\nfunction setRemoveAttribute(removeAttributeImpl) {\n    removeAttribute$1 = removeAttributeImpl;\n}\nlet addEventListener$1;\nfunction setAddEventListener(addEventListenerImpl) {\n    addEventListener$1 = addEventListenerImpl;\n}\nlet removeEventListener$1;\nfunction setRemoveEventListener(removeEventListenerImpl) {\n    removeEventListener$1 = removeEventListenerImpl;\n}\nlet dispatchEvent$1;\nfunction setDispatchEvent(dispatchEventImpl) {\n    dispatchEvent$1 = dispatchEventImpl;\n}\nlet getClassList$1;\nfunction setGetClassList(getClassListImpl) {\n    getClassList$1 = getClassListImpl;\n}\nlet setCSSStyleProperty$1;\nfunction setSetCSSStyleProperty(setCSSStylePropertyImpl) {\n    setCSSStyleProperty$1 = setCSSStylePropertyImpl;\n}\nlet getBoundingClientRect$1;\nfunction setGetBoundingClientRect(getBoundingClientRectImpl) {\n    getBoundingClientRect$1 = getBoundingClientRectImpl;\n}\nlet querySelector$1;\nfunction setQuerySelector(querySelectorImpl) {\n    querySelector$1 = querySelectorImpl;\n}\nlet querySelectorAll$1;\nfunction setQuerySelectorAll(querySelectorAllImpl) {\n    querySelectorAll$1 = querySelectorAllImpl;\n}\nlet getElementsByTagName$1;\nfunction setGetElementsByTagName(getElementsByTagNameImpl) {\n    getElementsByTagName$1 = getElementsByTagNameImpl;\n}\nlet getElementsByClassName$1;\nfunction setGetElementsByClassName(getElementsByClassNameImpl) {\n    getElementsByClassName$1 = getElementsByClassNameImpl;\n}\nlet getChildren$1;\nfunction setGetChildren(getChildrenImpl) {\n    getChildren$1 = getChildrenImpl;\n}\nlet getChildNodes$1;\nfunction setGetChildNodes(getChildNodesImpl) {\n    getChildNodes$1 = getChildNodesImpl;\n}\nlet getFirstChild$1;\nfunction setGetFirstChild(getFirstChildImpl) {\n    getFirstChild$1 = getFirstChildImpl;\n}\nlet getFirstElementChild$1;\nfunction setGetFirstElementChild(getFirstElementChildImpl) {\n    getFirstElementChild$1 = getFirstElementChildImpl;\n}\nlet getLastChild$1;\nfunction setGetLastChild(getLastChildImpl) {\n    getLastChild$1 = getLastChildImpl;\n}\nlet getLastElementChild$1;\nfunction setGetLastElementChild(getLastElementChildImpl) {\n    getLastElementChild$1 = getLastElementChildImpl;\n}\nlet isConnected$1;\nfunction setIsConnected(isConnectedImpl) {\n    isConnected$1 = isConnectedImpl;\n}\nlet insertGlobalStylesheet$1;\nfunction setInsertGlobalStylesheet(insertGlobalStylesheetImpl) {\n    insertGlobalStylesheet$1 = insertGlobalStylesheetImpl;\n}\nlet insertStylesheet$1;\nfunction setInsertStylesheet(insertStylesheetImpl) {\n    insertStylesheet$1 = insertStylesheetImpl;\n}\nlet assertInstanceOfHTMLElement$1;\nfunction setAssertInstanceOfHTMLElement(assertInstanceOfHTMLElementImpl) {\n    assertInstanceOfHTMLElement$1 = assertInstanceOfHTMLElementImpl;\n}\nlet defineCustomElement$1;\nfunction setDefineCustomElement(defineCustomElementImpl) {\n    defineCustomElement$1 = defineCustomElementImpl;\n}\nlet getCustomElement$1;\nfunction setGetCustomElement(getCustomElementImpl) {\n    getCustomElement$1 = getCustomElementImpl;\n}\n\n/*\n * Copyright (c) 2019, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst TargetToReactiveRecordMap = new WeakMap();\nfunction getReactiveRecord(target) {\n    let reactiveRecord = TargetToReactiveRecordMap.get(target);\n    if (isUndefined$1(reactiveRecord)) {\n        const newRecord = create(null);\n        reactiveRecord = newRecord;\n        TargetToReactiveRecordMap.set(target, newRecord);\n    }\n    return reactiveRecord;\n}\nlet currentReactiveObserver = null;\nfunction valueMutated(target, key) {\n    const reactiveRecord = TargetToReactiveRecordMap.get(target);\n    if (!isUndefined$1(reactiveRecord)) {\n        const reactiveObservers = reactiveRecord[key];\n        if (!isUndefined$1(reactiveObservers)) {\n            for (let i = 0, len = reactiveObservers.length; i < len; i += 1) {\n                const ro = reactiveObservers[i];\n                ro.notify();\n            }\n        }\n    }\n}\nfunction valueObserved(target, key) {\n    // We should determine if an active Observing Record is present to track mutations.\n    if (currentReactiveObserver === null) {\n        return;\n    }\n    const ro = currentReactiveObserver;\n    const reactiveRecord = getReactiveRecord(target);\n    let reactiveObservers = reactiveRecord[key];\n    if (isUndefined$1(reactiveObservers)) {\n        reactiveObservers = [];\n        reactiveRecord[key] = reactiveObservers;\n    }\n    else if (reactiveObservers[0] === ro) {\n        return; // perf optimization considering that most subscriptions will come from the same record\n    }\n    if (ArrayIndexOf.call(reactiveObservers, ro) === -1) {\n        ro.link(reactiveObservers);\n    }\n}\nclass ReactiveObserver {\n    constructor(callback) {\n        this.listeners = [];\n        this.callback = callback;\n    }\n    observe(job) {\n        const inceptionReactiveRecord = currentReactiveObserver;\n        currentReactiveObserver = this;\n        let error;\n        try {\n            job();\n        }\n        catch (e) {\n            error = Object(e);\n        }\n        finally {\n            currentReactiveObserver = inceptionReactiveRecord;\n            if (error !== undefined) {\n                throw error; // eslint-disable-line no-unsafe-finally\n            }\n        }\n    }\n    /**\n     * This method is responsible for disconnecting the Reactive Observer\n     * from any Reactive Record that has a reference to it, to prevent future\n     * notifications about previously recorded access.\n     */\n    reset() {\n        const { listeners } = this;\n        const len = listeners.length;\n        if (len > 0) {\n            for (let i = 0; i < len; i += 1) {\n                const set = listeners[i];\n                const pos = ArrayIndexOf.call(listeners[i], this);\n                ArraySplice.call(set, pos, 1);\n            }\n            listeners.length = 0;\n        }\n    }\n    // friend methods\n    notify() {\n        this.callback.call(undefined, this);\n    }\n    link(reactiveObservers) {\n        ArrayPush$1.call(reactiveObservers, this);\n        // we keep track of observing records where the observing record was added to so we can do some clean up later on\n        ArrayPush$1.call(this.listeners, reactiveObservers);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction componentValueMutated(vm, key) {\n    valueMutated(vm.component, key);\n}\nfunction componentValueObserved(vm, key) {\n    valueObserved(vm.component, key);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getComponentTag(vm) {\n    return `<${StringToLowerCase.call(vm.tagName)}>`;\n}\n// TODO [#1695]: Unify getComponentStack and getErrorComponentStack\nfunction getComponentStack(vm) {\n    const stack = [];\n    let prefix = '';\n    while (!isNull(vm.owner)) {\n        ArrayPush$1.call(stack, prefix + getComponentTag(vm));\n        vm = vm.owner;\n        prefix += '\\t';\n    }\n    return ArrayJoin.call(stack, '\\n');\n}\nfunction getErrorComponentStack(vm) {\n    const wcStack = [];\n    let currentVm = vm;\n    while (!isNull(currentVm)) {\n        ArrayPush$1.call(wcStack, getComponentTag(currentVm));\n        currentVm = currentVm.owner;\n    }\n    return wcStack.reverse().join('\\n\\t');\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction addErrorComponentStack(vm, error) {\n    if (!isFrozen(error) && isUndefined$1(error.wcStack)) {\n        const wcStack = getErrorComponentStack(vm);\n        defineProperty(error, 'wcStack', {\n            get() {\n                return wcStack;\n            },\n        });\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction log(method, message, vm) {\n    let msg = `[LWC ${method}]: ${message}`;\n    if (!isUndefined$1(vm)) {\n        msg = `${msg}\\n${getComponentStack(vm)}`;\n    }\n    if (process.env.NODE_ENV === 'test') {\n        /* eslint-disable-next-line no-console */\n        console[method](msg);\n        return;\n    }\n    try {\n        throw new Error(msg);\n    }\n    catch (e) {\n        /* eslint-disable-next-line no-console */\n        console[method](e);\n    }\n}\nfunction logError(message, vm) {\n    log('error', message, vm);\n}\nfunction logWarn(message, vm) {\n    log('warn', message, vm);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// This is a temporary workaround to get the @lwc/engine-server to evaluate in node without having\n// to inject at runtime.\nconst HTMLElementConstructor$1 = typeof HTMLElement !== 'undefined' ? HTMLElement : function () { };\nconst HTMLElementPrototype = HTMLElementConstructor$1.prototype;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// These properties get added to LWCElement.prototype publicProps automatically\nconst defaultDefHTMLPropertyNames = [\n    'accessKey',\n    'dir',\n    'draggable',\n    'hidden',\n    'id',\n    'lang',\n    'spellcheck',\n    'tabIndex',\n    'title',\n];\nfunction offsetPropertyErrorMessage(name) {\n    return `Using the \\`${name}\\` property is an anti-pattern because it rounds the value to an integer. Instead, use the \\`getBoundingClientRect\\` method to obtain fractional values for the size of an element and its position relative to the viewport.`;\n}\n// Global HTML Attributes & Properties\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\nconst globalHTMLProperties = assign(create(null), {\n    accessKey: {\n        attribute: 'accesskey',\n    },\n    accessKeyLabel: {\n        readOnly: true,\n    },\n    className: {\n        attribute: 'class',\n        error: 'Using the `className` property is an anti-pattern because of slow runtime behavior and potential conflicts with classes provided by the owner element. Use the `classList` API instead.',\n    },\n    contentEditable: {\n        attribute: 'contenteditable',\n    },\n    dataset: {\n        readOnly: true,\n        error: \"Using the `dataset` property is an anti-pattern because it can't be statically analyzed. Expose each property individually using the `@api` decorator instead.\",\n    },\n    dir: {\n        attribute: 'dir',\n    },\n    draggable: {\n        attribute: 'draggable',\n    },\n    dropzone: {\n        attribute: 'dropzone',\n        readOnly: true,\n    },\n    hidden: {\n        attribute: 'hidden',\n    },\n    id: {\n        attribute: 'id',\n    },\n    inputMode: {\n        attribute: 'inputmode',\n    },\n    lang: {\n        attribute: 'lang',\n    },\n    slot: {\n        attribute: 'slot',\n        error: 'Using the `slot` property is an anti-pattern.',\n    },\n    spellcheck: {\n        attribute: 'spellcheck',\n    },\n    style: {\n        attribute: 'style',\n    },\n    tabIndex: {\n        attribute: 'tabindex',\n    },\n    title: {\n        attribute: 'title',\n    },\n    translate: {\n        attribute: 'translate',\n    },\n    // additional \"global attributes\" that are not present in the link above.\n    isContentEditable: {\n        readOnly: true,\n    },\n    offsetHeight: {\n        readOnly: true,\n        error: offsetPropertyErrorMessage('offsetHeight'),\n    },\n    offsetLeft: {\n        readOnly: true,\n        error: offsetPropertyErrorMessage('offsetLeft'),\n    },\n    offsetParent: {\n        readOnly: true,\n    },\n    offsetTop: {\n        readOnly: true,\n        error: offsetPropertyErrorMessage('offsetTop'),\n    },\n    offsetWidth: {\n        readOnly: true,\n        error: offsetPropertyErrorMessage('offsetWidth'),\n    },\n    role: {\n        attribute: 'role',\n    },\n});\nlet controlledElement = null;\nlet controlledAttributeName;\nfunction isAttributeLocked(elm, attrName) {\n    return elm !== controlledElement || attrName !== controlledAttributeName;\n}\nfunction lockAttribute(_elm, _key) {\n    controlledElement = null;\n    controlledAttributeName = undefined;\n}\nfunction unlockAttribute(elm, key) {\n    controlledElement = elm;\n    controlledAttributeName = key;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This is a descriptor map that contains\n * all standard properties that a Custom Element can support (including AOM properties), which\n * determines what kind of capabilities the Base HTML Element and\n * Base Lightning Element should support.\n */\nconst HTMLElementOriginalDescriptors = create(null);\nforEach.call(keys(AriaPropNameToAttrNameMap), (propName) => {\n    // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because\n    // in IE11, some properties are on Element.prototype instead of HTMLElement, just to be sure.\n    const descriptor = getPropertyDescriptor(HTMLElementPrototype, propName);\n    if (!isUndefined$1(descriptor)) {\n        HTMLElementOriginalDescriptors[propName] = descriptor;\n    }\n});\nforEach.call(defaultDefHTMLPropertyNames, (propName) => {\n    // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because\n    // in IE11, id property is on Element.prototype instead of HTMLElement, and we suspect that more will fall into\n    // this category, so, better to be sure.\n    const descriptor = getPropertyDescriptor(HTMLElementPrototype, propName);\n    if (!isUndefined$1(descriptor)) {\n        HTMLElementOriginalDescriptors[propName] = descriptor;\n    }\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction generateDataDescriptor(options) {\n    return assign({\n        configurable: true,\n        enumerable: true,\n        writable: true,\n    }, options);\n}\nfunction generateAccessorDescriptor(options) {\n    return assign({\n        configurable: true,\n        enumerable: true,\n    }, options);\n}\nlet isDomMutationAllowed = false;\nfunction unlockDomMutation() {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    isDomMutationAllowed = true;\n}\nfunction lockDomMutation() {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    isDomMutationAllowed = false;\n}\nfunction logMissingPortalError(name, type) {\n    return logError(`The \\`${name}\\` ${type} is available only on elements that use the \\`lwc:dom=\"manual\"\\` directive.`);\n}\nfunction patchElementWithRestrictions(elm, options) {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');\n    const descriptors = {\n        outerHTML: generateAccessorDescriptor({\n            get() {\n                return originalOuterHTMLDescriptor.get.call(this);\n            },\n            set(_value) {\n                throw new TypeError(`Invalid attempt to set outerHTML on Element.`);\n            },\n        }),\n    };\n    // Apply extra restriction related to DOM manipulation if the element is not a portal.\n    if (!options.isLight && !options.isPortal) {\n        const { appendChild, insertBefore, removeChild, replaceChild } = elm;\n        const originalNodeValueDescriptor = getPropertyDescriptor(elm, 'nodeValue');\n        const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');\n        const originalTextContentDescriptor = getPropertyDescriptor(elm, 'textContent');\n        assign(descriptors, {\n            appendChild: generateDataDescriptor({\n                value(aChild) {\n                    logMissingPortalError('appendChild', 'method');\n                    return appendChild.call(this, aChild);\n                },\n            }),\n            insertBefore: generateDataDescriptor({\n                value(newNode, referenceNode) {\n                    if (!isDomMutationAllowed) {\n                        logMissingPortalError('insertBefore', 'method');\n                    }\n                    return insertBefore.call(this, newNode, referenceNode);\n                },\n            }),\n            removeChild: generateDataDescriptor({\n                value(aChild) {\n                    if (!isDomMutationAllowed) {\n                        logMissingPortalError('removeChild', 'method');\n                    }\n                    return removeChild.call(this, aChild);\n                },\n            }),\n            replaceChild: generateDataDescriptor({\n                value(newChild, oldChild) {\n                    logMissingPortalError('replaceChild', 'method');\n                    return replaceChild.call(this, newChild, oldChild);\n                },\n            }),\n            nodeValue: generateAccessorDescriptor({\n                get() {\n                    return originalNodeValueDescriptor.get.call(this);\n                },\n                set(value) {\n                    if (!isDomMutationAllowed) {\n                        logMissingPortalError('nodeValue', 'property');\n                    }\n                    originalNodeValueDescriptor.set.call(this, value);\n                },\n            }),\n            textContent: generateAccessorDescriptor({\n                get() {\n                    return originalTextContentDescriptor.get.call(this);\n                },\n                set(value) {\n                    logMissingPortalError('textContent', 'property');\n                    originalTextContentDescriptor.set.call(this, value);\n                },\n            }),\n            innerHTML: generateAccessorDescriptor({\n                get() {\n                    return originalInnerHTMLDescriptor.get.call(this);\n                },\n                set(value) {\n                    logMissingPortalError('innerHTML', 'property');\n                    return originalInnerHTMLDescriptor.set.call(this, value);\n                },\n            }),\n        });\n    }\n    defineProperties(elm, descriptors);\n}\nfunction getShadowRootRestrictionsDescriptors(sr) {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    // Disallowing properties in dev mode only to avoid people doing the wrong\n    // thing when using the real shadow root, because if that's the case,\n    // the component will not work when running with synthetic shadow.\n    const originalAddEventListener = sr.addEventListener;\n    const originalInnerHTMLDescriptor = getPropertyDescriptor(sr, 'innerHTML');\n    const originalTextContentDescriptor = getPropertyDescriptor(sr, 'textContent');\n    return {\n        innerHTML: generateAccessorDescriptor({\n            get() {\n                return originalInnerHTMLDescriptor.get.call(this);\n            },\n            set(_value) {\n                throw new TypeError(`Invalid attempt to set innerHTML on ShadowRoot.`);\n            },\n        }),\n        textContent: generateAccessorDescriptor({\n            get() {\n                return originalTextContentDescriptor.get.call(this);\n            },\n            set(_value) {\n                throw new TypeError(`Invalid attempt to set textContent on ShadowRoot.`);\n            },\n        }),\n        addEventListener: generateDataDescriptor({\n            value(type, listener, options) {\n                // TODO [#420]: this is triggered when the component author attempts to add a listener\n                // programmatically into its Component's shadow root\n                if (!isUndefined$1(options)) {\n                    logError('The `addEventListener` method on ShadowRoot does not support any options.', getAssociatedVMIfPresent(this));\n                }\n                // Typescript does not like it when you treat the `arguments` object as an array\n                // @ts-ignore type-mismatch\n                return originalAddEventListener.apply(this, arguments);\n            },\n        }),\n    };\n}\n// Custom Elements Restrictions:\n// -----------------------------\nfunction getCustomElementRestrictionsDescriptors(elm) {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    const originalAddEventListener = elm.addEventListener;\n    const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');\n    const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');\n    const originalTextContentDescriptor = getPropertyDescriptor(elm, 'textContent');\n    return {\n        innerHTML: generateAccessorDescriptor({\n            get() {\n                return originalInnerHTMLDescriptor.get.call(this);\n            },\n            set(_value) {\n                throw new TypeError(`Invalid attempt to set innerHTML on HTMLElement.`);\n            },\n        }),\n        outerHTML: generateAccessorDescriptor({\n            get() {\n                return originalOuterHTMLDescriptor.get.call(this);\n            },\n            set(_value) {\n                throw new TypeError(`Invalid attempt to set outerHTML on HTMLElement.`);\n            },\n        }),\n        textContent: generateAccessorDescriptor({\n            get() {\n                return originalTextContentDescriptor.get.call(this);\n            },\n            set(_value) {\n                throw new TypeError(`Invalid attempt to set textContent on HTMLElement.`);\n            },\n        }),\n        addEventListener: generateDataDescriptor({\n            value(type, listener, options) {\n                // TODO [#420]: this is triggered when the component author attempts to add a listener\n                // programmatically into a lighting element node\n                if (!isUndefined$1(options)) {\n                    logError('The `addEventListener` method in `LightningElement` does not support any options.', getAssociatedVMIfPresent(this));\n                }\n                // Typescript does not like it when you treat the `arguments` object as an array\n                // @ts-ignore type-mismatch\n                return originalAddEventListener.apply(this, arguments);\n            },\n        }),\n    };\n}\nfunction getComponentRestrictionsDescriptors() {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    return {\n        tagName: generateAccessorDescriptor({\n            get() {\n                throw new Error(`Usage of property \\`tagName\\` is disallowed because the component itself does` +\n                    ` not know which tagName will be used to create the element, therefore writing` +\n                    ` code that check for that value is error prone.`);\n            },\n            configurable: true,\n            enumerable: false, // no enumerable properties on component\n        }),\n    };\n}\nfunction getLightningElementPrototypeRestrictionsDescriptors(proto) {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    const originalDispatchEvent = proto.dispatchEvent;\n    const descriptors = {\n        dispatchEvent: generateDataDescriptor({\n            value(event) {\n                const vm = getAssociatedVM(this);\n                if (!isNull(event) && isObject(event)) {\n                    const { type } = event;\n                    if (!/^[a-z][a-z0-9_]*$/.test(type)) {\n                        logError(`Invalid event type \"${type}\" dispatched in element ${getComponentTag(vm)}.` +\n                            ` Event name must start with a lowercase letter and followed only lowercase` +\n                            ` letters, numbers, and underscores`, vm);\n                    }\n                }\n                // Typescript does not like it when you treat the `arguments` object as an array\n                // @ts-ignore type-mismatch\n                return originalDispatchEvent.apply(this, arguments);\n            },\n        }),\n    };\n    forEach.call(getOwnPropertyNames$1(globalHTMLProperties), (propName) => {\n        if (propName in proto) {\n            return; // no need to redefine something that we are already exposing\n        }\n        descriptors[propName] = generateAccessorDescriptor({\n            get() {\n                const { error, attribute } = globalHTMLProperties[propName];\n                const msg = [];\n                msg.push(`Accessing the global HTML property \"${propName}\" is disabled.`);\n                if (error) {\n                    msg.push(error);\n                }\n                else if (attribute) {\n                    msg.push(`Instead access it via \\`this.getAttribute(\"${attribute}\")\\`.`);\n                }\n                logError(msg.join('\\n'), getAssociatedVM(this));\n            },\n            set() {\n                const { readOnly } = globalHTMLProperties[propName];\n                if (readOnly) {\n                    logError(`The global HTML property \\`${propName}\\` is read-only.`, getAssociatedVM(this));\n                }\n            },\n        });\n    });\n    return descriptors;\n}\n// This routine will prevent access to certain properties on a shadow root instance to guarantee\n// that all components will work fine in IE11 and other browsers without shadow dom support.\nfunction patchShadowRootWithRestrictions(sr) {\n    defineProperties(sr, getShadowRootRestrictionsDescriptors(sr));\n}\nfunction patchCustomElementWithRestrictions(elm) {\n    const restrictionsDescriptors = getCustomElementRestrictionsDescriptors(elm);\n    const elmProto = getPrototypeOf$1(elm);\n    setPrototypeOf(elm, create(elmProto, restrictionsDescriptors));\n}\nfunction patchComponentWithRestrictions(cmp) {\n    defineProperties(cmp, getComponentRestrictionsDescriptors());\n}\nfunction patchLightningElementPrototypeWithRestrictions(proto) {\n    defineProperties(proto, getLightningElementPrototypeRestrictionsDescriptors(proto));\n}\n\n/**\n * Copyright (C) 2017 salesforce.com, inc.\n */\nconst { isArray } = Array;\nconst { prototype: ObjectDotPrototype, getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\nconst { push: ArrayPush, concat: ArrayConcat } = Array.prototype;\nconst OtS = {}.toString;\nfunction toString(obj) {\n    if (obj && obj.toString) {\n        return obj.toString();\n    }\n    else if (typeof obj === 'object') {\n        return OtS.call(obj);\n    }\n    else {\n        return obj + '';\n    }\n}\nfunction isUndefined(obj) {\n    return obj === undefined;\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nconst proxyToValueMap = new WeakMap();\nfunction registerProxy(proxy, value) {\n    proxyToValueMap.set(proxy, value);\n}\nconst unwrap$1 = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\nclass BaseProxyHandler {\n    constructor(membrane, value) {\n        this.originalTarget = value;\n        this.membrane = membrane;\n    }\n    // Shared utility methods\n    wrapDescriptor(descriptor) {\n        if (hasOwnProperty.call(descriptor, 'value')) {\n            descriptor.value = this.wrapValue(descriptor.value);\n        }\n        else {\n            const { set: originalSet, get: originalGet } = descriptor;\n            if (!isUndefined(originalGet)) {\n                descriptor.get = this.wrapGetter(originalGet);\n            }\n            if (!isUndefined(originalSet)) {\n                descriptor.set = this.wrapSetter(originalSet);\n            }\n        }\n        return descriptor;\n    }\n    copyDescriptorIntoShadowTarget(shadowTarget, key) {\n        const { originalTarget } = this;\n        // Note: a property might get defined multiple times in the shadowTarget\n        //       but it will always be compatible with the previous descriptor\n        //       to preserve the object invariants, which makes these lines safe.\n        const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n        // TODO: it should be impossible for the originalDescriptor to ever be undefined, this `if` can be removed\n        /* istanbul ignore else */\n        if (!isUndefined(originalDescriptor)) {\n            const wrappedDesc = this.wrapDescriptor(originalDescriptor);\n            ObjectDefineProperty(shadowTarget, key, wrappedDesc);\n        }\n    }\n    lockShadowTarget(shadowTarget) {\n        const { originalTarget } = this;\n        const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n        targetKeys.forEach((key) => {\n            this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n        });\n        const { membrane: { tagPropertyKey }, } = this;\n        if (!isUndefined(tagPropertyKey) && !hasOwnProperty.call(shadowTarget, tagPropertyKey)) {\n            ObjectDefineProperty(shadowTarget, tagPropertyKey, ObjectCreate(null));\n        }\n        preventExtensions(shadowTarget);\n    }\n    // Shared Traps\n    // TODO: apply() is never called\n    /* istanbul ignore next */\n    apply(shadowTarget, thisArg, argArray) {\n        /* No op */\n    }\n    // TODO: construct() is never called\n    /* istanbul ignore next */\n    construct(shadowTarget, argArray, newTarget) {\n        /* No op */\n    }\n    get(shadowTarget, key) {\n        const { originalTarget, membrane: { valueObserved }, } = this;\n        const value = originalTarget[key];\n        valueObserved(originalTarget, key);\n        return this.wrapValue(value);\n    }\n    has(shadowTarget, key) {\n        const { originalTarget, membrane: { tagPropertyKey, valueObserved }, } = this;\n        valueObserved(originalTarget, key);\n        // since key is never going to be undefined, and tagPropertyKey might be undefined\n        // we can simply compare them as the second part of the condition.\n        return key in originalTarget || key === tagPropertyKey;\n    }\n    ownKeys(shadowTarget) {\n        const { originalTarget, membrane: { tagPropertyKey }, } = this;\n        // if the membrane tag key exists and it is not in the original target, we add it to the keys.\n        const keys = isUndefined(tagPropertyKey) || hasOwnProperty.call(originalTarget, tagPropertyKey)\n            ? []\n            : [tagPropertyKey];\n        // small perf optimization using push instead of concat to avoid creating an extra array\n        ArrayPush.apply(keys, getOwnPropertyNames(originalTarget));\n        ArrayPush.apply(keys, getOwnPropertySymbols(originalTarget));\n        return keys;\n    }\n    isExtensible(shadowTarget) {\n        const { originalTarget } = this;\n        // optimization to avoid attempting to lock down the shadowTarget multiple times\n        if (!isExtensible(shadowTarget)) {\n            return false; // was already locked down\n        }\n        if (!isExtensible(originalTarget)) {\n            this.lockShadowTarget(shadowTarget);\n            return false;\n        }\n        return true;\n    }\n    getPrototypeOf(shadowTarget) {\n        const { originalTarget } = this;\n        return getPrototypeOf(originalTarget);\n    }\n    getOwnPropertyDescriptor(shadowTarget, key) {\n        const { originalTarget, membrane: { valueObserved, tagPropertyKey }, } = this;\n        // keys looked up via getOwnPropertyDescriptor need to be reactive\n        valueObserved(originalTarget, key);\n        let desc = getOwnPropertyDescriptor(originalTarget, key);\n        if (isUndefined(desc)) {\n            if (key !== tagPropertyKey) {\n                return undefined;\n            }\n            // if the key is the membrane tag key, and is not in the original target,\n            // we produce a synthetic descriptor and install it on the shadow target\n            desc = { value: undefined, writable: false, configurable: false, enumerable: false };\n            ObjectDefineProperty(shadowTarget, tagPropertyKey, desc);\n            return desc;\n        }\n        if (desc.configurable === false) {\n            // updating the descriptor to non-configurable on the shadow\n            this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n        }\n        // Note: by accessing the descriptor, the key is marked as observed\n        // but access to the value, setter or getter (if available) cannot observe\n        // mutations, just like regular methods, in which case we just do nothing.\n        return this.wrapDescriptor(desc);\n    }\n}\n\nconst getterMap$1 = new WeakMap();\nconst setterMap$1 = new WeakMap();\nconst reverseGetterMap = new WeakMap();\nconst reverseSetterMap = new WeakMap();\nclass ReactiveProxyHandler extends BaseProxyHandler {\n    wrapValue(value) {\n        return this.membrane.getProxy(value);\n    }\n    wrapGetter(originalGet) {\n        const wrappedGetter = getterMap$1.get(originalGet);\n        if (!isUndefined(wrappedGetter)) {\n            return wrappedGetter;\n        }\n        const handler = this;\n        const get = function () {\n            // invoking the original getter with the original target\n            return handler.wrapValue(originalGet.call(unwrap$1(this)));\n        };\n        getterMap$1.set(originalGet, get);\n        reverseGetterMap.set(get, originalGet);\n        return get;\n    }\n    wrapSetter(originalSet) {\n        const wrappedSetter = setterMap$1.get(originalSet);\n        if (!isUndefined(wrappedSetter)) {\n            return wrappedSetter;\n        }\n        const set = function (v) {\n            // invoking the original setter with the original target\n            originalSet.call(unwrap$1(this), unwrap$1(v));\n        };\n        setterMap$1.set(originalSet, set);\n        reverseSetterMap.set(set, originalSet);\n        return set;\n    }\n    unwrapDescriptor(descriptor) {\n        if (hasOwnProperty.call(descriptor, 'value')) {\n            // dealing with a data descriptor\n            descriptor.value = unwrap$1(descriptor.value);\n        }\n        else {\n            const { set, get } = descriptor;\n            if (!isUndefined(get)) {\n                descriptor.get = this.unwrapGetter(get);\n            }\n            if (!isUndefined(set)) {\n                descriptor.set = this.unwrapSetter(set);\n            }\n        }\n        return descriptor;\n    }\n    unwrapGetter(redGet) {\n        const reverseGetter = reverseGetterMap.get(redGet);\n        if (!isUndefined(reverseGetter)) {\n            return reverseGetter;\n        }\n        const handler = this;\n        const get = function () {\n            // invoking the red getter with the proxy of this\n            return unwrap$1(redGet.call(handler.wrapValue(this)));\n        };\n        getterMap$1.set(get, redGet);\n        reverseGetterMap.set(redGet, get);\n        return get;\n    }\n    unwrapSetter(redSet) {\n        const reverseSetter = reverseSetterMap.get(redSet);\n        if (!isUndefined(reverseSetter)) {\n            return reverseSetter;\n        }\n        const handler = this;\n        const set = function (v) {\n            // invoking the red setter with the proxy of this\n            redSet.call(handler.wrapValue(this), handler.wrapValue(v));\n        };\n        setterMap$1.set(set, redSet);\n        reverseSetterMap.set(redSet, set);\n        return set;\n    }\n    set(shadowTarget, key, value) {\n        const { originalTarget, membrane: { valueMutated }, } = this;\n        const oldValue = originalTarget[key];\n        if (oldValue !== value) {\n            originalTarget[key] = value;\n            valueMutated(originalTarget, key);\n        }\n        else if (key === 'length' && isArray(originalTarget)) {\n            // fix for issue #236: push will add the new index, and by the time length\n            // is updated, the internal length is already equal to the new length value\n            // therefore, the oldValue is equal to the value. This is the forking logic\n            // to support this use case.\n            valueMutated(originalTarget, key);\n        }\n        return true;\n    }\n    deleteProperty(shadowTarget, key) {\n        const { originalTarget, membrane: { valueMutated }, } = this;\n        delete originalTarget[key];\n        valueMutated(originalTarget, key);\n        return true;\n    }\n    setPrototypeOf(shadowTarget, prototype) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`Invalid setPrototypeOf invocation for reactive proxy ${toString(this.originalTarget)}. Prototype of reactive objects cannot be changed.`);\n        }\n    }\n    preventExtensions(shadowTarget) {\n        if (isExtensible(shadowTarget)) {\n            const { originalTarget } = this;\n            preventExtensions(originalTarget);\n            // if the originalTarget is a proxy itself, it might reject\n            // the preventExtension call, in which case we should not attempt to lock down\n            // the shadow target.\n            // TODO: It should not actually be possible to reach this `if` statement.\n            // If a proxy rejects extensions, then calling preventExtensions will throw an error:\n            // https://codepen.io/nolanlawson-the-selector/pen/QWMOjbY\n            /* istanbul ignore if */\n            if (isExtensible(originalTarget)) {\n                return false;\n            }\n            this.lockShadowTarget(shadowTarget);\n        }\n        return true;\n    }\n    defineProperty(shadowTarget, key, descriptor) {\n        const { originalTarget, membrane: { valueMutated, tagPropertyKey }, } = this;\n        if (key === tagPropertyKey && !hasOwnProperty.call(originalTarget, key)) {\n            // To avoid leaking the membrane tag property into the original target, we must\n            // be sure that the original target doesn't have yet.\n            // NOTE: we do not return false here because Object.freeze and equivalent operations\n            // will attempt to set the descriptor to the same value, and expect no to throw. This\n            // is an small compromise for the sake of not having to diff the descriptors.\n            return true;\n        }\n        ObjectDefineProperty(originalTarget, key, this.unwrapDescriptor(descriptor));\n        // intentionally testing if false since it could be undefined as well\n        if (descriptor.configurable === false) {\n            this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n        }\n        valueMutated(originalTarget, key);\n        return true;\n    }\n}\n\nconst getterMap = new WeakMap();\nconst setterMap = new WeakMap();\nclass ReadOnlyHandler extends BaseProxyHandler {\n    wrapValue(value) {\n        return this.membrane.getReadOnlyProxy(value);\n    }\n    wrapGetter(originalGet) {\n        const wrappedGetter = getterMap.get(originalGet);\n        if (!isUndefined(wrappedGetter)) {\n            return wrappedGetter;\n        }\n        const handler = this;\n        const get = function () {\n            // invoking the original getter with the original target\n            return handler.wrapValue(originalGet.call(unwrap$1(this)));\n        };\n        getterMap.set(originalGet, get);\n        return get;\n    }\n    wrapSetter(originalSet) {\n        const wrappedSetter = setterMap.get(originalSet);\n        if (!isUndefined(wrappedSetter)) {\n            return wrappedSetter;\n        }\n        const handler = this;\n        const set = function (v) {\n            /* istanbul ignore else */\n            if (process.env.NODE_ENV !== 'production') {\n                const { originalTarget } = handler;\n                throw new Error(`Invalid mutation: Cannot invoke a setter on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n            }\n        };\n        setterMap.set(originalSet, set);\n        return set;\n    }\n    set(shadowTarget, key, value) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            const msg = isArray(originalTarget)\n                ? `Invalid mutation: Cannot mutate array at index ${key.toString()}. Array is read-only.`\n                : `Invalid mutation: Cannot set \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`;\n            throw new Error(msg);\n        }\n        /* istanbul ignore next */\n        return false;\n    }\n    deleteProperty(shadowTarget, key) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot delete \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        /* istanbul ignore next */\n        return false;\n    }\n    setPrototypeOf(shadowTarget, prototype) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid prototype mutation: Cannot set prototype on \"${originalTarget}\". \"${originalTarget}\" prototype is read-only.`);\n        }\n    }\n    preventExtensions(shadowTarget) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot preventExtensions on ${originalTarget}\". \"${originalTarget} is read-only.`);\n        }\n        /* istanbul ignore next */\n        return false;\n    }\n    defineProperty(shadowTarget, key, descriptor) {\n        /* istanbul ignore else */\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot defineProperty \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        /* istanbul ignore next */\n        return false;\n    }\n}\n\nfunction extract(objectOrArray) {\n    if (isArray(objectOrArray)) {\n        return objectOrArray.map((item) => {\n            const original = unwrap$1(item);\n            if (original !== item) {\n                return extract(original);\n            }\n            return item;\n        });\n    }\n    const obj = ObjectCreate(getPrototypeOf(objectOrArray));\n    const names = getOwnPropertyNames(objectOrArray);\n    return ArrayConcat.call(names, getOwnPropertySymbols(objectOrArray)).reduce((seed, key) => {\n        const item = objectOrArray[key];\n        const original = unwrap$1(item);\n        if (original !== item) {\n            seed[key] = extract(original);\n        }\n        else {\n            seed[key] = item;\n        }\n        return seed;\n    }, obj);\n}\nconst formatter = {\n    header: (plainOrProxy) => {\n        const originalTarget = unwrap$1(plainOrProxy);\n        // if originalTarget is falsy or not unwrappable, exit\n        if (!originalTarget || originalTarget === plainOrProxy) {\n            return null;\n        }\n        const obj = extract(plainOrProxy);\n        return ['object', { object: obj }];\n    },\n    hasBody: () => {\n        return false;\n    },\n    body: () => {\n        return null;\n    },\n};\n// Inspired from paulmillr/es6-shim\n// https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L176-L185\n/* istanbul ignore next */\nfunction getGlobal() {\n    // the only reliable means to get the global object is `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    // Gracefully degrade if not able to locate the global object\n    return {};\n}\nfunction init() {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    const global = getGlobal();\n    // Custom Formatter for Dev Tools. To enable this, open Chrome Dev Tools\n    //  - Go to Settings,\n    //  - Under console, select \"Enable custom formatters\"\n    // For more information, https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview\n    const devtoolsFormatters = global.devtoolsFormatters || [];\n    ArrayPush.call(devtoolsFormatters, formatter);\n    global.devtoolsFormatters = devtoolsFormatters;\n}\n\n/* istanbul ignore else */\nif (process.env.NODE_ENV !== 'production') {\n    init();\n}\nfunction defaultValueIsObservable(value) {\n    // intentionally checking for null\n    if (value === null) {\n        return false;\n    }\n    // treat all non-object types, including undefined, as non-observable values\n    if (typeof value !== 'object') {\n        return false;\n    }\n    if (isArray(value)) {\n        return true;\n    }\n    const proto = getPrototypeOf(value);\n    return proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null;\n}\nconst defaultValueObserved = (obj, key) => {\n    /* do nothing */\n};\nconst defaultValueMutated = (obj, key) => {\n    /* do nothing */\n};\nfunction createShadowTarget(value) {\n    return isArray(value) ? [] : {};\n}\nclass ObservableMembrane {\n    constructor(options = {}) {\n        this.readOnlyObjectGraph = new WeakMap();\n        this.reactiveObjectGraph = new WeakMap();\n        const { valueMutated, valueObserved, valueIsObservable, tagPropertyKey } = options;\n        this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n        this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n        this.valueIsObservable = isFunction(valueIsObservable)\n            ? valueIsObservable\n            : defaultValueIsObservable;\n        this.tagPropertyKey = tagPropertyKey;\n    }\n    getProxy(value) {\n        const unwrappedValue = unwrap$1(value);\n        if (this.valueIsObservable(unwrappedValue)) {\n            // When trying to extract the writable version of a readonly we return the readonly.\n            if (this.readOnlyObjectGraph.get(unwrappedValue) === value) {\n                return value;\n            }\n            return this.getReactiveHandler(unwrappedValue);\n        }\n        return unwrappedValue;\n    }\n    getReadOnlyProxy(value) {\n        value = unwrap$1(value);\n        if (this.valueIsObservable(value)) {\n            return this.getReadOnlyHandler(value);\n        }\n        return value;\n    }\n    unwrapProxy(p) {\n        return unwrap$1(p);\n    }\n    getReactiveHandler(value) {\n        let proxy = this.reactiveObjectGraph.get(value);\n        if (isUndefined(proxy)) {\n            // caching the proxy after the first time it is accessed\n            const handler = new ReactiveProxyHandler(this, value);\n            proxy = new Proxy(createShadowTarget(value), handler);\n            registerProxy(proxy, value);\n            this.reactiveObjectGraph.set(value, proxy);\n        }\n        return proxy;\n    }\n    getReadOnlyHandler(value) {\n        let proxy = this.readOnlyObjectGraph.get(value);\n        if (isUndefined(proxy)) {\n            // caching the proxy after the first time it is accessed\n            const handler = new ReadOnlyHandler(this, value);\n            proxy = new Proxy(createShadowTarget(value), handler);\n            registerProxy(proxy, value);\n            this.readOnlyObjectGraph.set(value, proxy);\n        }\n        return proxy;\n    }\n}\n/** version: 2.0.0 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst lockerLivePropertyKey = Symbol.for('@@lockerLiveValue');\nconst reactiveMembrane = new ObservableMembrane({\n    valueObserved,\n    valueMutated,\n    tagPropertyKey: lockerLivePropertyKey,\n});\n/**\n * EXPERIMENTAL: This function implements an unwrap mechanism that\n * works for observable membrane objects. This API is subject to\n * change or being removed.\n */\nfunction unwrap(value) {\n    return reactiveMembrane.unwrapProxy(value);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This operation is called with a descriptor of an standard html property\n * that a Custom Element can support (including AOM properties), which\n * determines what kind of capabilities the Base Lightning Element should support. When producing the new descriptors\n * for the Base Lightning Element, it also include the reactivity bit, so the standard property is reactive.\n */\nfunction createBridgeToElementDescriptor(propName, descriptor) {\n    const { get, set, enumerable, configurable } = descriptor;\n    if (!isFunction$1(get)) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard getter.`);\n        }\n        throw new TypeError();\n    }\n    if (!isFunction$1(set)) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard setter.`);\n        }\n        throw new TypeError();\n    }\n    return {\n        enumerable,\n        configurable,\n        get() {\n            const vm = getAssociatedVM(this);\n            if (isBeingConstructed(vm)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logError(`The value of property \\`${propName}\\` can't be read from the constructor because the owner component hasn't set the value yet. Instead, use the constructor to set a default value for the property.`, vm);\n                }\n                return;\n            }\n            componentValueObserved(vm, propName);\n            return get.call(vm.elm);\n        },\n        set(newValue) {\n            const vm = getAssociatedVM(this);\n            if (process.env.NODE_ENV !== 'production') {\n                const vmBeingRendered = getVMBeingRendered();\n                assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${propName}`);\n                assert.invariant(!isUpdatingTemplate, `When updating the template of ${vmBeingRendered}, one of the accessors used by the template has side effects on the state of ${vm}.${propName}`);\n                assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n                assert.invariant(!isObject(newValue) || isNull(newValue), `Invalid value \"${newValue}\" for \"${propName}\" of ${vm}. Value cannot be an object, must be a primitive value.`);\n            }\n            if (newValue !== vm.cmpProps[propName]) {\n                vm.cmpProps[propName] = newValue;\n                componentValueMutated(vm, propName);\n            }\n            return set.call(vm.elm, newValue);\n        },\n    };\n}\n/**\n * This class is the base class for any LWC element.\n * Some elements directly extends this class, others implement it via inheritance.\n **/\n// @ts-ignore\nconst LightningElement = function () {\n    // This should be as performant as possible, while any initialization should be done lazily\n    if (isNull(vmBeingConstructed)) {\n        throw new ReferenceError('Illegal constructor');\n    }\n    const vm = vmBeingConstructed;\n    const { def, elm } = vm;\n    const { bridge } = def;\n    if (process.env.NODE_ENV !== 'production') {\n        assertInstanceOfHTMLElement$1(vm.elm, `Component creation requires a DOM element to be associated to ${vm}.`);\n    }\n    const component = this;\n    setPrototypeOf(elm, bridge.prototype);\n    vm.component = this;\n    // Locker hooks assignment. When the LWC engine run with Locker, Locker intercepts all the new\n    // component creation and passes hooks to instrument all the component interactions with the\n    // engine. We are intentionally hiding this argument from the formal API of LightningElement\n    // because we don't want folks to know about it just yet.\n    if (arguments.length === 1) {\n        const { callHook, setHook, getHook } = arguments[0];\n        vm.callHook = callHook;\n        vm.setHook = setHook;\n        vm.getHook = getHook;\n    }\n    // Making the component instance a live value when using Locker to support expandos.\n    this[lockerLivePropertyKey] = undefined;\n    // Linking elm, shadow root and component with the VM.\n    associateVM(component, vm);\n    associateVM(elm, vm);\n    if (vm.renderMode === 1 /* Shadow */) {\n        vm.renderRoot = doAttachShadow(vm);\n    }\n    else {\n        vm.renderRoot = elm;\n    }\n    // Adding extra guard rails in DEV mode.\n    if (process.env.NODE_ENV !== 'production') {\n        patchCustomElementWithRestrictions(elm);\n        patchComponentWithRestrictions(component);\n    }\n    return this;\n};\nfunction doAttachShadow(vm) {\n    const { elm, mode, shadowMode, def: { ctor }, } = vm;\n    const shadowRoot = attachShadow$1(elm, {\n        [KEY__SYNTHETIC_MODE]: shadowMode === 1 /* Synthetic */,\n        delegatesFocus: Boolean(ctor.delegatesFocus),\n        mode,\n    });\n    vm.shadowRoot = shadowRoot;\n    associateVM(shadowRoot, vm);\n    if (process.env.NODE_ENV !== 'production') {\n        patchShadowRootWithRestrictions(shadowRoot);\n    }\n    return shadowRoot;\n}\nfunction warnIfInvokedDuringConstruction(vm, methodOrPropName) {\n    if (isBeingConstructed(vm)) {\n        logError(`this.${methodOrPropName} should not be called during the construction of the custom element for ${getComponentTag(vm)} because the element is not yet in the DOM or has no children yet.`);\n    }\n}\n// @ts-ignore\nLightningElement.prototype = {\n    constructor: LightningElement,\n    dispatchEvent(event) {\n        const { elm } = getAssociatedVM(this);\n        return dispatchEvent$1(elm, event);\n    },\n    addEventListener(type, listener, options) {\n        const vm = getAssociatedVM(this);\n        const { elm } = vm;\n        if (process.env.NODE_ENV !== 'production') {\n            const vmBeingRendered = getVMBeingRendered();\n            assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm} by adding an event listener for \"${type}\".`);\n            assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm} by adding an event listener for \"${type}\".`);\n            assert.invariant(isFunction$1(listener), `Invalid second argument for this.addEventListener() in ${vm} for event \"${type}\". Expected an EventListener but received ${listener}.`);\n        }\n        const wrappedListener = getWrappedComponentsListener(vm, listener);\n        addEventListener$1(elm, type, wrappedListener, options);\n    },\n    removeEventListener(type, listener, options) {\n        const vm = getAssociatedVM(this);\n        const { elm } = vm;\n        const wrappedListener = getWrappedComponentsListener(vm, listener);\n        removeEventListener$1(elm, type, wrappedListener, options);\n    },\n    hasAttribute(name) {\n        const { elm } = getAssociatedVM(this);\n        return !isNull(getAttribute$1(elm, name));\n    },\n    hasAttributeNS(namespace, name) {\n        const { elm } = getAssociatedVM(this);\n        return !isNull(getAttribute$1(elm, name, namespace));\n    },\n    removeAttribute(name) {\n        const { elm } = getAssociatedVM(this);\n        unlockAttribute(elm, name);\n        removeAttribute$1(elm, name);\n        lockAttribute();\n    },\n    removeAttributeNS(namespace, name) {\n        const { elm } = getAssociatedVM(this);\n        unlockAttribute(elm, name);\n        removeAttribute$1(elm, name, namespace);\n        lockAttribute();\n    },\n    getAttribute(name) {\n        const { elm } = getAssociatedVM(this);\n        return getAttribute$1(elm, name);\n    },\n    getAttributeNS(namespace, name) {\n        const { elm } = getAssociatedVM(this);\n        return getAttribute$1(elm, name, namespace);\n    },\n    setAttribute(name, value) {\n        const vm = getAssociatedVM(this);\n        const { elm } = vm;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n        }\n        unlockAttribute(elm, name);\n        setAttribute$1(elm, name, value);\n        lockAttribute();\n    },\n    setAttributeNS(namespace, name, value) {\n        const vm = getAssociatedVM(this);\n        const { elm } = vm;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n        }\n        unlockAttribute(elm, name);\n        setAttribute$1(elm, name, value, namespace);\n        lockAttribute();\n    },\n    getBoundingClientRect() {\n        const vm = getAssociatedVM(this);\n        const { elm } = vm;\n        if (process.env.NODE_ENV !== 'production') {\n            warnIfInvokedDuringConstruction(vm, 'getBoundingClientRect()');\n        }\n        return getBoundingClientRect$1(elm);\n    },\n    get isConnected() {\n        const { elm } = getAssociatedVM(this);\n        return isConnected$1(elm);\n    },\n    get classList() {\n        const vm = getAssociatedVM(this);\n        const { elm } = vm;\n        if (process.env.NODE_ENV !== 'production') {\n            // TODO [#1290]: this still fails in dev but works in production, eventually, we should\n            // just throw in all modes\n            assert.isFalse(isBeingConstructed(vm), `Failed to construct ${vm}: The result must not have attributes. Adding or tampering with classname in constructor is not allowed in a web component, use connectedCallback() instead.`);\n        }\n        return getClassList$1(elm);\n    },\n    get template() {\n        const vm = getAssociatedVM(this);\n        if (process.env.NODE_ENV !== 'production') {\n            if (vm.renderMode === 0 /* Light */) {\n                logError('`this.template` returns null for light DOM components. Since there is no shadow, the rendered content can be accessed via `this` itself. e.g. instead of `this.template.querySelector`, use `this.querySelector`.');\n            }\n        }\n        return vm.shadowRoot;\n    },\n    get shadowRoot() {\n        // From within the component instance, the shadowRoot is always reported as \"closed\".\n        // Authors should rely on this.template instead.\n        return null;\n    },\n    render() {\n        const vm = getAssociatedVM(this);\n        return vm.def.template;\n    },\n    toString() {\n        const vm = getAssociatedVM(this);\n        return `[object ${vm.def.name}]`;\n    },\n};\nconst queryAndChildGetterDescriptors = create(null);\n// The reason we don't just call `import * as renderer from '../renderer'` here is that the bundle size\n// is smaller if we reference each function individually. Otherwise Rollup will create one big frozen\n// object representing the renderer, with a lot of methods we don't actually need.\nconst childGetters = [\n    'children',\n    'childNodes',\n    'firstChild',\n    'firstElementChild',\n    'lastChild',\n    'lastElementChild',\n];\nfunction getChildGetter(methodName) {\n    switch (methodName) {\n        case 'children':\n            return getChildren$1;\n        case 'childNodes':\n            return getChildNodes$1;\n        case 'firstChild':\n            return getFirstChild$1;\n        case 'firstElementChild':\n            return getFirstElementChild$1;\n        case 'lastChild':\n            return getLastChild$1;\n        case 'lastElementChild':\n            return getLastElementChild$1;\n    }\n}\n// Generic passthrough for child getters on HTMLElement to the relevant Renderer APIs\nfor (const childGetter of childGetters) {\n    queryAndChildGetterDescriptors[childGetter] = {\n        get() {\n            const vm = getAssociatedVM(this);\n            const { elm } = vm;\n            if (process.env.NODE_ENV !== 'production') {\n                warnIfInvokedDuringConstruction(vm, childGetter);\n            }\n            return getChildGetter(childGetter)(elm);\n        },\n        configurable: true,\n        enumerable: true,\n    };\n}\nconst queryMethods = [\n    'getElementsByClassName',\n    'getElementsByTagName',\n    'querySelector',\n    'querySelectorAll',\n];\nfunction getQueryMethod(methodName) {\n    switch (methodName) {\n        case 'getElementsByClassName':\n            return getElementsByClassName$1;\n        case 'getElementsByTagName':\n            return getElementsByTagName$1;\n        case 'querySelector':\n            return querySelector$1;\n        case 'querySelectorAll':\n            return querySelectorAll$1;\n    }\n}\n// Generic passthrough for query APIs on HTMLElement to the relevant Renderer APIs\nfor (const queryMethod of queryMethods) {\n    queryAndChildGetterDescriptors[queryMethod] = {\n        value(arg) {\n            const vm = getAssociatedVM(this);\n            const { elm } = vm;\n            if (process.env.NODE_ENV !== 'production') {\n                warnIfInvokedDuringConstruction(vm, `${queryMethod}()`);\n            }\n            return getQueryMethod(queryMethod)(elm, arg);\n        },\n        configurable: true,\n        enumerable: true,\n        writable: true,\n    };\n}\ndefineProperties(LightningElement.prototype, queryAndChildGetterDescriptors);\nconst lightningBasedDescriptors = create(null);\nfor (const propName in HTMLElementOriginalDescriptors) {\n    lightningBasedDescriptors[propName] = createBridgeToElementDescriptor(propName, HTMLElementOriginalDescriptors[propName]);\n}\ndefineProperties(LightningElement.prototype, lightningBasedDescriptors);\ndefineProperty(LightningElement, 'CustomElementConstructor', {\n    get() {\n        // If required, a runtime-specific implementation must be defined.\n        throw new ReferenceError('The current runtime does not support CustomElementConstructor.');\n    },\n    configurable: true,\n});\nif (process.env.NODE_ENV !== 'production') {\n    patchLightningElementPrototypeWithRestrictions(LightningElement.prototype);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * @wire decorator to wire fields and methods to a wire adapter in\n * LWC Components. This function implements the internals of this\n * decorator.\n */\nfunction wire(_adapter, _config) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.fail('@wire(adapter, config?) may only be used as a decorator.');\n    }\n    throw new Error();\n}\nfunction internalWireFieldDecorator(key) {\n    return {\n        get() {\n            const vm = getAssociatedVM(this);\n            componentValueObserved(vm, key);\n            return vm.cmpFields[key];\n        },\n        set(value) {\n            const vm = getAssociatedVM(this);\n            /**\n             * Reactivity for wired fields is provided in wiring.\n             * We intentionally add reactivity here since this is just\n             * letting the author to do the wrong thing, but it will keep our\n             * system to be backward compatible.\n             */\n            if (value !== vm.cmpFields[key]) {\n                vm.cmpFields[key] = value;\n                componentValueMutated(vm, key);\n            }\n        },\n        enumerable: true,\n        configurable: true,\n    };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction track(target) {\n    if (arguments.length === 1) {\n        return reactiveMembrane.getProxy(target);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.fail(`@track decorator can only be used with one argument to return a trackable object, or as a decorator function.`);\n    }\n    throw new Error();\n}\nfunction internalTrackDecorator(key) {\n    return {\n        get() {\n            const vm = getAssociatedVM(this);\n            componentValueObserved(vm, key);\n            return vm.cmpFields[key];\n        },\n        set(newValue) {\n            const vm = getAssociatedVM(this);\n            if (process.env.NODE_ENV !== 'production') {\n                const vmBeingRendered = getVMBeingRendered();\n                assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);\n                assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);\n            }\n            const reactiveOrAnyValue = reactiveMembrane.getProxy(newValue);\n            if (reactiveOrAnyValue !== vm.cmpFields[key]) {\n                vm.cmpFields[key] = reactiveOrAnyValue;\n                componentValueMutated(vm, key);\n            }\n        },\n        enumerable: true,\n        configurable: true,\n    };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction api$1() {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.fail(`@api decorator can only be used as a decorator function.`);\n  }\n\n  throw new Error();\n}\nfunction createPublicPropertyDescriptor(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n\n      if (isBeingConstructed(vm)) {\n        if (process.env.NODE_ENV !== 'production') {\n          logError(`Can’t read the value of property \\`${toString$1(key)}\\` from the constructor because the owner component hasn’t set the value yet. Instead, use the constructor to set a default value for the property.`, vm);\n        }\n\n        return;\n      }\n\n      componentValueObserved(vm, key);\n      return vm.cmpProps[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);\n      }\n\n      vm.cmpProps[key] = newValue;\n      componentValueMutated(vm, key);\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\nclass AccessorReactiveObserver extends ReactiveObserver {\n  constructor(vm, set) {\n    super(() => {\n      if (isFalse(this.debouncing)) {\n        this.debouncing = true;\n        addCallbackToNextTick(() => {\n          if (isTrue(this.debouncing)) {\n            const {\n              value\n            } = this;\n            const {\n              isDirty: dirtyStateBeforeSetterCall,\n              component,\n              idx\n            } = vm;\n            set.call(component, value); // de-bouncing after the call to the original setter to prevent\n            // infinity loop if the setter itself is mutating things that\n            // were accessed during the previous invocation.\n\n            this.debouncing = false;\n\n            if (isTrue(vm.isDirty) && isFalse(dirtyStateBeforeSetterCall) && idx > 0) {\n              // immediate rehydration due to a setter driven mutation, otherwise\n              // the component will get rendered on the second tick, which it is not\n              // desirable.\n              rerenderVM(vm);\n            }\n          }\n        });\n      }\n    });\n    this.debouncing = false;\n  }\n\n  reset(value) {\n    super.reset();\n    this.debouncing = false;\n\n    if (arguments.length > 0) {\n      this.value = value;\n    }\n  }\n\n}\nfunction createPublicAccessorDescriptor(key, descriptor) {\n  const {\n    get,\n    set,\n    enumerable,\n    configurable\n  } = descriptor;\n\n  if (!isFunction$1(get)) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.invariant(isFunction$1(get), `Invalid compiler output for public accessor ${toString$1(key)} decorated with @api`);\n    }\n\n    throw new Error();\n  }\n\n  return {\n    get() {\n      if (process.env.NODE_ENV !== 'production') {\n        // Assert that the this value is an actual Component with an associated VM.\n        getAssociatedVM(this);\n      }\n\n      return get.call(this);\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);\n      }\n\n      if (set) {\n        if (runtimeFlags.ENABLE_REACTIVE_SETTER) {\n          let ro = vm.oar[key];\n\n          if (isUndefined$1(ro)) {\n            ro = vm.oar[key] = new AccessorReactiveObserver(vm, set);\n          } // every time we invoke this setter from outside (through this wrapper setter)\n          // we should reset the value and then debounce just in case there is a pending\n          // invocation the next tick that is not longer relevant since the value is changing\n          // from outside.\n\n\n          ro.reset(newValue);\n          ro.observe(() => {\n            set.call(this, newValue);\n          });\n        } else {\n          set.call(this, newValue);\n        }\n      } else if (process.env.NODE_ENV !== 'production') {\n        assert.fail(`Invalid attempt to set a new value for property ${toString$1(key)} of ${vm} that does not has a setter decorated with @api.`);\n      }\n    },\n\n    enumerable,\n    configurable\n  };\n}\n\nfunction createObservedFieldPropertyDescriptor(key) {\n    return {\n        get() {\n            const vm = getAssociatedVM(this);\n            componentValueObserved(vm, key);\n            return vm.cmpFields[key];\n        },\n        set(newValue) {\n            const vm = getAssociatedVM(this);\n            if (newValue !== vm.cmpFields[key]) {\n                vm.cmpFields[key] = newValue;\n                componentValueMutated(vm, key);\n            }\n        },\n        enumerable: true,\n        configurable: true,\n    };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getClassDescriptorType(descriptor) {\n    if (isFunction$1(descriptor.value)) {\n        return \"method\" /* Method */;\n    }\n    else if (isFunction$1(descriptor.set) || isFunction$1(descriptor.get)) {\n        return \"accessor\" /* Accessor */;\n    }\n    else {\n        return \"field\" /* Field */;\n    }\n}\nfunction validateObservedField(Ctor, fieldName, descriptor) {\n    if (!isUndefined$1(descriptor)) {\n        const type = getClassDescriptorType(descriptor);\n        const message = `Invalid observed ${fieldName} field. Found a duplicate ${type} with the same name.`;\n        // [W-9927596] Ideally we always throw an error when detecting duplicate observed field.\n        // This branch is only here for backward compatibility reasons.\n        if (type === \"accessor\" /* Accessor */) {\n            logError(message);\n        }\n        else {\n            assert.fail(message);\n        }\n    }\n}\nfunction validateFieldDecoratedWithTrack(Ctor, fieldName, descriptor) {\n    if (!isUndefined$1(descriptor)) {\n        const type = getClassDescriptorType(descriptor);\n        assert.fail(`Invalid @track ${fieldName} field. Found a duplicate ${type} with the same name.`);\n    }\n}\nfunction validateFieldDecoratedWithWire(Ctor, fieldName, descriptor) {\n    if (!isUndefined$1(descriptor)) {\n        const type = getClassDescriptorType(descriptor);\n        assert.fail(`Invalid @wire ${fieldName} field. Found a duplicate ${type} with the same name.`);\n    }\n}\nfunction validateMethodDecoratedWithWire(Ctor, methodName, descriptor) {\n    if (isUndefined$1(descriptor) || !isFunction$1(descriptor.value) || isFalse(descriptor.writable)) {\n        assert.fail(`Invalid @wire ${methodName} method.`);\n    }\n}\nfunction validateFieldDecoratedWithApi(Ctor, fieldName, descriptor) {\n    if (!isUndefined$1(descriptor)) {\n        const type = getClassDescriptorType(descriptor);\n        const message = `Invalid @api ${fieldName} field. Found a duplicate ${type} with the same name.`;\n        // [W-9927596] Ideally we always throw an error when detecting duplicate public properties.\n        // This branch is only here for backward compatibility reasons.\n        if (type === \"accessor\" /* Accessor */) {\n            logError(message);\n        }\n        else {\n            assert.fail(message);\n        }\n    }\n}\nfunction validateAccessorDecoratedWithApi(Ctor, fieldName, descriptor) {\n    if (isUndefined$1(descriptor)) {\n        assert.fail(`Invalid @api get ${fieldName} accessor.`);\n    }\n    else if (isFunction$1(descriptor.set)) {\n        assert.isTrue(isFunction$1(descriptor.get), `Missing getter for property ${fieldName} decorated with @api in ${Ctor}. You cannot have a setter without the corresponding getter.`);\n    }\n    else if (!isFunction$1(descriptor.get)) {\n        assert.fail(`Missing @api get ${fieldName} accessor.`);\n    }\n}\nfunction validateMethodDecoratedWithApi(Ctor, methodName, descriptor) {\n    if (isUndefined$1(descriptor) || !isFunction$1(descriptor.value) || isFalse(descriptor.writable)) {\n        assert.fail(`Invalid @api ${methodName} method.`);\n    }\n}\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by user-land code.\n */\nfunction registerDecorators(Ctor, meta) {\n    const proto = Ctor.prototype;\n    const { publicProps, publicMethods, wire, track, fields } = meta;\n    const apiMethods = create(null);\n    const apiFields = create(null);\n    const wiredMethods = create(null);\n    const wiredFields = create(null);\n    const observedFields = create(null);\n    const apiFieldsConfig = create(null);\n    let descriptor;\n    if (!isUndefined$1(publicProps)) {\n        for (const fieldName in publicProps) {\n            const propConfig = publicProps[fieldName];\n            apiFieldsConfig[fieldName] = propConfig.config;\n            descriptor = getOwnPropertyDescriptor$1(proto, fieldName);\n            if (propConfig.config > 0) {\n                // accessor declaration\n                if (process.env.NODE_ENV !== 'production') {\n                    validateAccessorDecoratedWithApi(Ctor, fieldName, descriptor);\n                }\n                if (isUndefined$1(descriptor)) {\n                    throw new Error();\n                }\n                descriptor = createPublicAccessorDescriptor(fieldName, descriptor);\n            }\n            else {\n                // field declaration\n                if (process.env.NODE_ENV !== 'production') {\n                    validateFieldDecoratedWithApi(Ctor, fieldName, descriptor);\n                }\n                // [W-9927596] If a component has both a public property and a private setter/getter\n                // with the same name, the property is defined as a public accessor. This branch is\n                // only here for backward compatibility reasons.\n                if (!isUndefined$1(descriptor) && !isUndefined$1(descriptor.get)) {\n                    descriptor = createPublicAccessorDescriptor(fieldName, descriptor);\n                }\n                else {\n                    descriptor = createPublicPropertyDescriptor(fieldName);\n                }\n            }\n            apiFields[fieldName] = descriptor;\n            defineProperty(proto, fieldName, descriptor);\n        }\n    }\n    if (!isUndefined$1(publicMethods)) {\n        forEach.call(publicMethods, (methodName) => {\n            descriptor = getOwnPropertyDescriptor$1(proto, methodName);\n            if (process.env.NODE_ENV !== 'production') {\n                validateMethodDecoratedWithApi(Ctor, methodName, descriptor);\n            }\n            if (isUndefined$1(descriptor)) {\n                throw new Error();\n            }\n            apiMethods[methodName] = descriptor;\n        });\n    }\n    if (!isUndefined$1(wire)) {\n        for (const fieldOrMethodName in wire) {\n            const { adapter, method, config: configCallback, dynamic = [], } = wire[fieldOrMethodName];\n            descriptor = getOwnPropertyDescriptor$1(proto, fieldOrMethodName);\n            if (method === 1) {\n                if (process.env.NODE_ENV !== 'production') {\n                    assert.isTrue(adapter, `@wire on method \"${fieldOrMethodName}\": adapter id must be truthy.`);\n                    validateMethodDecoratedWithWire(Ctor, fieldOrMethodName, descriptor);\n                }\n                if (isUndefined$1(descriptor)) {\n                    throw new Error();\n                }\n                wiredMethods[fieldOrMethodName] = descriptor;\n                storeWiredMethodMeta(descriptor, adapter, configCallback, dynamic);\n            }\n            else {\n                if (process.env.NODE_ENV !== 'production') {\n                    assert.isTrue(adapter, `@wire on field \"${fieldOrMethodName}\": adapter id must be truthy.`);\n                    validateFieldDecoratedWithWire(Ctor, fieldOrMethodName, descriptor);\n                }\n                descriptor = internalWireFieldDecorator(fieldOrMethodName);\n                wiredFields[fieldOrMethodName] = descriptor;\n                storeWiredFieldMeta(descriptor, adapter, configCallback, dynamic);\n                defineProperty(proto, fieldOrMethodName, descriptor);\n            }\n        }\n    }\n    if (!isUndefined$1(track)) {\n        for (const fieldName in track) {\n            descriptor = getOwnPropertyDescriptor$1(proto, fieldName);\n            if (process.env.NODE_ENV !== 'production') {\n                validateFieldDecoratedWithTrack(Ctor, fieldName, descriptor);\n            }\n            descriptor = internalTrackDecorator(fieldName);\n            defineProperty(proto, fieldName, descriptor);\n        }\n    }\n    if (!isUndefined$1(fields)) {\n        for (let i = 0, n = fields.length; i < n; i++) {\n            const fieldName = fields[i];\n            descriptor = getOwnPropertyDescriptor$1(proto, fieldName);\n            if (process.env.NODE_ENV !== 'production') {\n                validateObservedField(Ctor, fieldName, descriptor);\n            }\n            // [W-9927596] Only mark a field as observed whenever it isn't a duplicated public nor\n            // tracked property. This is only here for backward compatibility purposes.\n            const isDuplicatePublicProp = !isUndefined$1(publicProps) && fieldName in publicProps;\n            const isDuplicateTrackedProp = !isUndefined$1(track) && fieldName in track;\n            if (!isDuplicatePublicProp && !isDuplicateTrackedProp) {\n                observedFields[fieldName] = createObservedFieldPropertyDescriptor(fieldName);\n            }\n        }\n    }\n    setDecoratorsMeta(Ctor, {\n        apiMethods,\n        apiFields,\n        apiFieldsConfig,\n        wiredMethods,\n        wiredFields,\n        observedFields,\n    });\n    return Ctor;\n}\nconst signedDecoratorToMetaMap = new Map();\nfunction setDecoratorsMeta(Ctor, meta) {\n    signedDecoratorToMetaMap.set(Ctor, meta);\n}\nconst defaultMeta = {\n    apiMethods: EmptyObject,\n    apiFields: EmptyObject,\n    apiFieldsConfig: EmptyObject,\n    wiredMethods: EmptyObject,\n    wiredFields: EmptyObject,\n    observedFields: EmptyObject,\n};\nfunction getDecoratorsMeta(Ctor) {\n    const meta = signedDecoratorToMetaMap.get(Ctor);\n    return isUndefined$1(meta) ? defaultMeta : meta;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet warned = false;\nif (process.env.NODE_ENV === 'development') {\n    // @ts-ignore\n    window.__lwcResetWarnedOnVersionMismatch = () => {\n        warned = false;\n    };\n}\nfunction checkVersionMismatch(func, type) {\n    const versionMatcher = func.toString().match(LWC_VERSION_COMMENT_REGEX);\n    if (!isNull(versionMatcher) && !warned) {\n        const version = versionMatcher[1];\n        const [major, minor] = version.split('.');\n        const [expectedMajor, expectedMinor] = LWC_VERSION.split('.');\n        if (major !== expectedMajor || minor !== expectedMinor) {\n            warned = true; // only warn once to avoid flooding the console\n            // stylesheets and templates do not have user-meaningful names, but components do\n            const friendlyName = type === 'component' ? `${type} ${func.name}` : type;\n            logError(`LWC WARNING: current engine is v${LWC_VERSION}, but ${friendlyName} was compiled with v${version}.\\nPlease update your compiled code or LWC engine so that the versions match.\\nNo further warnings will appear.`);\n        }\n    }\n}\n\nconst signedTemplateSet = new Set();\nfunction defaultEmptyTemplate() {\n    return [];\n}\nsignedTemplateSet.add(defaultEmptyTemplate);\nfunction isTemplateRegistered(tpl) {\n    return signedTemplateSet.has(tpl);\n}\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\nfunction registerTemplate(tpl) {\n    if (process.env.NODE_ENV !== 'production') {\n        checkVersionMismatch(tpl, 'template');\n    }\n    signedTemplateSet.add(tpl);\n    // chaining this method as a way to wrap existing\n    // assignment of templates easily, without too much transformation\n    return tpl;\n}\n/**\n * EXPERIMENTAL: This function acts like a hook for Lightning Locker Service and other similar\n * libraries to sanitize vulnerable attributes.\n */\nfunction sanitizeAttribute(tagName, namespaceUri, attrName, attrValue) {\n    // locker-service patches this function during runtime to sanitize vulnerable attributes. When\n    // ran off-core this function becomes a noop and returns the user authored value.\n    return attrValue;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// A bridge descriptor is a descriptor whose job is just to get the component instance\n// from the element instance, and get the value or set a new value on the component.\n// This means that across different elements, similar names can get the exact same\n// descriptor, so we can cache them:\nconst cachedGetterByKey = create(null);\nconst cachedSetterByKey = create(null);\nfunction createGetter(key) {\n    let fn = cachedGetterByKey[key];\n    if (isUndefined$1(fn)) {\n        fn = cachedGetterByKey[key] = function () {\n            const vm = getAssociatedVM(this);\n            const { getHook } = vm;\n            return getHook(vm.component, key);\n        };\n    }\n    return fn;\n}\nfunction createSetter(key) {\n    let fn = cachedSetterByKey[key];\n    if (isUndefined$1(fn)) {\n        fn = cachedSetterByKey[key] = function (newValue) {\n            const vm = getAssociatedVM(this);\n            const { setHook } = vm;\n            newValue = reactiveMembrane.getReadOnlyProxy(newValue);\n            setHook(vm.component, key, newValue);\n        };\n    }\n    return fn;\n}\nfunction createMethodCaller(methodName) {\n    return function () {\n        const vm = getAssociatedVM(this);\n        const { callHook, component } = vm;\n        const fn = component[methodName];\n        return callHook(vm.component, fn, ArraySlice.call(arguments));\n    };\n}\nfunction createAttributeChangedCallback(attributeToPropMap, superAttributeChangedCallback) {\n    return function attributeChangedCallback(attrName, oldValue, newValue) {\n        if (oldValue === newValue) {\n            // Ignore same values.\n            return;\n        }\n        const propName = attributeToPropMap[attrName];\n        if (isUndefined$1(propName)) {\n            if (!isUndefined$1(superAttributeChangedCallback)) {\n                // delegate unknown attributes to the super.\n                // Typescript does not like it when you treat the `arguments` object as an array\n                // @ts-ignore type-mismatch\n                superAttributeChangedCallback.apply(this, arguments);\n            }\n            return;\n        }\n        if (!isAttributeLocked(this, attrName)) {\n            // Ignore changes triggered by the engine itself during:\n            // * diffing when public props are attempting to reflect to the DOM\n            // * component via `this.setAttribute()`, should never update the prop\n            // Both cases, the setAttribute call is always wrapped by the unlocking of the\n            // attribute to be changed\n            return;\n        }\n        // Reflect attribute change to the corresponding property when changed from outside.\n        this[propName] = newValue;\n    };\n}\nfunction HTMLBridgeElementFactory(SuperClass, props, methods) {\n    let HTMLBridgeElement;\n    /**\n     * Modern browsers will have all Native Constructors as regular Classes\n     * and must be instantiated with the new keyword. In older browsers,\n     * specifically IE11, those are objects with a prototype property defined,\n     * since they are not supposed to be extended or instantiated with the\n     * new keyword. This forking logic supports both cases, specifically because\n     * wc.ts relies on the construction path of the bridges to create new\n     * fully qualifying web components.\n     */\n    if (isFunction$1(SuperClass)) {\n        HTMLBridgeElement = class extends SuperClass {\n        };\n    }\n    else {\n        HTMLBridgeElement = function () {\n            // Bridge classes are not supposed to be instantiated directly in\n            // browsers that do not support web components.\n            throw new TypeError('Illegal constructor');\n        };\n        // prototype inheritance dance\n        setPrototypeOf(HTMLBridgeElement, SuperClass);\n        setPrototypeOf(HTMLBridgeElement.prototype, SuperClass.prototype);\n        defineProperty(HTMLBridgeElement.prototype, 'constructor', {\n            writable: true,\n            configurable: true,\n            value: HTMLBridgeElement,\n        });\n    }\n    // generating the hash table for attributes to avoid duplicate fields and facilitate validation\n    // and false positives in case of inheritance.\n    const attributeToPropMap = create(null);\n    const { attributeChangedCallback: superAttributeChangedCallback } = SuperClass.prototype;\n    const { observedAttributes: superObservedAttributes = [] } = SuperClass;\n    const descriptors = create(null);\n    // expose getters and setters for each public props on the new Element Bridge\n    for (let i = 0, len = props.length; i < len; i += 1) {\n        const propName = props[i];\n        attributeToPropMap[htmlPropertyToAttribute(propName)] = propName;\n        descriptors[propName] = {\n            get: createGetter(propName),\n            set: createSetter(propName),\n            enumerable: true,\n            configurable: true,\n        };\n    }\n    // expose public methods as props on the new Element Bridge\n    for (let i = 0, len = methods.length; i < len; i += 1) {\n        const methodName = methods[i];\n        descriptors[methodName] = {\n            value: createMethodCaller(methodName),\n            writable: true,\n            configurable: true,\n        };\n    }\n    // creating a new attributeChangedCallback per bridge because they are bound to the corresponding\n    // map of attributes to props. We do this after all other props and methods to avoid the possibility\n    // of getting overrule by a class declaration in user-land, and we make it non-writable, non-configurable\n    // to preserve this definition.\n    descriptors.attributeChangedCallback = {\n        value: createAttributeChangedCallback(attributeToPropMap, superAttributeChangedCallback),\n    };\n    // Specify attributes for which we want to reflect changes back to their corresponding\n    // properties via attributeChangedCallback.\n    defineProperty(HTMLBridgeElement, 'observedAttributes', {\n        get() {\n            return [...superObservedAttributes, ...keys(attributeToPropMap)];\n        },\n    });\n    defineProperties(HTMLBridgeElement.prototype, descriptors);\n    return HTMLBridgeElement;\n}\nconst BaseBridgeElement = HTMLBridgeElementFactory(HTMLElementConstructor$1, getOwnPropertyNames$1(HTMLElementOriginalDescriptors), []);\nfreeze(BaseBridgeElement);\nseal(BaseBridgeElement.prototype);\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction resolveCircularModuleDependency(fn) {\n    const module = fn();\n    return (module === null || module === void 0 ? void 0 : module.__esModule) ? module.default : module;\n}\nfunction isCircularModuleDependency(obj) {\n    return isFunction$1(obj) && hasOwnProperty$1.call(obj, '__circular__');\n}\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst swappedTemplateMap = new WeakMap();\nconst swappedComponentMap = new WeakMap();\nconst swappedStyleMap = new WeakMap();\nconst activeTemplates = new WeakMap();\nconst activeComponents = new WeakMap();\nconst activeStyles = new WeakMap();\n\nfunction rehydrateHotTemplate(tpl) {\n  const list = activeTemplates.get(tpl);\n\n  if (!isUndefined$1(list)) {\n    list.forEach(vm => {\n      if (isFalse(vm.isDirty)) {\n        // forcing the vm to rehydrate in the micro-task:\n        markComponentAsDirty(vm);\n        scheduleRehydration(vm);\n      }\n    }); // resetting the Set to release the memory of those vm references\n    // since they are not longer related to this template, instead\n    // they will get re-associated once these instances are rehydrated.\n\n    list.clear();\n  }\n\n  return true;\n}\n\nfunction rehydrateHotStyle(style) {\n  const list = activeStyles.get(style);\n\n  if (!isUndefined$1(list)) {\n    list.forEach(vm => {\n      // if a style definition is swapped, we must reset\n      // vm's template content in the next micro-task:\n      forceRehydration(vm);\n    }); // resetting the Set to release the memory of those vm references\n    // since they are not longer related to this style, instead\n    // they will get re-associated once these instances are rehydrated.\n\n    list.clear();\n  }\n\n  return true;\n}\n\nfunction rehydrateHotComponent(Ctor) {\n  const list = activeComponents.get(Ctor);\n  let canRefreshAllInstances = true;\n\n  if (!isUndefined$1(list)) {\n    list.forEach(vm => {\n      const {\n        owner\n      } = vm;\n\n      if (!isNull(owner)) {\n        // if a component class definition is swapped, we must reset\n        // owner's template content in the next micro-task:\n        forceRehydration(owner);\n      } else {\n        // the hot swapping for components only work for instances of components\n        // created from a template, root elements can't be swapped because we\n        // don't have a way to force the creation of the element with the same state\n        // of the current element.\n        // Instead, we can report the problem to the caller so it can take action,\n        // for example: reload the entire page.\n        canRefreshAllInstances = false;\n      }\n    }); // resetting the Set to release the memory of those vm references\n    // since they are not longer related to this constructor, instead\n    // they will get re-associated once these instances are rehydrated.\n\n    list.clear();\n  }\n\n  return canRefreshAllInstances;\n}\n\nfunction getTemplateOrSwappedTemplate(tpl) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  if (runtimeFlags.ENABLE_HMR) {\n    const visited = new Set();\n\n    while (swappedTemplateMap.has(tpl) && !visited.has(tpl)) {\n      visited.add(tpl);\n      tpl = swappedTemplateMap.get(tpl);\n    }\n  }\n\n  return tpl;\n}\nfunction getComponentOrSwappedComponent(Ctor) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  if (runtimeFlags.ENABLE_HMR) {\n    const visited = new Set();\n\n    while (swappedComponentMap.has(Ctor) && !visited.has(Ctor)) {\n      visited.add(Ctor);\n      Ctor = swappedComponentMap.get(Ctor);\n    }\n  }\n\n  return Ctor;\n}\nfunction getStyleOrSwappedStyle(style) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  if (runtimeFlags.ENABLE_HMR) {\n    const visited = new Set();\n\n    while (swappedStyleMap.has(style) && !visited.has(style)) {\n      visited.add(style);\n      style = swappedStyleMap.get(style);\n    }\n  }\n\n  return style;\n}\nfunction setActiveVM(vm) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  if (runtimeFlags.ENABLE_HMR) {\n    // tracking active component\n    const Ctor = vm.def.ctor;\n    let componentVMs = activeComponents.get(Ctor);\n\n    if (isUndefined$1(componentVMs)) {\n      componentVMs = new Set();\n      activeComponents.set(Ctor, componentVMs);\n    } // this will allow us to keep track of the hot components\n\n\n    componentVMs.add(vm); // tracking active template\n\n    const tpl = vm.cmpTemplate;\n\n    if (tpl) {\n      let templateVMs = activeTemplates.get(tpl);\n\n      if (isUndefined$1(templateVMs)) {\n        templateVMs = new Set();\n        activeTemplates.set(tpl, templateVMs);\n      } // this will allow us to keep track of the templates that are\n      // being used by a hot component\n\n\n      templateVMs.add(vm); // tracking active styles associated to template\n\n      const stylesheets = tpl.stylesheets;\n\n      if (!isUndefined$1(stylesheets)) {\n        flattenStylesheets(stylesheets).forEach(stylesheet => {\n          // this is necessary because we don't hold the list of styles\n          // in the vm, we only hold the selected (already swapped template)\n          // but the styles attached to the template might not be the actual\n          // active ones, but the swapped versions of those.\n          stylesheet = getStyleOrSwappedStyle(stylesheet);\n          let stylesheetVMs = activeStyles.get(stylesheet);\n\n          if (isUndefined$1(stylesheetVMs)) {\n            stylesheetVMs = new Set();\n            activeStyles.set(stylesheet, stylesheetVMs);\n          } // this will allow us to keep track of the stylesheet that are\n          // being used by a hot component\n\n\n          stylesheetVMs.add(vm);\n        });\n      }\n    }\n  }\n}\nfunction removeActiveVM(vm) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  if (runtimeFlags.ENABLE_HMR) {\n    // tracking inactive component\n    const Ctor = vm.def.ctor;\n    let list = activeComponents.get(Ctor);\n\n    if (!isUndefined$1(list)) {\n      // deleting the vm from the set to avoid leaking memory\n      list.delete(vm);\n    } // removing inactive template\n\n\n    const tpl = vm.cmpTemplate;\n\n    if (tpl) {\n      list = activeTemplates.get(tpl);\n\n      if (!isUndefined$1(list)) {\n        // deleting the vm from the set to avoid leaking memory\n        list.delete(vm);\n      } // removing active styles associated to template\n\n\n      const styles = tpl.stylesheets;\n\n      if (!isUndefined$1(styles)) {\n        flattenStylesheets(styles).forEach(style => {\n          list = activeStyles.get(style);\n\n          if (!isUndefined$1(list)) {\n            // deleting the vm from the set to avoid leaking memory\n            list.delete(vm);\n          }\n        });\n      }\n    }\n  }\n}\nfunction swapTemplate(oldTpl, newTpl) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (isTemplateRegistered(oldTpl) && isTemplateRegistered(newTpl)) {\n      swappedTemplateMap.set(oldTpl, newTpl);\n      return rehydrateHotTemplate(oldTpl);\n    } else {\n      throw new TypeError(`Invalid Template`);\n    }\n  }\n\n  if (!runtimeFlags.ENABLE_HMR) {\n    throw new Error('HMR is not enabled');\n  }\n\n  return false;\n}\nfunction swapComponent(oldComponent, newComponent) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (isComponentConstructor(oldComponent) && isComponentConstructor(newComponent)) {\n      swappedComponentMap.set(oldComponent, newComponent);\n      return rehydrateHotComponent(oldComponent);\n    } else {\n      throw new TypeError(`Invalid Component`);\n    }\n  }\n\n  if (!runtimeFlags.ENABLE_HMR) {\n    throw new Error('HMR is not enabled');\n  }\n\n  return false;\n}\nfunction swapStyle(oldStyle, newStyle) {\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO [#1887]: once the support for registering styles is implemented\n    // we can add the validation of both styles around this block.\n    swappedStyleMap.set(oldStyle, newStyle);\n    return rehydrateHotStyle(oldStyle);\n  }\n\n  if (!runtimeFlags.ENABLE_HMR) {\n    throw new Error('HMR is not enabled');\n  }\n\n  return false;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst CtorToDefMap = new WeakMap();\nfunction getCtorProto(Ctor) {\n    let proto = getPrototypeOf$1(Ctor);\n    if (isNull(proto)) {\n        throw new ReferenceError(`Invalid prototype chain for ${Ctor.name}, you must extend LightningElement.`);\n    }\n    // covering the cases where the ref is circular in AMD\n    if (isCircularModuleDependency(proto)) {\n        const p = resolveCircularModuleDependency(proto);\n        if (process.env.NODE_ENV !== 'production') {\n            if (isNull(p)) {\n                throw new ReferenceError(`Circular module dependency for ${Ctor.name}, must resolve to a constructor that extends LightningElement.`);\n            }\n        }\n        // escape hatch for Locker and other abstractions to provide their own base class instead\n        // of our Base class without having to leak it to user-land. If the circular function returns\n        // itself, that's the signal that we have hit the end of the proto chain, which must always\n        // be base.\n        proto = p === proto ? LightningElement : p;\n    }\n    return proto;\n}\nfunction createComponentDef(Ctor) {\n    const { shadowSupportMode: ctorShadowSupportMode, renderMode: ctorRenderMode } = Ctor;\n    if (process.env.NODE_ENV !== 'production') {\n        const ctorName = Ctor.name;\n        // Removing the following assert until https://bugs.webkit.org/show_bug.cgi?id=190140 is fixed.\n        // assert.isTrue(ctorName && isString(ctorName), `${toString(Ctor)} should have a \"name\" property with string value, but found ${ctorName}.`);\n        assert.isTrue(Ctor.constructor, `Missing ${ctorName}.constructor, ${ctorName} should have a \"constructor\" property.`);\n        if (!isUndefined$1(ctorShadowSupportMode)) {\n            assert.invariant(ctorShadowSupportMode === \"any\" /* Any */ ||\n                ctorShadowSupportMode === \"reset\" /* Default */, `Invalid value for static property shadowSupportMode: '${ctorShadowSupportMode}'`);\n        }\n        if (!isUndefined$1(ctorRenderMode)) {\n            assert.invariant(ctorRenderMode === 'light' || ctorRenderMode === 'shadow', `Invalid value for static property renderMode: '${ctorRenderMode}'. renderMode must be either 'light' or 'shadow'.`);\n        }\n    }\n    const decoratorsMeta = getDecoratorsMeta(Ctor);\n    const { apiFields, apiFieldsConfig, apiMethods, wiredFields, wiredMethods, observedFields } = decoratorsMeta;\n    const proto = Ctor.prototype;\n    let { connectedCallback, disconnectedCallback, renderedCallback, errorCallback, render } = proto;\n    const superProto = getCtorProto(Ctor);\n    const superDef = superProto !== LightningElement ? getComponentInternalDef(superProto) : lightingElementDef;\n    const bridge = HTMLBridgeElementFactory(superDef.bridge, keys(apiFields), keys(apiMethods));\n    const props = assign(create(null), superDef.props, apiFields);\n    const propsConfig = assign(create(null), superDef.propsConfig, apiFieldsConfig);\n    const methods = assign(create(null), superDef.methods, apiMethods);\n    const wire = assign(create(null), superDef.wire, wiredFields, wiredMethods);\n    connectedCallback = connectedCallback || superDef.connectedCallback;\n    disconnectedCallback = disconnectedCallback || superDef.disconnectedCallback;\n    renderedCallback = renderedCallback || superDef.renderedCallback;\n    errorCallback = errorCallback || superDef.errorCallback;\n    render = render || superDef.render;\n    let shadowSupportMode = superDef.shadowSupportMode;\n    if (!isUndefined$1(ctorShadowSupportMode)) {\n        shadowSupportMode = ctorShadowSupportMode;\n    }\n    let renderMode = superDef.renderMode;\n    if (!isUndefined$1(ctorRenderMode)) {\n        renderMode = ctorRenderMode === 'light' ? 0 /* Light */ : 1 /* Shadow */;\n    }\n    const template = getComponentRegisteredTemplate(Ctor) || superDef.template;\n    const name = Ctor.name || superDef.name;\n    // installing observed fields into the prototype.\n    defineProperties(proto, observedFields);\n    const def = {\n        ctor: Ctor,\n        name,\n        wire,\n        props,\n        propsConfig,\n        methods,\n        bridge,\n        template,\n        renderMode,\n        shadowSupportMode,\n        connectedCallback,\n        disconnectedCallback,\n        renderedCallback,\n        errorCallback,\n        render,\n    };\n    if (process.env.NODE_ENV !== 'production') {\n        freeze(Ctor.prototype);\n    }\n    return def;\n}\n/**\n * EXPERIMENTAL: This function allows for the identification of LWC constructors. This API is\n * subject to change or being removed.\n */\nfunction isComponentConstructor(ctor) {\n    if (!isFunction$1(ctor)) {\n        return false;\n    }\n    // Fast path: LightningElement is part of the prototype chain of the constructor.\n    if (ctor.prototype instanceof LightningElement) {\n        return true;\n    }\n    // Slow path: LightningElement is not part of the prototype chain of the constructor, we need\n    // climb up the constructor prototype chain to check in case there are circular dependencies\n    // to resolve.\n    let current = ctor;\n    do {\n        if (isCircularModuleDependency(current)) {\n            const circularResolved = resolveCircularModuleDependency(current);\n            // If the circular function returns itself, that's the signal that we have hit the end\n            // of the proto chain, which must always be a valid base constructor.\n            if (circularResolved === current) {\n                return true;\n            }\n            current = circularResolved;\n        }\n        if (current === LightningElement) {\n            return true;\n        }\n    } while (!isNull(current) && (current = getPrototypeOf$1(current)));\n    // Finally return false if the LightningElement is not part of the prototype chain.\n    return false;\n}\nfunction getComponentInternalDef(Ctor) {\n    if (process.env.NODE_ENV !== 'production') {\n        Ctor = getComponentOrSwappedComponent(Ctor);\n    }\n    let def = CtorToDefMap.get(Ctor);\n    if (isUndefined$1(def)) {\n        if (isCircularModuleDependency(Ctor)) {\n            const resolvedCtor = resolveCircularModuleDependency(Ctor);\n            def = getComponentInternalDef(resolvedCtor);\n            // Cache the unresolved component ctor too. The next time if the same unresolved ctor is used,\n            // look up the definition in cache instead of re-resolving and recreating the def.\n            CtorToDefMap.set(Ctor, def);\n            return def;\n        }\n        if (!isComponentConstructor(Ctor)) {\n            throw new TypeError(`${Ctor} is not a valid component, or does not extends LightningElement from \"lwc\". You probably forgot to add the extend clause on the class declaration.`);\n        }\n        def = createComponentDef(Ctor);\n        CtorToDefMap.set(Ctor, def);\n    }\n    return def;\n}\nfunction getComponentHtmlPrototype(Ctor) {\n    const def = getComponentInternalDef(Ctor);\n    return def.bridge;\n}\nconst lightingElementDef = {\n    ctor: LightningElement,\n    name: LightningElement.name,\n    props: lightningBasedDescriptors,\n    propsConfig: EmptyObject,\n    methods: EmptyObject,\n    renderMode: 1 /* Shadow */,\n    shadowSupportMode: \"reset\" /* Default */,\n    wire: EmptyObject,\n    bridge: BaseBridgeElement,\n    template: defaultEmptyTemplate,\n    render: LightningElement.prototype.render,\n};\n/**\n * EXPERIMENTAL: This function allows for the collection of internal component metadata. This API is\n * subject to change or being removed.\n */\nfunction getComponentDef(Ctor) {\n    const def = getComponentInternalDef(Ctor);\n    // From the internal def object, we need to extract the info that is useful\n    // for some external services, e.g.: Locker Service, usually, all they care\n    // is about the shape of the constructor, the internals of it are not relevant\n    // because they don't have a way to mess with that.\n    const { ctor, name, props, propsConfig, methods } = def;\n    const publicProps = {};\n    for (const key in props) {\n        // avoid leaking the reference to the public props descriptors\n        publicProps[key] = {\n            config: propsConfig[key] || 0,\n            type: \"any\" /* any */,\n            attr: htmlPropertyToAttribute(key),\n        };\n    }\n    const publicMethods = {};\n    for (const key in methods) {\n        // avoid leaking the reference to the public method descriptors\n        publicMethods[key] = methods[key].value;\n    }\n    return {\n        ctor,\n        name,\n        props: publicProps,\n        methods: publicMethods,\n    };\n}\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getUpgradableConstructor(tagName) {\n    // Should never get a tag with upper case letter at this point, the compiler should\n    // produce only tags with lowercase letters\n    // But, for backwards compatibility, we will lower case the tagName\n    tagName = tagName.toLowerCase();\n    let CE = getCustomElement$1(tagName);\n    if (!isUndefined$1(CE)) {\n        return CE;\n    }\n    /**\n     * LWC Upgradable Element reference to an element that was created\n     * via the scoped registry mechanism, and that is ready to be upgraded.\n     */\n    CE = class LWCUpgradableElement extends HTMLElementExported$1 {\n        constructor(upgradeCallback) {\n            super();\n            if (isFunction$1(upgradeCallback)) {\n                upgradeCallback(this); // nothing to do with the result for now\n            }\n        }\n    };\n    defineCustomElement$1(tagName, CE);\n    return CE;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction isVBaseElement(vnode) {\n    const { type } = vnode;\n    return type === 2 /* Element */ || type === 3 /* CustomElement */;\n}\nfunction isSameVnode(vnode1, vnode2) {\n    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ColonCharCode = 58;\nfunction patchAttributes(oldVnode, vnode) {\n    const { attrs } = vnode.data;\n    if (isUndefined$1(attrs)) {\n        return;\n    }\n    const oldAttrs = isNull(oldVnode) ? EmptyObject : oldVnode.data.attrs;\n    if (oldAttrs === attrs) {\n        return;\n    }\n    const { elm } = vnode;\n    for (const key in attrs) {\n        const cur = attrs[key];\n        const old = oldAttrs[key];\n        if (old !== cur) {\n            unlockAttribute(elm, key);\n            if (StringCharCodeAt.call(key, 3) === ColonCharCode) {\n                // Assume xml namespace\n                setAttribute$1(elm, key, cur, XML_NAMESPACE);\n            }\n            else if (StringCharCodeAt.call(key, 5) === ColonCharCode) {\n                // Assume xlink namespace\n                setAttribute$1(elm, key, cur, XLINK_NAMESPACE);\n            }\n            else if (isNull(cur) || isUndefined$1(cur)) {\n                removeAttribute$1(elm, key);\n            }\n            else {\n                setAttribute$1(elm, key, cur);\n            }\n            lockAttribute();\n        }\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction isLiveBindingProp(sel, key) {\n    // For properties with live bindings, we read values from the DOM element\n    // instead of relying on internally tracked values.\n    return sel === 'input' && (key === 'value' || key === 'checked');\n}\nfunction patchProps(oldVnode, vnode) {\n    const { props } = vnode.data;\n    if (isUndefined$1(props)) {\n        return;\n    }\n    const oldProps = isNull(oldVnode) ? EmptyObject : oldVnode.data.props;\n    if (oldProps === props) {\n        return;\n    }\n    const isFirstPatch = isNull(oldVnode);\n    const { elm, sel } = vnode;\n    for (const key in props) {\n        const cur = props[key];\n        // Set the property if it's the first time is is patched or if the previous property is\n        // different than the one previously set.\n        if (isFirstPatch ||\n            cur !== (isLiveBindingProp(sel, key) ? getProperty$1(elm, key) : oldProps[key])) {\n            setProperty$1(elm, key, cur);\n        }\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst classNameToClassMap = create(null);\nfunction getMapFromClassName(className) {\n    // Intentionally using == to match undefined and null values from computed style attribute\n    if (className == null) {\n        return EmptyObject;\n    }\n    // computed class names must be string\n    className = isString(className) ? className : className + '';\n    let map = classNameToClassMap[className];\n    if (map) {\n        return map;\n    }\n    map = create(null);\n    let start = 0;\n    let o;\n    const len = className.length;\n    for (o = 0; o < len; o++) {\n        if (StringCharCodeAt.call(className, o) === SPACE_CHAR) {\n            if (o > start) {\n                map[StringSlice.call(className, start, o)] = true;\n            }\n            start = o + 1;\n        }\n    }\n    if (o > start) {\n        map[StringSlice.call(className, start, o)] = true;\n    }\n    classNameToClassMap[className] = map;\n    if (process.env.NODE_ENV !== 'production') {\n        // just to make sure that this object never changes as part of the diffing algo\n        freeze(map);\n    }\n    return map;\n}\nfunction patchClassAttribute(oldVnode, vnode) {\n    const { elm, data: { className: newClass }, } = vnode;\n    const oldClass = isNull(oldVnode) ? undefined : oldVnode.data.className;\n    if (oldClass === newClass) {\n        return;\n    }\n    const classList = getClassList$1(elm);\n    const newClassMap = getMapFromClassName(newClass);\n    const oldClassMap = getMapFromClassName(oldClass);\n    let name;\n    for (name in oldClassMap) {\n        // remove only if it is not in the new class collection and it is not set from within the instance\n        if (isUndefined$1(newClassMap[name])) {\n            classList.remove(name);\n        }\n    }\n    for (name in newClassMap) {\n        if (isUndefined$1(oldClassMap[name])) {\n            classList.add(name);\n        }\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The style property is a string when defined via an expression in the template.\nfunction patchStyleAttribute(oldVnode, vnode) {\n    const { elm, data: { style: newStyle }, } = vnode;\n    const oldStyle = isNull(oldVnode) ? undefined : oldVnode.data.style;\n    if (oldStyle === newStyle) {\n        return;\n    }\n    if (!isString(newStyle) || newStyle === '') {\n        removeAttribute$1(elm, 'style');\n    }\n    else {\n        setAttribute$1(elm, 'style', newStyle);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction applyEventListeners(vnode) {\n    const { elm, data: { on }, } = vnode;\n    if (isUndefined$1(on)) {\n        return;\n    }\n    for (const name in on) {\n        const handler = on[name];\n        addEventListener$1(elm, name, handler);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The HTML class property becomes the vnode.data.classMap object when defined as a string in the template.\n// The compiler takes care of transforming the inline classnames into an object. It's faster to set the\n// different classnames properties individually instead of via a string.\nfunction applyStaticClassAttribute(vnode) {\n    const { elm, data: { classMap }, } = vnode;\n    if (isUndefined$1(classMap)) {\n        return;\n    }\n    const classList = getClassList$1(elm);\n    for (const name in classMap) {\n        classList.add(name);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The HTML style property becomes the vnode.data.styleDecls object when defined as a string in the template.\n// The compiler takes care of transforming the inline style into an object. It's faster to set the\n// different style properties individually instead of via a string.\nfunction applyStaticStyleAttribute(vnode) {\n    const { elm, data: { styleDecls }, } = vnode;\n    if (isUndefined$1(styleDecls)) {\n        return;\n    }\n    for (let i = 0; i < styleDecls.length; i++) {\n        const [prop, value, important] = styleDecls[i];\n        setCSSStyleProperty$1(elm, prop, value, important);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction patchChildren(c1, c2, parent) {\n    if (hasDynamicChildren(c2)) {\n        updateDynamicChildren(c1, c2, parent);\n    }\n    else {\n        updateStaticChildren(c1, c2, parent);\n    }\n}\nfunction patch(n1, n2) {\n    if (n1 === n2) {\n        return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        if (!isSameVnode(n1, n2)) {\n            throw new Error('Expected these VNodes to be the same: ' +\n                JSON.stringify({ sel: n1.sel, key: n1.key }) +\n                ', ' +\n                JSON.stringify({ sel: n2.sel, key: n2.key }));\n        }\n    }\n    switch (n2.type) {\n        case 0 /* Text */:\n            patchText(n1, n2);\n            break;\n        case 1 /* Comment */:\n            patchComment(n1, n2);\n            break;\n        case 2 /* Element */:\n            patchElement(n1, n2);\n            break;\n        case 3 /* CustomElement */:\n            patchCustomElement(n1, n2);\n            break;\n    }\n}\nfunction mount(node, parent, anchor) {\n    switch (node.type) {\n        case 0 /* Text */:\n            mountText(node, parent, anchor);\n            break;\n        case 1 /* Comment */:\n            mountComment(node, parent, anchor);\n            break;\n        case 2 /* Element */:\n            mountElement(node, parent, anchor);\n            break;\n        case 3 /* CustomElement */:\n            mountCustomElement(node, parent, anchor);\n            break;\n    }\n}\nfunction patchText(n1, n2) {\n    n2.elm = n1.elm;\n    if (n2.text !== n1.text) {\n        updateTextContent(n2);\n    }\n}\nfunction mountText(node, parent, anchor) {\n    const { owner } = node;\n    const textNode = (node.elm = createText$1(node.text));\n    linkNodeToShadow(textNode, owner);\n    insertNode(textNode, parent, anchor);\n}\nfunction patchComment(n1, n2) {\n    n2.elm = n1.elm;\n    // FIXME: Comment nodes should be static, we shouldn't need to diff them together. However\n    // it is the case today.\n    if (n2.text !== n1.text) {\n        updateTextContent(n2);\n    }\n}\nfunction mountComment(node, parent, anchor) {\n    const { owner } = node;\n    const commentNode = (node.elm = createComment$1(node.text));\n    linkNodeToShadow(commentNode, owner);\n    insertNode(commentNode, parent, anchor);\n}\nfunction mountElement(vnode, parent, anchor) {\n    const { sel, owner, data: { svg }, } = vnode;\n    const namespace = isTrue(svg) ? SVG_NAMESPACE : undefined;\n    const elm = createElement$2(sel, namespace);\n    linkNodeToShadow(elm, owner);\n    fallbackElmHook(elm, vnode);\n    vnode.elm = elm;\n    patchElementPropsAndAttrs$1(null, vnode);\n    insertNode(elm, parent, anchor);\n    mountVNodes(vnode.children, elm, null);\n}\nfunction patchElement(n1, n2) {\n    const elm = (n2.elm = n1.elm);\n    patchElementPropsAndAttrs$1(n1, n2);\n    patchChildren(n1.children, n2.children, elm);\n}\nfunction mountCustomElement(vnode, parent, anchor) {\n    const { sel, owner } = vnode;\n    const UpgradableConstructor = getUpgradableConstructor(sel);\n    /**\n     * Note: if the upgradable constructor does not expect, or throw when we new it\n     * with a callback as the first argument, we could implement a more advanced\n     * mechanism that only passes that argument if the constructor is known to be\n     * an upgradable custom element.\n     */\n    let vm;\n    const elm = new UpgradableConstructor((elm) => {\n        // the custom element from the registry is expecting an upgrade callback\n        vm = createViewModelHook(elm, vnode);\n    });\n    linkNodeToShadow(elm, owner);\n    vnode.elm = elm;\n    vnode.vm = vm;\n    if (vm) {\n        allocateChildren(vnode, vm);\n    }\n    else if (vnode.ctor !== UpgradableConstructor) {\n        throw new TypeError(`Incorrect Component Constructor`);\n    }\n    patchElementPropsAndAttrs$1(null, vnode);\n    insertNode(elm, parent, anchor);\n    if (vm) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isTrue(vm.state === 0 /* created */, `${vm} cannot be recycled.`);\n        }\n        runConnectedCallback(vm);\n    }\n    mountVNodes(vnode.children, elm, null);\n    if (vm) {\n        appendVM(vm);\n    }\n}\nfunction patchCustomElement(n1, n2) {\n    const elm = (n2.elm = n1.elm);\n    const vm = (n2.vm = n1.vm);\n    patchElementPropsAndAttrs$1(n1, n2);\n    if (!isUndefined$1(vm)) {\n        // in fallback mode, the allocation will always set children to\n        // empty and delegate the real allocation to the slot elements\n        allocateChildren(n2, vm);\n    }\n    // in fallback mode, the children will be always empty, so, nothing\n    // will happen, but in native, it does allocate the light dom\n    patchChildren(n1.children, n2.children, elm);\n    if (!isUndefined$1(vm)) {\n        // this will probably update the shadowRoot, but only if the vm is in a dirty state\n        // this is important to preserve the top to bottom synchronous rendering phase.\n        rerenderVM(vm);\n    }\n}\nfunction mountVNodes(vnodes, parent, anchor, start = 0, end = vnodes.length) {\n    for (; start < end; ++start) {\n        const vnode = vnodes[start];\n        if (isVNode(vnode)) {\n            mount(vnode, parent, anchor);\n        }\n    }\n}\nfunction unmount(vnode, parent, doRemove = false) {\n    const { type, elm } = vnode;\n    // When unmounting a VNode subtree not all the elements have to removed from the DOM. The\n    // subtree root, is the only element worth unmounting from the subtree.\n    if (doRemove) {\n        removeNode(elm, parent);\n    }\n    switch (type) {\n        case 2 /* Element */:\n            unmountVNodes(vnode.children, elm);\n            break;\n        case 3 /* CustomElement */: {\n            const { vm } = vnode;\n            // No need to unmount the children here, `removeVM` will take care of removing the\n            // children.\n            if (!isUndefined$1(vm)) {\n                removeVM(vm);\n            }\n        }\n    }\n}\nfunction unmountVNodes(vnodes, parent, doRemove = false, start = 0, end = vnodes.length) {\n    for (; start < end; ++start) {\n        const ch = vnodes[start];\n        if (isVNode(ch)) {\n            unmount(ch, parent, doRemove);\n        }\n    }\n}\nfunction isVNode(vnode) {\n    return vnode != null;\n}\nfunction observeElementChildNodes(elm) {\n    elm.$domManual$ = true;\n}\nfunction setElementShadowToken(elm, token) {\n    elm.$shadowToken$ = token;\n}\n// Set the scope token class for *.scoped.css styles\nfunction setScopeTokenClassIfNecessary(elm, owner) {\n    const { cmpTemplate, context } = owner;\n    const token = cmpTemplate === null || cmpTemplate === void 0 ? void 0 : cmpTemplate.stylesheetToken;\n    if (!isUndefined$1(token) && context.hasScopedStyles) {\n        getClassList$1(elm).add(token);\n    }\n}\nfunction linkNodeToShadow(elm, owner) {\n    const { renderRoot, renderMode, shadowMode } = owner;\n    // TODO [#1164]: this should eventually be done by the polyfill directly\n    if (isSyntheticShadowDefined$1) {\n        if (shadowMode === 1 /* Synthetic */ || renderMode === 0 /* Light */) {\n            elm[KEY__SHADOW_RESOLVER] = renderRoot[KEY__SHADOW_RESOLVER];\n        }\n    }\n}\nfunction updateTextContent(vnode) {\n    const { elm, text } = vnode;\n    if (process.env.NODE_ENV !== 'production') {\n        unlockDomMutation();\n    }\n    setText$1(elm, text);\n    if (process.env.NODE_ENV !== 'production') {\n        lockDomMutation();\n    }\n}\nfunction insertNode(node, parent, anchor) {\n    if (process.env.NODE_ENV !== 'production') {\n        unlockDomMutation();\n    }\n    insert$1(node, parent, anchor);\n    if (process.env.NODE_ENV !== 'production') {\n        lockDomMutation();\n    }\n}\nfunction removeNode(node, parent) {\n    if (process.env.NODE_ENV !== 'production') {\n        unlockDomMutation();\n    }\n    remove$1(node, parent);\n    if (process.env.NODE_ENV !== 'production') {\n        lockDomMutation();\n    }\n}\nfunction patchElementPropsAndAttrs$1(oldVnode, vnode) {\n    if (isNull(oldVnode)) {\n        applyEventListeners(vnode);\n        applyStaticClassAttribute(vnode);\n        applyStaticStyleAttribute(vnode);\n    }\n    // Attrs need to be applied to element before props IE11 will wipe out value on radio inputs if\n    // value is set before type=radio.\n    patchClassAttribute(oldVnode, vnode);\n    patchStyleAttribute(oldVnode, vnode);\n    patchAttributes(oldVnode, vnode);\n    patchProps(oldVnode, vnode);\n}\nfunction fallbackElmHook(elm, vnode) {\n    const { owner } = vnode;\n    setScopeTokenClassIfNecessary(elm, owner);\n    if (owner.shadowMode === 1 /* Synthetic */) {\n        const { data: { context }, } = vnode;\n        const { stylesheetToken } = owner.context;\n        if (!isUndefined$1(context) &&\n            !isUndefined$1(context.lwc) &&\n            context.lwc.dom === \"manual\" /* Manual */) {\n            // this element will now accept any manual content inserted into it\n            observeElementChildNodes(elm);\n        }\n        if (!isUndefined$1(stylesheetToken)) {\n            // when running in synthetic shadow mode, we need to set the shadowToken value\n            // into each element from the template, so they can be styled accordingly.\n            setElementShadowToken(elm, stylesheetToken);\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        const { data: { context }, } = vnode;\n        const isPortal = !isUndefined$1(context) &&\n            !isUndefined$1(context.lwc) &&\n            context.lwc.dom === \"manual\" /* Manual */;\n        const isLight = owner.renderMode === 0 /* Light */;\n        patchElementWithRestrictions(elm, { isPortal, isLight });\n    }\n}\nfunction allocateChildren(vnode, vm) {\n    // A component with slots will re-render because:\n    // 1- There is a change of the internal state.\n    // 2- There is a change on the external api (ex: slots)\n    //\n    // In case #1, the vnodes in the cmpSlots will be reused since they didn't changed. This routine emptied the\n    // slotted children when those VCustomElement were rendered and therefore in subsequent calls to allocate children\n    // in a reused VCustomElement, there won't be any slotted children.\n    // For those cases, we will use the reference for allocated children stored when rendering the fresh VCustomElement.\n    //\n    // In case #2, we will always get a fresh VCustomElement.\n    const children = vnode.aChildren || vnode.children;\n    vm.aChildren = children;\n    const { renderMode, shadowMode } = vm;\n    if (shadowMode === 1 /* Synthetic */ || renderMode === 0 /* Light */) {\n        // slow path\n        allocateInSlot(vm, children);\n        // save the allocated children in case this vnode is reused.\n        vnode.aChildren = children;\n        // every child vnode is now allocated, and the host should receive none directly, it receives them via the shadow!\n        vnode.children = EmptyArray;\n    }\n}\nfunction createViewModelHook(elm, vnode) {\n    let vm = getAssociatedVMIfPresent(elm);\n    // There is a possibility that a custom element is registered under tagName, in which case, the\n    // initialization is already carry on, and there is nothing else to do here since this hook is\n    // called right after invoking `document.createElement`.\n    if (!isUndefined$1(vm)) {\n        return vm;\n    }\n    const { sel, mode, ctor, owner } = vnode;\n    setScopeTokenClassIfNecessary(elm, owner);\n    if (owner.shadowMode === 1 /* Synthetic */) {\n        const { stylesheetToken } = owner.context;\n        // when running in synthetic shadow mode, we need to set the shadowToken value\n        // into each element from the template, so they can be styled accordingly.\n        if (!isUndefined$1(stylesheetToken)) {\n            setElementShadowToken(elm, stylesheetToken);\n        }\n    }\n    vm = createVM(elm, ctor, {\n        mode,\n        owner,\n        tagName: sel,\n    });\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isArray$1(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);\n    }\n    return vm;\n}\nfunction allocateInSlot(vm, children) {\n    var _a;\n    const { cmpSlots: oldSlots } = vm;\n    const cmpSlots = (vm.cmpSlots = create(null));\n    for (let i = 0, len = children.length; i < len; i += 1) {\n        const vnode = children[i];\n        if (isNull(vnode)) {\n            continue;\n        }\n        let slotName = '';\n        if (isVBaseElement(vnode)) {\n            slotName = ((_a = vnode.data.attrs) === null || _a === void 0 ? void 0 : _a.slot) || '';\n        }\n        const vnodes = (cmpSlots[slotName] = cmpSlots[slotName] || []);\n        ArrayPush$1.call(vnodes, vnode);\n    }\n    if (isFalse(vm.isDirty)) {\n        // We need to determine if the old allocation is really different from the new one\n        // and mark the vm as dirty\n        const oldKeys = keys(oldSlots);\n        if (oldKeys.length !== keys(cmpSlots).length) {\n            markComponentAsDirty(vm);\n            return;\n        }\n        for (let i = 0, len = oldKeys.length; i < len; i += 1) {\n            const key = oldKeys[i];\n            if (isUndefined$1(cmpSlots[key]) || oldSlots[key].length !== cmpSlots[key].length) {\n                markComponentAsDirty(vm);\n                return;\n            }\n            const oldVNodes = oldSlots[key];\n            const vnodes = cmpSlots[key];\n            for (let j = 0, a = cmpSlots[key].length; j < a; j += 1) {\n                if (oldVNodes[j] !== vnodes[j]) {\n                    markComponentAsDirty(vm);\n                    return;\n                }\n            }\n        }\n    }\n}\n// Using a WeakMap instead of a WeakSet because this one works in IE11 :(\nconst FromIteration = new WeakMap();\n// dynamic children means it was generated by an iteration\n// in a template, and will require a more complex diffing algo.\nfunction markAsDynamicChildren(children) {\n    FromIteration.set(children, 1);\n}\nfunction hasDynamicChildren(children) {\n    return FromIteration.has(children);\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    const map = {};\n    // TODO [#1637]: simplify this by assuming that all vnodes has keys\n    for (let j = beginIdx; j <= endIdx; ++j) {\n        const ch = children[j];\n        if (isVNode(ch)) {\n            const { key } = ch;\n            if (key !== undefined) {\n                map[key] = j;\n            }\n        }\n    }\n    return map;\n}\nfunction updateDynamicChildren(oldCh, newCh, parent) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    const newChEnd = newCh.length - 1;\n    let newEndIdx = newChEnd;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx;\n    let idxInOld;\n    let elmToMove;\n    let before;\n    let clonedOldCh = false;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (!isVNode(oldStartVnode)) {\n            oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n        }\n        else if (!isVNode(oldEndVnode)) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (!isVNode(newStartVnode)) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (!isVNode(newEndVnode)) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            patch(oldStartVnode, newEndVnode);\n            insertNode(oldStartVnode.elm, parent, nextSibling$1(oldEndVnode.elm));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            patch(oldEndVnode, newStartVnode);\n            insertNode(newStartVnode.elm, parent, oldStartVnode.elm);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (oldKeyToIdx === undefined) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (isUndefined$1(idxInOld)) {\n                // New element\n                mount(newStartVnode, parent, oldStartVnode.elm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (isVNode(elmToMove)) {\n                    if (elmToMove.sel !== newStartVnode.sel) {\n                        // New element\n                        mount(newStartVnode, parent, oldStartVnode.elm);\n                    }\n                    else {\n                        patch(elmToMove, newStartVnode);\n                        // Delete the old child, but copy the array since it is read-only.\n                        // The `oldCh` will be GC'ed after `updateDynamicChildren` is complete,\n                        // so we only care about the `oldCh` object inside this function.\n                        // To avoid cloning over and over again, we check `clonedOldCh`\n                        // and only clone once.\n                        if (!clonedOldCh) {\n                            clonedOldCh = true;\n                            oldCh = [...oldCh];\n                        }\n                        // We've already cloned at least once, so it's no longer read-only\n                        oldCh[idxInOld] = undefined;\n                        insertNode(elmToMove.elm, parent, oldStartVnode.elm);\n                    }\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n        }\n    }\n    if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n        if (oldStartIdx > oldEndIdx) {\n            // There's some cases in which the sub array of vnodes to be inserted is followed by null(s) and an\n            // already processed vnode, in such cases the vnodes to be inserted should be before that processed vnode.\n            let i = newEndIdx;\n            let n;\n            do {\n                n = newCh[++i];\n            } while (!isVNode(n) && i < newChEnd);\n            before = isVNode(n) ? n.elm : null;\n            mountVNodes(newCh, parent, before, newStartIdx, newEndIdx + 1);\n        }\n        else {\n            unmountVNodes(oldCh, parent, true, oldStartIdx, oldEndIdx + 1);\n        }\n    }\n}\nfunction updateStaticChildren(c1, c2, parent) {\n    const c1Length = c1.length;\n    const c2Length = c2.length;\n    if (c1Length === 0) {\n        // the old list is empty, we can directly insert anything new\n        mountVNodes(c2, parent, null);\n        return;\n    }\n    if (c2Length === 0) {\n        // the old list is nonempty and the new list is empty so we can directly remove all old nodes\n        // this is the case in which the dynamic children of an if-directive should be removed\n        unmountVNodes(c1, parent, true);\n        return;\n    }\n    // if the old list is not empty, the new list MUST have the same\n    // amount of nodes, that's why we call this static children\n    let anchor = null;\n    for (let i = c2Length - 1; i >= 0; i -= 1) {\n        const n1 = c1[i];\n        const n2 = c2[i];\n        if (n2 !== n1) {\n            if (isVNode(n1)) {\n                if (isVNode(n2)) {\n                    // both vnodes are equivalent, and we just need to patch them\n                    patch(n1, n2);\n                    anchor = n2.elm;\n                }\n                else {\n                    // removing the old vnode since the new one is null\n                    unmount(n1, parent, true);\n                }\n            }\n            else if (isVNode(n2)) {\n                mount(n2, parent, anchor);\n                anchor = n2.elm;\n            }\n        }\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst SymbolIterator = Symbol.iterator;\nfunction addVNodeToChildLWC(vnode) {\n    ArrayPush$1.call(getVMBeingRendered().velements, vnode);\n}\n// [h]tml node\nfunction h(sel, data, children = EmptyArray) {\n    const vmBeingRendered = getVMBeingRendered();\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isString(sel), `h() 1st argument sel must be a string.`);\n        assert.isTrue(isObject(data), `h() 2nd argument data must be an object.`);\n        assert.isTrue(isArray$1(children), `h() 3rd argument children must be an array.`);\n        assert.isTrue('key' in data, ` <${sel}> \"key\" attribute is invalid or missing for ${vmBeingRendered}. Key inside iterator is either undefined or null.`);\n        // checking reserved internal data properties\n        assert.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n        assert.isFalse(data.styleDecls && data.style, `vnode.data.styleDecls and vnode.data.style ambiguous declaration.`);\n        if (data.style && !isString(data.style)) {\n            logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);\n        }\n        forEach.call(children, (childVnode) => {\n            if (childVnode != null) {\n                assert.isTrue('type' in childVnode &&\n                    'sel' in childVnode &&\n                    'elm' in childVnode &&\n                    'key' in childVnode, `${childVnode} is not a vnode.`);\n            }\n        });\n    }\n    let elm;\n    const { key } = data;\n    return {\n        type: 2 /* Element */,\n        sel,\n        data,\n        children,\n        elm,\n        key,\n        owner: vmBeingRendered,\n    };\n}\n// [t]ab[i]ndex function\nfunction ti(value) {\n    // if value is greater than 0, we normalize to 0\n    // If value is an invalid tabIndex value (null, undefined, string, etc), we let that value pass through\n    // If value is less than -1, we don't care\n    const shouldNormalize = value > 0 && !(isTrue(value) || isFalse(value));\n    if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        if (shouldNormalize) {\n            logError(`Invalid tabindex value \\`${toString$1(value)}\\` in template for ${vmBeingRendered}. This attribute must be set to 0 or -1.`, vmBeingRendered);\n        }\n    }\n    return shouldNormalize ? 0 : value;\n}\n// [s]lot element node\nfunction s(slotName, data, children, slotset) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isString(slotName), `s() 1st argument slotName must be a string.`);\n        assert.isTrue(isObject(data), `s() 2nd argument data must be an object.`);\n        assert.isTrue(isArray$1(children), `h() 3rd argument children must be an array.`);\n    }\n    if (!isUndefined$1(slotset) &&\n        !isUndefined$1(slotset[slotName]) &&\n        slotset[slotName].length !== 0) {\n        children = slotset[slotName];\n    }\n    const vmBeingRendered = getVMBeingRendered();\n    const { renderMode, shadowMode } = vmBeingRendered;\n    if (renderMode === 0 /* Light */) {\n        sc(children);\n        return children;\n    }\n    if (shadowMode === 1 /* Synthetic */) {\n        // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n        sc(children);\n    }\n    return h('slot', data, children);\n}\n// [c]ustom element node\nfunction c(sel, Ctor, data, children = EmptyArray) {\n    const vmBeingRendered = getVMBeingRendered();\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isString(sel), `c() 1st argument sel must be a string.`);\n        assert.isTrue(isFunction$1(Ctor), `c() 2nd argument Ctor must be a function.`);\n        assert.isTrue(isObject(data), `c() 3nd argument data must be an object.`);\n        assert.isTrue(arguments.length === 3 || isArray$1(children), `c() 4nd argument data must be an array.`);\n        // checking reserved internal data properties\n        assert.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n        assert.isFalse(data.styleDecls && data.style, `vnode.data.styleDecls and vnode.data.style ambiguous declaration.`);\n        if (data.style && !isString(data.style)) {\n            logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);\n        }\n        if (arguments.length === 4) {\n            forEach.call(children, (childVnode) => {\n                if (childVnode != null) {\n                    assert.isTrue('type' in childVnode &&\n                        'sel' in childVnode &&\n                        'elm' in childVnode &&\n                        'key' in childVnode, `${childVnode} is not a vnode.`);\n                }\n            });\n        }\n    }\n    const { key } = data;\n    let elm, aChildren, vm;\n    const vnode = {\n        type: 3 /* CustomElement */,\n        sel,\n        data,\n        children,\n        elm,\n        key,\n        ctor: Ctor,\n        owner: vmBeingRendered,\n        mode: 'open',\n        aChildren,\n        vm,\n    };\n    addVNodeToChildLWC(vnode);\n    return vnode;\n}\n// [i]terable node\nfunction i(iterable, factory) {\n    const list = [];\n    // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n    sc(list);\n    const vmBeingRendered = getVMBeingRendered();\n    if (isUndefined$1(iterable) || iterable === null) {\n        if (process.env.NODE_ENV !== 'production') {\n            logError(`Invalid template iteration for value \"${toString$1(iterable)}\" in ${vmBeingRendered}. It must be an Array or an iterable Object.`, vmBeingRendered);\n        }\n        return list;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isFalse(isUndefined$1(iterable[SymbolIterator]), `Invalid template iteration for value \\`${toString$1(iterable)}\\` in ${vmBeingRendered}. It must be an array-like object and not \\`null\\` nor \\`undefined\\`.`);\n    }\n    const iterator = iterable[SymbolIterator]();\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(iterator && isFunction$1(iterator.next), `Invalid iterator function for \"${toString$1(iterable)}\" in ${vmBeingRendered}.`);\n    }\n    let next = iterator.next();\n    let j = 0;\n    let { value, done: last } = next;\n    let keyMap;\n    let iterationError;\n    if (process.env.NODE_ENV !== 'production') {\n        keyMap = create(null);\n    }\n    while (last === false) {\n        // implementing a look-back-approach because we need to know if the element is the last\n        next = iterator.next();\n        last = next.done;\n        // template factory logic based on the previous collected value\n        const vnode = factory(value, j, j === 0, last === true);\n        if (isArray$1(vnode)) {\n            ArrayPush$1.apply(list, vnode);\n        }\n        else {\n            ArrayPush$1.call(list, vnode);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const vnodes = isArray$1(vnode) ? vnode : [vnode];\n            forEach.call(vnodes, (childVnode) => {\n                if (!isNull(childVnode) && isObject(childVnode) && !isUndefined$1(childVnode.sel)) {\n                    const { key } = childVnode;\n                    if (isString(key) || isNumber(key)) {\n                        if (keyMap[key] === 1 && isUndefined$1(iterationError)) {\n                            iterationError = `Duplicated \"key\" attribute value for \"<${childVnode.sel}>\" in ${vmBeingRendered} for item number ${j}. A key with value \"${childVnode.key}\" appears more than once in the iteration. Key values must be unique numbers or strings.`;\n                        }\n                        keyMap[key] = 1;\n                    }\n                    else if (isUndefined$1(iterationError)) {\n                        iterationError = `Invalid \"key\" attribute value in \"<${childVnode.sel}>\" in ${vmBeingRendered} for item number ${j}. Set a unique \"key\" value on all iterated child elements.`;\n                    }\n                }\n            });\n        }\n        // preparing next value\n        j += 1;\n        value = next.value;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        if (!isUndefined$1(iterationError)) {\n            logError(iterationError, vmBeingRendered);\n        }\n    }\n    return list;\n}\n/**\n * [f]lattening\n */\nfunction f(items) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isArray$1(items), 'flattening api can only work with arrays.');\n    }\n    const len = items.length;\n    const flattened = [];\n    // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n    sc(flattened);\n    for (let j = 0; j < len; j += 1) {\n        const item = items[j];\n        if (isArray$1(item)) {\n            ArrayPush$1.apply(flattened, item);\n        }\n        else {\n            ArrayPush$1.call(flattened, item);\n        }\n    }\n    return flattened;\n}\n// [t]ext node\nfunction t(text) {\n    let sel, key, elm;\n    return {\n        type: 0 /* Text */,\n        sel,\n        text,\n        elm,\n        key,\n        owner: getVMBeingRendered(),\n    };\n}\n// [co]mment node\nfunction co(text) {\n    let sel, key, elm;\n    return {\n        type: 1 /* Comment */,\n        sel,\n        text,\n        elm,\n        key,\n        owner: getVMBeingRendered(),\n    };\n}\n// [d]ynamic text\nfunction d(value) {\n    return value == null ? '' : String(value);\n}\n// [b]ind function\nfunction b(fn) {\n    const vmBeingRendered = getVMBeingRendered();\n    if (isNull(vmBeingRendered)) {\n        throw new Error();\n    }\n    const vm = vmBeingRendered;\n    return function (event) {\n        invokeEventListener(vm, fn, vm.component, event);\n    };\n}\n// [k]ey function\nfunction k(compilerKey, obj) {\n    switch (typeof obj) {\n        case 'number':\n        case 'string':\n            return compilerKey + ':' + obj;\n        case 'object':\n            if (process.env.NODE_ENV !== 'production') {\n                assert.fail(`Invalid key value \"${obj}\" in ${getVMBeingRendered()}. Key must be a string or number.`);\n            }\n    }\n}\n// [g]lobal [id] function\nfunction gid(id) {\n    const vmBeingRendered = getVMBeingRendered();\n    if (isUndefined$1(id) || id === '') {\n        if (process.env.NODE_ENV !== 'production') {\n            logError(`Invalid id value \"${id}\". The id attribute must contain a non-empty string.`, vmBeingRendered);\n        }\n        return id;\n    }\n    // We remove attributes when they are assigned a value of null\n    if (isNull(id)) {\n        return null;\n    }\n    const { idx, shadowMode } = vmBeingRendered;\n    if (shadowMode === 1 /* Synthetic */) {\n        return StringReplace.call(id, /\\S+/g, (id) => `${id}-${idx}`);\n    }\n    return id;\n}\n// [f]ragment [id] function\nfunction fid(url) {\n    const vmBeingRendered = getVMBeingRendered();\n    if (isUndefined$1(url) || url === '') {\n        if (process.env.NODE_ENV !== 'production') {\n            if (isUndefined$1(url)) {\n                logError(`Undefined url value for \"href\" or \"xlink:href\" attribute. Expected a non-empty string.`, vmBeingRendered);\n            }\n        }\n        return url;\n    }\n    // We remove attributes when they are assigned a value of null\n    if (isNull(url)) {\n        return null;\n    }\n    const { idx, shadowMode } = vmBeingRendered;\n    // Apply transformation only for fragment-only-urls, and only in shadow DOM\n    if (shadowMode === 1 /* Synthetic */ && /^#/.test(url)) {\n        return `${url}-${idx}`;\n    }\n    return url;\n}\n/**\n * Map to store an index value assigned to any dynamic component reference ingested\n * by dc() api. This allows us to generate a unique unique per template per dynamic\n * component reference to avoid diffing algo mismatches.\n */\nconst DynamicImportedComponentMap = new Map();\nlet dynamicImportedComponentCounter = 0;\n/**\n * create a dynamic component via `<x-foo lwc:dynamic={Ctor}>`\n */\nfunction dc(sel, Ctor, data, children = EmptyArray) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isString(sel), `dc() 1st argument sel must be a string.`);\n        assert.isTrue(isObject(data), `dc() 3nd argument data must be an object.`);\n        assert.isTrue(arguments.length === 3 || isArray$1(children), `dc() 4nd argument data must be an array.`);\n    }\n    // null or undefined values should produce a null value in the VNodes\n    if (Ctor == null) {\n        return null;\n    }\n    if (!isComponentConstructor(Ctor)) {\n        throw new Error(`Invalid LWC Constructor ${toString$1(Ctor)} for custom element <${sel}>.`);\n    }\n    let idx = DynamicImportedComponentMap.get(Ctor);\n    if (isUndefined$1(idx)) {\n        idx = dynamicImportedComponentCounter++;\n        DynamicImportedComponentMap.set(Ctor, idx);\n    }\n    // the new vnode key is a mix of idx and compiler key, this is required by the diffing algo\n    // to identify different constructors as vnodes with different keys to avoid reusing the\n    // element used for previous constructors.\n    // Shallow clone is necessary here becuase VElementData may be shared across VNodes due to\n    // hoisting optimization.\n    const newData = Object.assign(Object.assign({}, data), { key: `dc:${idx}:${data.key}` });\n    return c(sel, Ctor, newData, children);\n}\n/**\n * slow children collection marking mechanism. this API allows the compiler to signal\n * to the engine that a particular collection of children must be diffed using the slow\n * algo based on keys due to the nature of the list. E.g.:\n *\n *   - slot element's children: the content of the slot has to be dynamic when in synthetic\n *                              shadow mode because the `vnode.children` might be the slotted\n *                              content vs default content, in which case the size and the\n *                              keys are not matching.\n *   - children that contain dynamic components\n *   - children that are produced by iteration\n *\n */\nfunction sc(vnodes) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isArray$1(vnodes), 'sc() api can only work with arrays.');\n    }\n    // We have to mark the vnodes collection as dynamic so we can later on\n    // choose to use the snabbdom virtual dom diffing algo instead of our\n    // static dummy algo.\n    markAsDynamicChildren(vnodes);\n    return vnodes;\n}\n/**\n * EXPERIMENTAL: This function acts like a hook for Lightning Locker Service and other similar\n * libraries to sanitize HTML content. This hook process the content passed via the template to\n * lwc:inner-html directive.\n * It is meant to be overridden with setSanitizeHtmlContentHook, it throws an error by default.\n */\nlet sanitizeHtmlContentHook = () => {\n    // locker-service patches this function during runtime to sanitize HTML content.\n    throw new Error('sanitizeHtmlContent hook must be implemented.');\n};\n/**\n * Sets the sanitizeHtmlContentHook.\n */\nfunction setSanitizeHtmlContentHook(newHookImpl) {\n    sanitizeHtmlContentHook = newHookImpl;\n}\n// [s]anitize [h]tml [c]ontent\nfunction shc(content) {\n    return sanitizeHtmlContentHook(content);\n}\nconst api = freeze({\n    s,\n    h,\n    c,\n    i,\n    f,\n    t,\n    d,\n    b,\n    k,\n    co,\n    dc,\n    ti,\n    gid,\n    fid,\n    shc,\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction makeHostToken(token) {\n    return `${token}-host`;\n}\nfunction createInlineStyleVNode(content) {\n    return api.h('style', {\n        key: 'style',\n        attrs: {\n            type: 'text/css',\n        },\n    }, [api.t(content)]);\n}\nfunction updateStylesheetToken(vm, template) {\n    const { elm, context, renderMode, shadowMode } = vm;\n    const { stylesheets: newStylesheets, stylesheetToken: newStylesheetToken } = template;\n    const isSyntheticShadow = renderMode === 1 /* Shadow */ && shadowMode === 1 /* Synthetic */;\n    const { hasScopedStyles } = context;\n    let newToken;\n    let newHasTokenInClass;\n    let newHasTokenInAttribute;\n    // Reset the styling token applied to the host element.\n    const { stylesheetToken: oldToken, hasTokenInClass: oldHasTokenInClass, hasTokenInAttribute: oldHasTokenInAttribute, } = context;\n    if (!isUndefined$1(oldToken)) {\n        if (oldHasTokenInClass) {\n            getClassList$1(elm).remove(makeHostToken(oldToken));\n        }\n        if (oldHasTokenInAttribute) {\n            removeAttribute$1(elm, makeHostToken(oldToken));\n        }\n    }\n    // Apply the new template styling token to the host element, if the new template has any\n    // associated stylesheets. In the case of light DOM, also ensure there is at least one scoped stylesheet.\n    if (!isUndefined$1(newStylesheets) && newStylesheets.length !== 0) {\n        newToken = newStylesheetToken;\n    }\n    // Set the new styling token on the host element\n    if (!isUndefined$1(newToken)) {\n        if (hasScopedStyles) {\n            getClassList$1(elm).add(makeHostToken(newToken));\n            newHasTokenInClass = true;\n        }\n        if (isSyntheticShadow) {\n            setAttribute$1(elm, makeHostToken(newToken), '');\n            newHasTokenInAttribute = true;\n        }\n    }\n    // Update the styling tokens present on the context object.\n    context.stylesheetToken = newToken;\n    context.hasTokenInClass = newHasTokenInClass;\n    context.hasTokenInAttribute = newHasTokenInAttribute;\n}\nfunction evaluateStylesheetsContent(stylesheets, stylesheetToken, vm) {\n    const content = [];\n    let root;\n    for (let i = 0; i < stylesheets.length; i++) {\n        let stylesheet = stylesheets[i];\n        if (isArray$1(stylesheet)) {\n            ArrayPush$1.apply(content, evaluateStylesheetsContent(stylesheet, stylesheetToken, vm));\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                // Check for compiler version mismatch in dev mode only\n                checkVersionMismatch(stylesheet, 'stylesheet');\n                // in dev-mode, we support hot swapping of stylesheet, which means that\n                // the component instance might be attempting to use an old version of\n                // the stylesheet, while internally, we have a replacement for it.\n                stylesheet = getStyleOrSwappedStyle(stylesheet);\n            }\n            const isScopedCss = stylesheet[KEY__SCOPED_CSS];\n            // Apply the scope token only if the stylesheet itself is scoped, or if we're rendering synthetic shadow.\n            const scopeToken = isScopedCss ||\n                (vm.shadowMode === 1 /* Synthetic */ && vm.renderMode === 1 /* Shadow */)\n                ? stylesheetToken\n                : undefined;\n            // Use the actual `:host` selector if we're rendering global CSS for light DOM, or if we're rendering\n            // native shadow DOM. Synthetic shadow DOM never uses `:host`.\n            const useActualHostSelector = vm.renderMode === 0 /* Light */\n                ? !isScopedCss\n                : vm.shadowMode === 0 /* Native */;\n            // Use the native :dir() pseudoclass only in native shadow DOM. Otherwise, in synthetic shadow,\n            // we use an attribute selector on the host to simulate :dir().\n            let useNativeDirPseudoclass;\n            if (vm.renderMode === 1 /* Shadow */) {\n                useNativeDirPseudoclass = vm.shadowMode === 0 /* Native */;\n            }\n            else {\n                // Light DOM components should only render `[dir]` if they're inside of a synthetic shadow root.\n                // At the top level (root is null) or inside of a native shadow root, they should use `:dir()`.\n                if (isUndefined$1(root)) {\n                    // Only calculate the root once as necessary\n                    root = getNearestShadowComponent(vm);\n                }\n                useNativeDirPseudoclass = isNull(root) || root.shadowMode === 0 /* Native */;\n            }\n            ArrayPush$1.call(content, stylesheet(scopeToken, useActualHostSelector, useNativeDirPseudoclass));\n        }\n    }\n    return content;\n}\nfunction getStylesheetsContent(vm, template) {\n    const { stylesheets, stylesheetToken } = template;\n    let content = [];\n    if (!isUndefined$1(stylesheets) && stylesheets.length !== 0) {\n        content = evaluateStylesheetsContent(stylesheets, stylesheetToken, vm);\n    }\n    return content;\n}\n// It might be worth caching this to avoid doing the lookup repeatedly, but\n// perf testing has not shown it to be a huge improvement yet:\n// https://github.com/salesforce/lwc/pull/2460#discussion_r691208892\nfunction getNearestShadowComponent(vm) {\n    let owner = vm;\n    while (!isNull(owner)) {\n        if (owner.renderMode === 1 /* Shadow */) {\n            return owner;\n        }\n        owner = owner.owner;\n    }\n    return owner;\n}\nfunction getNearestNativeShadowComponent(vm) {\n    const owner = getNearestShadowComponent(vm);\n    if (!isNull(owner) && owner.shadowMode === 1 /* Synthetic */) {\n        // Synthetic-within-native is impossible. So if the nearest shadow component is\n        // synthetic, we know we won't find a native component if we go any further.\n        return null;\n    }\n    return owner;\n}\nfunction createStylesheet(vm, stylesheets) {\n    const { renderMode, shadowMode } = vm;\n    if (renderMode === 1 /* Shadow */ && shadowMode === 1 /* Synthetic */) {\n        for (let i = 0; i < stylesheets.length; i++) {\n            insertGlobalStylesheet$1(stylesheets[i]);\n        }\n    }\n    else if (ssr$1 || isHydrating$1()) {\n        // Note: We need to ensure that during hydration, the stylesheets method is the same as those in ssr.\n        //       This works in the client, because the stylesheets are created, and cached in the VM\n        //       the first time the VM renders.\n        // native shadow or light DOM, SSR\n        const combinedStylesheetContent = ArrayJoin.call(stylesheets, '\\n');\n        return createInlineStyleVNode(combinedStylesheetContent);\n    }\n    else {\n        // native shadow or light DOM, DOM renderer\n        const root = getNearestNativeShadowComponent(vm);\n        const isGlobal = isNull(root);\n        for (let i = 0; i < stylesheets.length; i++) {\n            if (isGlobal) {\n                insertGlobalStylesheet$1(stylesheets[i]);\n            }\n            else {\n                // local level\n                insertStylesheet$1(stylesheets[i], root.shadowRoot);\n            }\n        }\n    }\n    return null;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst operationIdNameMapping = [\n    'constructor',\n    'render',\n    'patch',\n    'connectedCallback',\n    'renderedCallback',\n    'disconnectedCallback',\n    'errorCallback',\n    'lwc-hydrate',\n    'lwc-rehydrate',\n];\n// Even if all the browser the engine supports implements the UserTiming API, we need to guard the measure APIs.\n// JSDom (used in Jest) for example doesn't implement the UserTiming APIs.\nconst isUserTimingSupported = typeof performance !== 'undefined' &&\n    typeof performance.mark === 'function' &&\n    typeof performance.clearMarks === 'function' &&\n    typeof performance.measure === 'function' &&\n    typeof performance.clearMeasures === 'function';\nconst start = !isUserTimingSupported\n    ? noop\n    : (markName) => {\n        performance.mark(markName);\n    };\nconst end = !isUserTimingSupported\n    ? noop\n    : (measureName, markName) => {\n        performance.measure(measureName, markName);\n        // Clear the created marks and measure to avoid filling the performance entries buffer.\n        // Note: Even if the entries get deleted, existing PerformanceObservers preserve a copy of those entries.\n        performance.clearMarks(markName);\n        performance.clearMeasures(measureName);\n    };\nfunction getOperationName(opId) {\n    return operationIdNameMapping[opId];\n}\nfunction getMeasureName(opId, vm) {\n    return `${getComponentTag(vm)} - ${getOperationName(opId)}`;\n}\nfunction getMarkName(opId, vm) {\n    // Adding the VM idx to the mark name creates a unique mark name component instance. This is necessary to produce\n    // the right measures for components that are recursive.\n    return `${getMeasureName(opId, vm)} - ${vm.idx}`;\n}\n/** Indicates if operations should be logged via the User Timing API. */\nconst isMeasureEnabled = process.env.NODE_ENV !== 'production';\n/** Indicates if operations should be logged by the profiler. */\nlet isProfilerEnabled = false;\n/** The currently assigned profiler dispatcher. */\nlet currentDispatcher = noop;\nconst profilerControl = {\n    enableProfiler() {\n        isProfilerEnabled = true;\n    },\n    disableProfiler() {\n        isProfilerEnabled = false;\n    },\n    attachDispatcher(dispatcher) {\n        currentDispatcher = dispatcher;\n        this.enableProfiler();\n    },\n    detachDispatcher() {\n        const dispatcher = currentDispatcher;\n        currentDispatcher = noop;\n        this.disableProfiler();\n        return dispatcher;\n    },\n};\nfunction logOperationStart(opId, vm) {\n    if (isMeasureEnabled) {\n        const markName = getMarkName(opId, vm);\n        start(markName);\n    }\n    if (isProfilerEnabled) {\n        currentDispatcher(opId, 0 /* Start */, vm.tagName, vm.idx, vm.renderMode, vm.shadowMode);\n    }\n}\nfunction logOperationEnd(opId, vm) {\n    if (isMeasureEnabled) {\n        const markName = getMarkName(opId, vm);\n        const measureName = getMeasureName(opId, vm);\n        end(measureName, markName);\n    }\n    if (isProfilerEnabled) {\n        currentDispatcher(opId, 1 /* Stop */, vm.tagName, vm.idx, vm.renderMode, vm.shadowMode);\n    }\n}\nfunction logGlobalOperationStart(opId, vm) {\n    if (isMeasureEnabled) {\n        const opName = getOperationName(opId);\n        const markName = isUndefined$1(vm) ? opName : getMarkName(opId, vm);\n        start(markName);\n    }\n    if (isProfilerEnabled) {\n        currentDispatcher(opId, 0 /* Start */, vm === null || vm === void 0 ? void 0 : vm.tagName, vm === null || vm === void 0 ? void 0 : vm.idx, vm === null || vm === void 0 ? void 0 : vm.renderMode, vm === null || vm === void 0 ? void 0 : vm.shadowMode);\n    }\n}\nfunction logGlobalOperationEnd(opId, vm) {\n    if (isMeasureEnabled) {\n        const opName = getOperationName(opId);\n        const markName = isUndefined$1(vm) ? opName : getMarkName(opId, vm);\n        end(opName, markName);\n    }\n    if (isProfilerEnabled) {\n        currentDispatcher(opId, 1 /* Stop */, vm === null || vm === void 0 ? void 0 : vm.tagName, vm === null || vm === void 0 ? void 0 : vm.idx, vm === null || vm === void 0 ? void 0 : vm.renderMode, vm === null || vm === void 0 ? void 0 : vm.shadowMode);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet isUpdatingTemplate = false;\nlet vmBeingRendered = null;\nfunction getVMBeingRendered() {\n    return vmBeingRendered;\n}\nfunction setVMBeingRendered(vm) {\n    vmBeingRendered = vm;\n}\nfunction validateSlots(vm, html) {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    const { cmpSlots } = vm;\n    const { slots = EmptyArray } = html;\n    for (const slotName in cmpSlots) {\n        // eslint-disable-next-line lwc-internal/no-production-assert\n        assert.isTrue(isArray$1(cmpSlots[slotName]), `Slots can only be set to an array, instead received ${toString$1(cmpSlots[slotName])} for slot \"${slotName}\" in ${vm}.`);\n        if (slotName !== '' && ArrayIndexOf.call(slots, slotName) === -1) {\n            // TODO [#1297]: this should never really happen because the compiler should always validate\n            // eslint-disable-next-line lwc-internal/no-production-assert\n            logError(`Ignoring unknown provided slot name \"${slotName}\" in ${vm}. Check for a typo on the slot attribute.`, vm);\n        }\n    }\n}\nfunction validateLightDomTemplate(template, vm) {\n    if (template === defaultEmptyTemplate)\n        return;\n    if (vm.renderMode === 0 /* Light */) {\n        assert.isTrue(template.renderMode === 'light', `Light DOM components can't render shadow DOM templates. Add an 'lwc:render-mode=\"light\"' directive to the root template tag of ${getComponentTag(vm)}.`);\n    }\n    else {\n        assert.isTrue(isUndefined$1(template.renderMode), `Shadow DOM components template can't render light DOM templates. Either remove the 'lwc:render-mode' directive from ${getComponentTag(vm)} or set it to 'lwc:render-mode=\"shadow\"`);\n    }\n}\nfunction evaluateTemplate(vm, html) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isFunction$1(html), `evaluateTemplate() second argument must be an imported template instead of ${toString$1(html)}`);\n        // in dev-mode, we support hot swapping of templates, which means that\n        // the component instance might be attempting to use an old version of\n        // the template, while internally, we have a replacement for it.\n        html = getTemplateOrSwappedTemplate(html);\n    }\n    const isUpdatingTemplateInception = isUpdatingTemplate;\n    const vmOfTemplateBeingUpdatedInception = vmBeingRendered;\n    let vnodes = [];\n    runWithBoundaryProtection(vm, vm.owner, () => {\n        // pre\n        vmBeingRendered = vm;\n        logOperationStart(1 /* Render */, vm);\n    }, () => {\n        // job\n        const { component, context, cmpSlots, cmpTemplate, tro } = vm;\n        tro.observe(() => {\n            // Reset the cache memoizer for template when needed.\n            if (html !== cmpTemplate) {\n                if (process.env.NODE_ENV !== 'production') {\n                    validateLightDomTemplate(html, vm);\n                }\n                // Perf opt: do not reset the shadow root during the first rendering (there is\n                // nothing to reset).\n                if (!isNull(cmpTemplate)) {\n                    // It is important to reset the content to avoid reusing similar elements\n                    // generated from a different template, because they could have similar IDs,\n                    // and snabbdom just rely on the IDs.\n                    resetComponentRoot(vm);\n                }\n                // Check that the template was built by the compiler.\n                if (!isTemplateRegistered(html)) {\n                    throw new TypeError(`Invalid template returned by the render() method on ${vm}. It must return an imported template (e.g.: \\`import html from \"./${vm.def.name}.html\"\\`), instead, it has returned: ${toString$1(html)}.`);\n                }\n                vm.cmpTemplate = html;\n                // Create a brand new template cache for the swapped templated.\n                context.tplCache = create(null);\n                // Set the computeHasScopedStyles property in the context, to avoid recomputing it repeatedly.\n                context.hasScopedStyles = computeHasScopedStyles(html);\n                // Update the scoping token on the host element.\n                updateStylesheetToken(vm, html);\n                // Evaluate, create stylesheet and cache the produced VNode for future\n                // re-rendering.\n                const stylesheetsContent = getStylesheetsContent(vm, html);\n                context.styleVNode =\n                    stylesheetsContent.length === 0\n                        ? null\n                        : createStylesheet(vm, stylesheetsContent);\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                // validating slots in every rendering since the allocated content might change over time\n                validateSlots(vm, html);\n                // add the VM to the list of host VMs that can be re-rendered if html is swapped\n                setActiveVM(vm);\n            }\n            // right before producing the vnodes, we clear up all internal references\n            // to custom elements from the template.\n            vm.velements = [];\n            // Set the global flag that template is being updated\n            isUpdatingTemplate = true;\n            vnodes = html.call(undefined, api, component, cmpSlots, context.tplCache);\n            const { styleVNode } = context;\n            if (!isNull(styleVNode)) {\n                ArrayUnshift.call(vnodes, styleVNode);\n            }\n        });\n    }, () => {\n        // post\n        isUpdatingTemplate = isUpdatingTemplateInception;\n        vmBeingRendered = vmOfTemplateBeingUpdatedInception;\n        logOperationEnd(1 /* Render */, vm);\n    });\n    if (process.env.NODE_ENV !== 'production') {\n        assert.invariant(isArray$1(vnodes), `Compiler should produce html functions that always return an array.`);\n    }\n    return vnodes;\n}\nfunction computeHasScopedStyles(template) {\n    const { stylesheets } = template;\n    if (!isUndefined$1(stylesheets)) {\n        for (let i = 0; i < stylesheets.length; i++) {\n            if (isTrue(stylesheets[i][KEY__SCOPED_CSS])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet isInvokingRender = false;\nlet vmBeingConstructed = null;\nfunction isBeingConstructed(vm) {\n    return vmBeingConstructed === vm;\n}\nfunction invokeComponentCallback(vm, fn, args) {\n    const { component, callHook, owner } = vm;\n    runWithBoundaryProtection(vm, owner, noop, () => {\n        callHook(component, fn, args);\n    }, noop);\n}\nfunction invokeComponentConstructor(vm, Ctor) {\n    const vmBeingConstructedInception = vmBeingConstructed;\n    let error;\n    logOperationStart(0 /* Constructor */, vm);\n    vmBeingConstructed = vm;\n    /**\n     * Constructors don't need to be wrapped with a boundary because for root elements\n     * it should throw, while elements from template are already wrapped by a boundary\n     * associated to the diffing algo.\n     */\n    try {\n        // job\n        const result = new Ctor();\n        // Check indirectly if the constructor result is an instance of LightningElement. Using\n        // the \"instanceof\" operator would not work here since Locker Service provides its own\n        // implementation of LightningElement, so we indirectly check if the base constructor is\n        // invoked by accessing the component on the vm.\n        if (vmBeingConstructed.component !== result) {\n            throw new TypeError('Invalid component constructor, the class should extend LightningElement.');\n        }\n    }\n    catch (e) {\n        error = Object(e);\n    }\n    finally {\n        logOperationEnd(0 /* Constructor */, vm);\n        vmBeingConstructed = vmBeingConstructedInception;\n        if (!isUndefined$1(error)) {\n            addErrorComponentStack(vm, error);\n            // re-throwing the original error annotated after restoring the context\n            throw error; // eslint-disable-line no-unsafe-finally\n        }\n    }\n}\nfunction invokeComponentRenderMethod(vm) {\n    const { def: { render }, callHook, component, owner, } = vm;\n    const isRenderBeingInvokedInception = isInvokingRender;\n    const vmBeingRenderedInception = getVMBeingRendered();\n    let html;\n    let renderInvocationSuccessful = false;\n    runWithBoundaryProtection(vm, owner, () => {\n        // pre\n        isInvokingRender = true;\n        setVMBeingRendered(vm);\n    }, () => {\n        // job\n        vm.tro.observe(() => {\n            html = callHook(component, render);\n            renderInvocationSuccessful = true;\n        });\n    }, () => {\n        // post\n        isInvokingRender = isRenderBeingInvokedInception;\n        setVMBeingRendered(vmBeingRenderedInception);\n    });\n    // If render() invocation failed, process errorCallback in boundary and return an empty template\n    return renderInvocationSuccessful ? evaluateTemplate(vm, html) : [];\n}\nfunction invokeEventListener(vm, fn, thisValue, event) {\n    const { callHook, owner } = vm;\n    runWithBoundaryProtection(vm, owner, noop, () => {\n        // job\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isTrue(isFunction$1(fn), `Invalid event handler for event '${event.type}' on ${vm}.`);\n        }\n        callHook(thisValue, fn, [event]);\n    }, noop);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst signedTemplateMap = new Map();\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\nfunction registerComponent(\n// We typically expect a LightningElementConstructor, but technically you can call this with anything\nCtor, { tmpl }) {\n    if (isFunction$1(Ctor)) {\n        if (process.env.NODE_ENV !== 'production') {\n            checkVersionMismatch(Ctor, 'component');\n        }\n        signedTemplateMap.set(Ctor, tmpl);\n    }\n    // chaining this method as a way to wrap existing assignment of component constructor easily,\n    // without too much transformation\n    return Ctor;\n}\nfunction getComponentRegisteredTemplate(Ctor) {\n    return signedTemplateMap.get(Ctor);\n}\nfunction getTemplateReactiveObserver(vm) {\n    return new ReactiveObserver(() => {\n        const { isDirty } = vm;\n        if (isFalse(isDirty)) {\n            markComponentAsDirty(vm);\n            scheduleRehydration(vm);\n        }\n    });\n}\nfunction renderComponent(vm) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.invariant(vm.isDirty, `${vm} is not dirty.`);\n    }\n    vm.tro.reset();\n    const vnodes = invokeComponentRenderMethod(vm);\n    vm.isDirty = false;\n    vm.isScheduled = false;\n    return vnodes;\n}\nfunction markComponentAsDirty(vm) {\n    if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.isFalse(vm.isDirty, `markComponentAsDirty() for ${vm} should not be called when the component is already dirty.`);\n        assert.isFalse(isInvokingRender, `markComponentAsDirty() for ${vm} cannot be called during rendering of ${vmBeingRendered}.`);\n        assert.isFalse(isUpdatingTemplate, `markComponentAsDirty() for ${vm} cannot be called while updating template of ${vmBeingRendered}.`);\n    }\n    vm.isDirty = true;\n}\nconst cmpEventListenerMap = new WeakMap();\nfunction getWrappedComponentsListener(vm, listener) {\n    if (!isFunction$1(listener)) {\n        throw new TypeError(); // avoiding problems with non-valid listeners\n    }\n    let wrappedListener = cmpEventListenerMap.get(listener);\n    if (isUndefined$1(wrappedListener)) {\n        wrappedListener = function (event) {\n            invokeEventListener(vm, listener, undefined, event);\n        };\n        cmpEventListenerMap.set(listener, wrappedListener);\n    }\n    return wrappedListener;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst Services = create(null);\nconst hooks = ['rendered', 'connected', 'disconnected'];\n/**\n * EXPERIMENTAL: This function allows for the registration of \"services\"\n * in LWC by exposing hooks into the component life-cycle. This API is\n * subject to change or being removed.\n */\nfunction register(service) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isObject(service), `Invalid service declaration, ${service}: service must be an object`);\n    }\n    for (let i = 0; i < hooks.length; ++i) {\n        const hookName = hooks[i];\n        if (hookName in service) {\n            let l = Services[hookName];\n            if (isUndefined$1(l)) {\n                Services[hookName] = l = [];\n            }\n            ArrayPush$1.call(l, service[hookName]);\n        }\n    }\n}\nfunction invokeServiceHook(vm, cbs) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(isArray$1(cbs) && cbs.length > 0, `Optimize invokeServiceHook() to be invoked only when needed`);\n    }\n    const { component, def, context } = vm;\n    for (let i = 0, len = cbs.length; i < len; ++i) {\n        cbs[i].call(undefined, component, {}, def, context);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet idx = 0;\n/** The internal slot used to associate different objects the engine manipulates with the VM */\n\nconst ViewModelReflection = new WeakMap();\n\nfunction callHook(cmp, fn, args = []) {\n  return fn.apply(cmp, args);\n}\n\nfunction setHook(cmp, prop, newValue) {\n  cmp[prop] = newValue;\n}\n\nfunction getHook(cmp, prop) {\n  return cmp[prop];\n}\n\nfunction rerenderVM(vm) {\n  rehydrate(vm);\n}\nfunction connectRootElement(elm) {\n  const vm = getAssociatedVM(elm);\n  logGlobalOperationStart(7\n  /* GlobalHydrate */\n  , vm); // Usually means moving the element from one place to another, which is observable via\n  // life-cycle hooks.\n\n  if (vm.state === 1\n  /* connected */\n  ) {\n    disconnectRootElement(elm);\n  }\n\n  runConnectedCallback(vm);\n  rehydrate(vm);\n  logGlobalOperationEnd(7\n  /* GlobalHydrate */\n  , vm);\n}\nfunction disconnectRootElement(elm) {\n  const vm = getAssociatedVM(elm);\n  resetComponentStateWhenRemoved(vm);\n}\nfunction appendVM(vm) {\n  rehydrate(vm);\n} // just in case the component comes back, with this we guarantee re-rendering it\n// while preventing any attempt to rehydration until after reinsertion.\n\nfunction resetComponentStateWhenRemoved(vm) {\n  const {\n    state\n  } = vm;\n\n  if (state !== 2\n  /* disconnected */\n  ) {\n    const {\n      oar,\n      tro\n    } = vm; // Making sure that any observing record will not trigger the rehydrated on this vm\n\n    tro.reset(); // Making sure that any observing accessor record will not trigger the setter to be reinvoked\n\n    for (const key in oar) {\n      oar[key].reset();\n    }\n\n    runDisconnectedCallback(vm); // Spec: https://dom.spec.whatwg.org/#concept-node-remove (step 14-15)\n\n    runChildNodesDisconnectedCallback(vm);\n    runLightChildNodesDisconnectedCallback(vm);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    removeActiveVM(vm);\n  }\n} // this method is triggered by the diffing algo only when a vnode from the\n// old vnode.children is removed from the DOM.\n\n\nfunction removeVM(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(vm.state === 1\n    /* connected */\n    || vm.state === 2\n    /* disconnected */\n    , `${vm} must have been connected.`);\n  }\n\n  resetComponentStateWhenRemoved(vm);\n}\n\nfunction getNearestShadowAncestor(vm) {\n  let ancestor = vm.owner;\n\n  while (!isNull(ancestor) && ancestor.renderMode === 0\n  /* Light */\n  ) {\n    ancestor = ancestor.owner;\n  }\n\n  return ancestor;\n}\n\nfunction createVM(elm, ctor, options) {\n  const {\n    mode,\n    owner,\n    tagName\n  } = options;\n  const def = getComponentInternalDef(ctor);\n  const vm = {\n    elm,\n    def,\n    idx: idx++,\n    state: 0\n    /* created */\n    ,\n    isScheduled: false,\n    isDirty: true,\n    tagName,\n    mode,\n    owner,\n    children: EmptyArray,\n    aChildren: EmptyArray,\n    velements: EmptyArray,\n    cmpProps: create(null),\n    cmpFields: create(null),\n    cmpSlots: create(null),\n    oar: create(null),\n    cmpTemplate: null,\n    renderMode: def.renderMode,\n    context: {\n      stylesheetToken: undefined,\n      hasTokenInClass: undefined,\n      hasTokenInAttribute: undefined,\n      hasScopedStyles: undefined,\n      styleVNode: null,\n      tplCache: EmptyObject,\n      wiredConnecting: EmptyArray,\n      wiredDisconnecting: EmptyArray\n    },\n    // Properties set right after VM creation.\n    tro: null,\n    shadowMode: null,\n    // Properties set by the LightningElement constructor.\n    component: null,\n    shadowRoot: null,\n    renderRoot: null,\n    callHook,\n    setHook,\n    getHook\n  };\n  vm.shadowMode = computeShadowMode(vm);\n  vm.tro = getTemplateReactiveObserver(vm);\n\n  if (process.env.NODE_ENV !== 'production') {\n    vm.toString = () => {\n      return `[object:vm ${def.name} (${vm.idx})]`;\n    };\n\n    if (runtimeFlags.ENABLE_FORCE_NATIVE_SHADOW_MODE_FOR_TEST) {\n      vm.shadowMode = 0\n      /* Native */\n      ;\n    }\n  } // Create component instance associated to the vm and the element.\n\n\n  invokeComponentConstructor(vm, def.ctor); // Initializing the wire decorator per instance only when really needed\n\n  if (hasWireAdapters(vm)) {\n    installWireAdapters(vm);\n  }\n\n  return vm;\n}\n\nfunction computeShadowMode(vm) {\n  const {\n    def\n  } = vm;\n  let shadowMode;\n\n  if (isSyntheticShadowDefined$1) {\n    if (def.renderMode === 0\n    /* Light */\n    ) {\n      // ShadowMode.Native implies \"not synthetic shadow\" which is consistent with how\n      // everything defaults to native when the synthetic shadow polyfill is unavailable.\n      shadowMode = 0\n      /* Native */\n      ;\n    } else if (isNativeShadowDefined$1) {\n      // Not combined with above condition because @lwc/features only supports identifiers in\n      // the if-condition.\n      if (runtimeFlags.ENABLE_MIXED_SHADOW_MODE) {\n        if (def.shadowSupportMode === \"any\"\n        /* Any */\n        ) {\n          shadowMode = 0\n          /* Native */\n          ;\n        } else {\n          const shadowAncestor = getNearestShadowAncestor(vm);\n\n          if (!isNull(shadowAncestor) && shadowAncestor.shadowMode === 0\n          /* Native */\n          ) {\n            // Transitive support for native Shadow DOM. A component in native mode\n            // transitively opts all of its descendants into native.\n            shadowMode = 0\n            /* Native */\n            ;\n          } else {\n            // Synthetic if neither this component nor any of its ancestors are configured\n            // to be native.\n            shadowMode = 1\n            /* Synthetic */\n            ;\n          }\n        }\n      } else {\n        shadowMode = 1\n        /* Synthetic */\n        ;\n      }\n    } else {\n      // Synthetic if there is no native Shadow DOM support.\n      shadowMode = 1\n      /* Synthetic */\n      ;\n    }\n  } else {\n    // Native if the synthetic shadow polyfill is unavailable.\n    shadowMode = 0\n    /* Native */\n    ;\n  }\n\n  return shadowMode;\n}\n\nfunction assertIsVM(obj) {\n  if (isNull(obj) || !isObject(obj) || !('renderRoot' in obj)) {\n    throw new TypeError(`${obj} is not a VM.`);\n  }\n}\n\nfunction associateVM(obj, vm) {\n  ViewModelReflection.set(obj, vm);\n}\nfunction getAssociatedVM(obj) {\n  const vm = ViewModelReflection.get(obj);\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertIsVM(vm);\n  }\n\n  return vm;\n}\nfunction getAssociatedVMIfPresent(obj) {\n  const maybeVm = ViewModelReflection.get(obj);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined$1(maybeVm)) {\n      assertIsVM(maybeVm);\n    }\n  }\n\n  return maybeVm;\n}\n\nfunction rehydrate(vm) {\n  if (isTrue(vm.isDirty)) {\n    const children = renderComponent(vm);\n    patchShadowRoot(vm, children);\n  }\n}\n\nfunction patchShadowRoot(vm, newCh) {\n  const {\n    renderRoot,\n    children: oldCh\n  } = vm; // caching the new children collection\n\n  vm.children = newCh;\n\n  if (newCh.length > 0 || oldCh.length > 0) {\n    // patch function mutates vnodes by adding the element reference,\n    // however, if patching fails it contains partial changes.\n    if (oldCh !== newCh) {\n      runWithBoundaryProtection(vm, vm, () => {\n        // pre\n        logOperationStart(2\n        /* Patch */\n        , vm);\n      }, () => {\n        // job\n        patchChildren(oldCh, newCh, renderRoot);\n      }, () => {\n        // post\n        logOperationEnd(2\n        /* Patch */\n        , vm);\n      });\n    }\n  }\n\n  if (vm.state === 1\n  /* connected */\n  ) {\n    // If the element is connected, that means connectedCallback was already issued, and\n    // any successive rendering should finish with the call to renderedCallback, otherwise\n    // the connectedCallback will take care of calling it in the right order at the end of\n    // the current rehydration process.\n    runRenderedCallback(vm);\n  }\n}\n\nfunction runRenderedCallback(vm) {\n  const {\n    def: {\n      renderedCallback\n    }\n  } = vm;\n\n  if (isTrue(ssr$1)) {\n    return;\n  }\n\n  const {\n    rendered\n  } = Services;\n\n  if (rendered) {\n    invokeServiceHook(vm, rendered);\n  }\n\n  if (!isUndefined$1(renderedCallback)) {\n    logOperationStart(4\n    /* RenderedCallback */\n    , vm);\n    invokeComponentCallback(vm, renderedCallback);\n    logOperationEnd(4\n    /* RenderedCallback */\n    , vm);\n  }\n}\nlet rehydrateQueue = [];\n\nfunction flushRehydrationQueue() {\n  logGlobalOperationStart(8\n  /* GlobalRehydrate */\n  );\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(rehydrateQueue.length, `If rehydrateQueue was scheduled, it is because there must be at least one VM on this pending queue instead of ${rehydrateQueue}.`);\n  }\n\n  const vms = rehydrateQueue.sort((a, b) => a.idx - b.idx);\n  rehydrateQueue = []; // reset to a new queue\n\n  for (let i = 0, len = vms.length; i < len; i += 1) {\n    const vm = vms[i];\n\n    try {\n      rehydrate(vm);\n    } catch (error) {\n      if (i + 1 < len) {\n        // pieces of the queue are still pending to be rehydrated, those should have priority\n        if (rehydrateQueue.length === 0) {\n          addCallbackToNextTick(flushRehydrationQueue);\n        }\n\n        ArrayUnshift.apply(rehydrateQueue, ArraySlice.call(vms, i + 1));\n      } // we need to end the measure before throwing.\n\n\n      logGlobalOperationEnd(8\n      /* GlobalRehydrate */\n      ); // re-throwing the original error will break the current tick, but since the next tick is\n      // already scheduled, it should continue patching the rest.\n\n      throw error; // eslint-disable-line no-unsafe-finally\n    }\n  }\n\n  logGlobalOperationEnd(8\n  /* GlobalRehydrate */\n  );\n}\n\nfunction runConnectedCallback(vm) {\n  const {\n    state\n  } = vm;\n\n  if (state === 1\n  /* connected */\n  ) {\n    return; // nothing to do since it was already connected\n  }\n\n  vm.state = 1\n  /* connected */\n  ; // reporting connection\n\n  const {\n    connected\n  } = Services;\n\n  if (connected) {\n    invokeServiceHook(vm, connected);\n  }\n\n  if (hasWireAdapters(vm)) {\n    connectWireAdapters(vm);\n  }\n\n  const {\n    connectedCallback\n  } = vm.def;\n\n  if (!isUndefined$1(connectedCallback)) {\n    logOperationStart(3\n    /* ConnectedCallback */\n    , vm);\n    invokeComponentCallback(vm, connectedCallback);\n    logOperationEnd(3\n    /* ConnectedCallback */\n    , vm);\n  }\n}\n\nfunction hasWireAdapters(vm) {\n  return getOwnPropertyNames$1(vm.def.wire).length > 0;\n}\n\nfunction runDisconnectedCallback(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(vm.state !== 2\n    /* disconnected */\n    , `${vm} must be inserted.`);\n  }\n\n  if (isFalse(vm.isDirty)) {\n    // this guarantees that if the component is reused/reinserted,\n    // it will be re-rendered because we are disconnecting the reactivity\n    // linking, so mutations are not automatically reflected on the state\n    // of disconnected components.\n    vm.isDirty = true;\n  }\n\n  vm.state = 2\n  /* disconnected */\n  ; // reporting disconnection\n\n  const {\n    disconnected\n  } = Services;\n\n  if (disconnected) {\n    invokeServiceHook(vm, disconnected);\n  }\n\n  if (hasWireAdapters(vm)) {\n    disconnectWireAdapters(vm);\n  }\n\n  const {\n    disconnectedCallback\n  } = vm.def;\n\n  if (!isUndefined$1(disconnectedCallback)) {\n    logOperationStart(5\n    /* DisconnectedCallback */\n    , vm);\n    invokeComponentCallback(vm, disconnectedCallback);\n    logOperationEnd(5\n    /* DisconnectedCallback */\n    , vm);\n  }\n}\n\nfunction runChildNodesDisconnectedCallback(vm) {\n  const {\n    velements: vCustomElementCollection\n  } = vm; // Reporting disconnection for every child in inverse order since they are\n  // inserted in reserved order.\n\n  for (let i = vCustomElementCollection.length - 1; i >= 0; i -= 1) {\n    const {\n      elm\n    } = vCustomElementCollection[i]; // There are two cases where the element could be undefined:\n    // * when there is an error during the construction phase, and an error\n    //   boundary picks it, there is a possibility that the VCustomElement\n    //   is not properly initialized, and therefore is should be ignored.\n    // * when slotted custom element is not used by the element where it is\n    //   slotted into it, as  a result, the custom element was never\n    //   initialized.\n\n    if (!isUndefined$1(elm)) {\n      const childVM = getAssociatedVMIfPresent(elm); // The VM associated with the element might be associated undefined\n      // in the case where the VM failed in the middle of its creation,\n      // eg: constructor throwing before invoking super().\n\n      if (!isUndefined$1(childVM)) {\n        resetComponentStateWhenRemoved(childVM);\n      }\n    }\n  }\n}\n\nfunction runLightChildNodesDisconnectedCallback(vm) {\n  const {\n    aChildren: adoptedChildren\n  } = vm;\n  recursivelyDisconnectChildren(adoptedChildren);\n}\n/**\n * The recursion doesn't need to be a complete traversal of the vnode graph,\n * instead it can be partial, when a custom element vnode is found, we don't\n * need to continue into its children because by attempting to disconnect the\n * custom element itself will trigger the removal of anything slotted or anything\n * defined on its shadow.\n */\n\n\nfunction recursivelyDisconnectChildren(vnodes) {\n  for (let i = 0, len = vnodes.length; i < len; i += 1) {\n    const vnode = vnodes[i];\n\n    if (!isNull(vnode) && !isUndefined$1(vnode.elm)) {\n      switch (vnode.type) {\n        case 2\n        /* Element */\n        :\n          recursivelyDisconnectChildren(vnode.children);\n          break;\n\n        case 3\n        /* CustomElement */\n        :\n          {\n            const vm = getAssociatedVM(vnode.elm);\n            resetComponentStateWhenRemoved(vm);\n            break;\n          }\n      }\n    }\n  }\n} // This is a super optimized mechanism to remove the content of the root node (shadow root\n// for shadow DOM components and the root element itself for light DOM) without having to go\n// into snabbdom. Especially useful when the reset is a consequence of an error, in which case the\n// children VNodes might not be representing the current state of the DOM.\n\n\nfunction resetComponentRoot(vm) {\n  const {\n    children,\n    renderRoot\n  } = vm;\n\n  for (let i = 0, len = children.length; i < len; i++) {\n    const child = children[i];\n\n    if (!isNull(child) && !isUndefined$1(child.elm)) {\n      remove$1(child.elm, renderRoot);\n    }\n  }\n\n  vm.children = EmptyArray;\n  runChildNodesDisconnectedCallback(vm);\n  vm.velements = EmptyArray;\n}\nfunction scheduleRehydration(vm) {\n  if (isTrue(ssr$1) || isTrue(vm.isScheduled)) {\n    return;\n  }\n\n  vm.isScheduled = true;\n\n  if (rehydrateQueue.length === 0) {\n    addCallbackToNextTick(flushRehydrationQueue);\n  }\n\n  ArrayPush$1.call(rehydrateQueue, vm);\n}\n\nfunction getErrorBoundaryVM(vm) {\n  let currentVm = vm;\n\n  while (!isNull(currentVm)) {\n    if (!isUndefined$1(currentVm.def.errorCallback)) {\n      return currentVm;\n    }\n\n    currentVm = currentVm.owner;\n  }\n}\n\nfunction runWithBoundaryProtection(vm, owner, pre, job, post) {\n  let error;\n  pre();\n\n  try {\n    job();\n  } catch (e) {\n    error = Object(e);\n  } finally {\n    post();\n\n    if (!isUndefined$1(error)) {\n      addErrorComponentStack(vm, error);\n      const errorBoundaryVm = isNull(owner) ? undefined : getErrorBoundaryVM(owner);\n\n      if (isUndefined$1(errorBoundaryVm)) {\n        throw error; // eslint-disable-line no-unsafe-finally\n      }\n\n      resetComponentRoot(vm); // remove offenders\n\n      logOperationStart(6\n      /* ErrorCallback */\n      , vm); // error boundaries must have an ErrorCallback\n\n      const errorCallback = errorBoundaryVm.def.errorCallback;\n      invokeComponentCallback(errorBoundaryVm, errorCallback, [error, error.wcStack]);\n      logOperationEnd(6\n      /* ErrorCallback */\n      , vm);\n    }\n  }\n}\nfunction forceRehydration(vm) {\n  // if we must reset the shadowRoot content and render the template\n  // from scratch on an active instance, the way to force the reset\n  // is by replacing the value of old template, which is used during\n  // to determine if the template has changed or not during the rendering\n  // process. If the template returned by render() is different from the\n  // previous stored template, the styles will be reset, along with the\n  // content of the shadowRoot, this way we can guarantee that all children\n  // elements will be throw away, and new instances will be created.\n  vm.cmpTemplate = () => [];\n\n  if (isFalse(vm.isDirty)) {\n    // forcing the vm to rehydrate in the next tick\n    markComponentAsDirty(vm);\n    scheduleRehydration(vm);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst DeprecatedWiredElementHost = '$$DeprecatedWiredElementHostKey$$';\nconst DeprecatedWiredParamsMeta = '$$DeprecatedWiredParamsMetaKey$$';\nconst WireMetaMap = new Map();\nclass WireContextRegistrationEvent extends CustomEvent {\n  constructor(adapterToken, {\n    setNewContext,\n    setDisconnectedCallback\n  }) {\n    super(adapterToken, {\n      bubbles: true,\n      composed: true\n    });\n    defineProperties(this, {\n      setNewContext: {\n        value: setNewContext\n      },\n      setDisconnectedCallback: {\n        value: setDisconnectedCallback\n      }\n    });\n  }\n\n}\n\nfunction createFieldDataCallback(vm, name) {\n  const {\n    cmpFields\n  } = vm;\n  return value => {\n    if (value !== vm.cmpFields[name]) {\n      // storing the value in the underlying storage\n      cmpFields[name] = value;\n      componentValueMutated(vm, name);\n    }\n  };\n}\n\nfunction createMethodDataCallback(vm, method) {\n  return value => {\n    // dispatching new value into the wired method\n    runWithBoundaryProtection(vm, vm.owner, noop, () => {\n      // job\n      method.call(vm.component, value);\n    }, noop);\n  };\n}\n\nfunction createConfigWatcher(component, configCallback, callbackWhenConfigIsReady) {\n  let hasPendingConfig = false; // creating the reactive observer for reactive params when needed\n\n  const ro = new ReactiveObserver(() => {\n    if (hasPendingConfig === false) {\n      hasPendingConfig = true; // collect new config in the micro-task\n\n      Promise.resolve().then(() => {\n        hasPendingConfig = false; // resetting current reactive params\n\n        ro.reset(); // dispatching a new config due to a change in the configuration\n\n        computeConfigAndUpdate();\n      });\n    }\n  });\n\n  const computeConfigAndUpdate = () => {\n    let config;\n    ro.observe(() => config = configCallback(component)); // eslint-disable-next-line lwc-internal/no-invalid-todo\n    // TODO: dev-mode validation of config based on the adapter.configSchema\n    // @ts-ignore it is assigned in the observe() callback\n\n    callbackWhenConfigIsReady(config);\n  };\n\n  return {\n    computeConfigAndUpdate,\n    ro\n  };\n}\n\nfunction createContextWatcher(vm, wireDef, callbackWhenContextIsReady) {\n  const {\n    adapter\n  } = wireDef;\n  const adapterContextToken = getAdapterToken(adapter);\n\n  if (isUndefined$1(adapterContextToken)) {\n    return; // no provider found, nothing to be done\n  }\n\n  const {\n    elm,\n    context: {\n      wiredConnecting,\n      wiredDisconnecting\n    }\n  } = vm; // waiting for the component to be connected to formally request the context via the token\n\n  ArrayPush$1.call(wiredConnecting, () => {\n    // This event is responsible for connecting the host element with another\n    // element in the composed path that is providing contextual data. The provider\n    // must be listening for a special dom event with the name corresponding to the value of\n    // `adapterContextToken`, which will remain secret and internal to this file only to\n    // guarantee that the linkage can be forged.\n    const contextRegistrationEvent = new WireContextRegistrationEvent(adapterContextToken, {\n      setNewContext(newContext) {\n        // eslint-disable-next-line lwc-internal/no-invalid-todo\n        // TODO: dev-mode validation of config based on the adapter.contextSchema\n        callbackWhenContextIsReady(newContext);\n      },\n\n      setDisconnectedCallback(disconnectCallback) {\n        // adds this callback into the disconnect bucket so it gets disconnected from parent\n        // the the element hosting the wire is disconnected\n        ArrayPush$1.call(wiredDisconnecting, disconnectCallback);\n      }\n\n    });\n    dispatchEvent$1(elm, contextRegistrationEvent);\n  });\n}\n\nfunction createConnector(vm, name, wireDef) {\n  const {\n    method,\n    adapter,\n    configCallback,\n    dynamic\n  } = wireDef;\n  const dataCallback = isUndefined$1(method) ? createFieldDataCallback(vm, name) : createMethodDataCallback(vm, method);\n  let context;\n  let connector; // Workaround to pass the component element associated to this wire adapter instance.\n\n  defineProperty(dataCallback, DeprecatedWiredElementHost, {\n    value: vm.elm\n  });\n  defineProperty(dataCallback, DeprecatedWiredParamsMeta, {\n    value: dynamic\n  });\n  runWithBoundaryProtection(vm, vm, noop, () => {\n    // job\n    connector = new adapter(dataCallback);\n  }, noop);\n\n  const updateConnectorConfig = config => {\n    // every time the config is recomputed due to tracking,\n    // this callback will be invoked with the new computed config\n    runWithBoundaryProtection(vm, vm, noop, () => {\n      // job\n      connector.update(config, context);\n    }, noop);\n  }; // Computes the current wire config and calls the update method on the wire adapter.\n  // If it has params, we will need to observe changes in the next tick.\n\n\n  const {\n    computeConfigAndUpdate,\n    ro\n  } = createConfigWatcher(vm.component, configCallback, updateConnectorConfig); // if the adapter needs contextualization, we need to watch for new context and push it alongside the config\n\n  if (!isUndefined$1(adapter.contextSchema)) {\n    createContextWatcher(vm, wireDef, newContext => {\n      // every time the context is pushed into this component,\n      // this callback will be invoked with the new computed context\n      if (context !== newContext) {\n        context = newContext; // Note: when new context arrives, the config will be recomputed and pushed along side the new\n        // context, this is to preserve the identity characteristics, config should not have identity\n        // (ever), while context can have identity\n\n        if (vm.state === 1\n        /* connected */\n        ) {\n          computeConfigAndUpdate();\n        }\n      }\n    });\n  }\n\n  return {\n    // @ts-ignore the boundary protection executes sync, connector is always defined\n    connector,\n    computeConfigAndUpdate,\n    resetConfigWatcher: () => ro.reset()\n  };\n}\n\nconst AdapterToTokenMap = new Map();\nfunction getAdapterToken(adapter) {\n  return AdapterToTokenMap.get(adapter);\n}\nfunction setAdapterToken(adapter, token) {\n  AdapterToTokenMap.set(adapter, token);\n}\nfunction storeWiredMethodMeta(descriptor, adapter, configCallback, dynamic) {\n  // support for callable adapters\n  if (adapter.adapter) {\n    adapter = adapter.adapter;\n  }\n\n  const method = descriptor.value;\n  const def = {\n    adapter,\n    method,\n    configCallback,\n    dynamic\n  };\n  WireMetaMap.set(descriptor, def);\n}\nfunction storeWiredFieldMeta(descriptor, adapter, configCallback, dynamic) {\n  // support for callable adapters\n  if (adapter.adapter) {\n    adapter = adapter.adapter;\n  }\n\n  const def = {\n    adapter,\n    configCallback,\n    dynamic\n  };\n  WireMetaMap.set(descriptor, def);\n}\nfunction installWireAdapters(vm) {\n  const {\n    context,\n    def: {\n      wire\n    }\n  } = vm;\n  const wiredConnecting = context.wiredConnecting = [];\n  const wiredDisconnecting = context.wiredDisconnecting = [];\n\n  for (const fieldNameOrMethod in wire) {\n    const descriptor = wire[fieldNameOrMethod];\n    const wireDef = WireMetaMap.get(descriptor);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.invariant(wireDef, `Internal Error: invalid wire definition found.`);\n    }\n\n    if (!isUndefined$1(wireDef)) {\n      const {\n        connector,\n        computeConfigAndUpdate,\n        resetConfigWatcher\n      } = createConnector(vm, fieldNameOrMethod, wireDef);\n      const hasDynamicParams = wireDef.dynamic.length > 0;\n      ArrayPush$1.call(wiredConnecting, () => {\n        connector.connect();\n\n        if (!runtimeFlags.ENABLE_WIRE_SYNC_EMIT) {\n          if (hasDynamicParams) {\n            Promise.resolve().then(computeConfigAndUpdate);\n            return;\n          }\n        }\n\n        computeConfigAndUpdate();\n      });\n      ArrayPush$1.call(wiredDisconnecting, () => {\n        connector.disconnect();\n        resetConfigWatcher();\n      });\n    }\n  }\n}\nfunction connectWireAdapters(vm) {\n  const {\n    wiredConnecting\n  } = vm.context;\n\n  for (let i = 0, len = wiredConnecting.length; i < len; i += 1) {\n    wiredConnecting[i]();\n  }\n}\nfunction disconnectWireAdapters(vm) {\n  const {\n    wiredDisconnecting\n  } = vm.context;\n  runWithBoundaryProtection(vm, vm, noop, () => {\n    // job\n    for (let i = 0, len = wiredDisconnecting.length; i < len; i += 1) {\n      wiredDisconnecting[i]();\n    }\n  }, noop);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// this is lwc internal implementation\nfunction createContextProvider(adapter) {\n    let adapterContextToken = getAdapterToken(adapter);\n    if (!isUndefined$1(adapterContextToken)) {\n        throw new Error(`Adapter already has a context provider.`);\n    }\n    adapterContextToken = guid();\n    setAdapterToken(adapter, adapterContextToken);\n    const providers = new WeakSet();\n    return (elm, options) => {\n        if (providers.has(elm)) {\n            throw new Error(`Adapter was already installed on ${elm}.`);\n        }\n        providers.add(elm);\n        const { consumerConnectedCallback, consumerDisconnectedCallback } = options;\n        elm.addEventListener(adapterContextToken, ((evt) => {\n            const { setNewContext, setDisconnectedCallback } = evt;\n            const consumer = {\n                provide(newContext) {\n                    setNewContext(newContext);\n                },\n            };\n            const disconnectCallback = () => {\n                if (!isUndefined$1(consumerDisconnectedCallback)) {\n                    consumerDisconnectedCallback(consumer);\n                }\n            };\n            setDisconnectedCallback(disconnectCallback);\n            consumerConnectedCallback(consumer);\n            evt.stopImmediatePropagation();\n        }));\n    };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * EXPERIMENTAL: This function allows you to create a reactive readonly\n * membrane around any object value. This API is subject to change or\n * being removed.\n */\nfunction readonly(obj) {\n    if (process.env.NODE_ENV !== 'production') {\n        // TODO [#1292]: Remove the readonly decorator\n        if (arguments.length !== 1) {\n            assert.fail('@readonly cannot be used as a decorator just yet, use it as a function with one argument to produce a readonly version of the provided value.');\n        }\n    }\n    return reactiveMembrane.getReadOnlyProxy(obj);\n}\n\n/*\n * Copyright (c) 2022, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// flag indicating if the hydration recovered from the DOM mismatch\nlet hasMismatch = false;\nfunction hydrateRoot(vm) {\n    hasMismatch = false;\n    runConnectedCallback(vm);\n    hydrateVM(vm);\n    if (hasMismatch) {\n        logError('Hydration completed with errors.', vm);\n    }\n}\nfunction hydrateVM(vm) {\n    const children = renderComponent(vm);\n    vm.children = children;\n    const parentNode = vm.renderRoot;\n    hydrateChildren(getFirstChild$1(parentNode), children, parentNode, vm);\n    runRenderedCallback(vm);\n}\nfunction hydrateNode(node, vnode) {\n    let hydratedNode;\n    switch (vnode.type) {\n        case 0 /* Text */:\n            hydratedNode = hydrateText(node, vnode);\n            break;\n        case 1 /* Comment */:\n            hydratedNode = hydrateComment(node, vnode);\n            break;\n        case 2 /* Element */:\n            hydratedNode = hydrateElement(node, vnode);\n            break;\n        case 3 /* CustomElement */:\n            hydratedNode = hydrateCustomElement(node, vnode);\n            break;\n    }\n    return nextSibling$1(hydratedNode);\n}\nfunction hydrateText(node, vnode) {\n    var _a;\n    if (!hasCorrectNodeType(vnode, node, 3 /* TEXT */)) {\n        return handleMismatch(node, vnode);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        const nodeValue = getProperty$1(node, 'nodeValue');\n        if (nodeValue !== vnode.text && !(nodeValue === '\\u200D' && vnode.text === '')) {\n            logWarn('Hydration mismatch: text values do not match, will recover from the difference', vnode.owner);\n        }\n    }\n    setText$1(node, (_a = vnode.text) !== null && _a !== void 0 ? _a : null);\n    vnode.elm = node;\n    return node;\n}\nfunction hydrateComment(node, vnode) {\n    var _a;\n    if (!hasCorrectNodeType(vnode, node, 8 /* COMMENT */)) {\n        return handleMismatch(node, vnode);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        const nodeValue = getProperty$1(node, 'nodeValue');\n        if (nodeValue !== vnode.text) {\n            logWarn('Hydration mismatch: comment values do not match, will recover from the difference', vnode.owner);\n        }\n    }\n    setProperty$1(node, 'nodeValue', (_a = vnode.text) !== null && _a !== void 0 ? _a : null);\n    vnode.elm = node;\n    return node;\n}\nfunction hydrateElement(elm, vnode) {\n    if (!hasCorrectNodeType(vnode, elm, 1 /* ELEMENT */) ||\n        !isMatchingElement(vnode, elm)) {\n        return handleMismatch(elm, vnode);\n    }\n    vnode.elm = elm;\n    const { context } = vnode.data;\n    const isDomManual = Boolean(!isUndefined$1(context) && !isUndefined$1(context.lwc) && context.lwc.dom === \"manual\" /* Manual */);\n    if (isDomManual) {\n        // it may be that this element has lwc:inner-html, we need to diff and in case are the same,\n        // remove the innerHTML from props so it reuses the existing dom elements.\n        const { props } = vnode.data;\n        if (!isUndefined$1(props) && !isUndefined$1(props.innerHTML)) {\n            if (getProperty$1(elm, 'innerHTML') === props.innerHTML) {\n                // Do a shallow clone since VNodeData may be shared across VNodes due to hoist optimization\n                vnode.data = Object.assign(Object.assign({}, vnode.data), { props: cloneAndOmitKey(props, 'innerHTML') });\n            }\n            else {\n                if (process.env.NODE_ENV !== 'production') {\n                    logWarn(`Mismatch hydrating element <${getProperty$1(elm, 'tagName').toLowerCase()}>: innerHTML values do not match for element, will recover from the difference`, vnode.owner);\n                }\n            }\n        }\n    }\n    patchElementPropsAndAttrs(vnode);\n    if (!isDomManual) {\n        hydrateChildren(getFirstChild$1(elm), vnode.children, elm, vnode.owner);\n    }\n    return elm;\n}\nfunction hydrateCustomElement(elm, vnode) {\n    if (!hasCorrectNodeType(vnode, elm, 1 /* ELEMENT */) ||\n        !isMatchingElement(vnode, elm)) {\n        return handleMismatch(elm, vnode);\n    }\n    const { sel, mode, ctor, owner } = vnode;\n    const vm = createVM(elm, ctor, {\n        mode,\n        owner,\n        tagName: sel,\n    });\n    vnode.elm = elm;\n    vnode.vm = vm;\n    allocateChildren(vnode, vm);\n    patchElementPropsAndAttrs(vnode);\n    // Insert hook section:\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(vm.state === 0 /* created */, `${vm} cannot be recycled.`);\n    }\n    runConnectedCallback(vm);\n    if (vm.renderMode !== 0 /* Light */) {\n        // VM is not rendering in Light DOM, we can proceed and hydrate the slotted content.\n        // Note: for Light DOM, this is handled while hydrating the VM\n        hydrateChildren(getFirstChild$1(elm), vnode.children, elm, vm);\n    }\n    hydrateVM(vm);\n    return elm;\n}\nfunction hydrateChildren(node, children, parentNode, owner) {\n    let hasWarned = false;\n    let nextNode = node;\n    let anchor = null;\n    for (let i = 0; i < children.length; i++) {\n        const childVnode = children[i];\n        if (!isNull(childVnode)) {\n            if (nextNode) {\n                nextNode = hydrateNode(nextNode, childVnode);\n                anchor = childVnode.elm;\n            }\n            else {\n                hasMismatch = true;\n                if (process.env.NODE_ENV !== 'production') {\n                    if (!hasWarned) {\n                        hasWarned = true;\n                        logError(`Hydration mismatch: incorrect number of rendered nodes. Client produced more nodes than the server.`, owner);\n                    }\n                }\n                mount(childVnode, parentNode, anchor);\n                anchor = childVnode.elm;\n            }\n        }\n    }\n    if (nextNode) {\n        hasMismatch = true;\n        if (process.env.NODE_ENV !== 'production') {\n            if (!hasWarned) {\n                logError(`Hydration mismatch: incorrect number of rendered nodes. Server rendered more nodes than the client.`, owner);\n            }\n        }\n        do {\n            const current = nextNode;\n            nextNode = nextSibling$1(nextNode);\n            removeNode(current, parentNode);\n        } while (nextNode);\n    }\n}\nfunction handleMismatch(node, vnode, msg) {\n    hasMismatch = true;\n    if (!isUndefined$1(msg)) {\n        if (process.env.NODE_ENV !== 'production') {\n            logError(msg, vnode.owner);\n        }\n    }\n    const parentNode = getProperty$1(node, 'parentNode');\n    mount(vnode, parentNode, node);\n    removeNode(node, parentNode);\n    return vnode.elm;\n}\nfunction patchElementPropsAndAttrs(vnode) {\n    applyEventListeners(vnode);\n    patchProps(null, vnode);\n}\nfunction hasCorrectNodeType(vnode, node, nodeType) {\n    if (getProperty$1(node, 'nodeType') !== nodeType) {\n        if (process.env.NODE_ENV !== 'production') {\n            logError('Hydration mismatch: incorrect node type received', vnode.owner);\n        }\n        return false;\n    }\n    return true;\n}\nfunction isMatchingElement(vnode, elm) {\n    if (vnode.sel.toLowerCase() !== getProperty$1(elm, 'tagName').toLowerCase()) {\n        if (process.env.NODE_ENV !== 'production') {\n            logError(`Hydration mismatch: expecting element with tag \"${vnode.sel.toLowerCase()}\" but found \"${getProperty$1(elm, 'tagName').toLowerCase()}\".`, vnode.owner);\n        }\n        return false;\n    }\n    const hasIncompatibleAttrs = validateAttrs(vnode, elm);\n    const hasIncompatibleClass = validateClassAttr(vnode, elm);\n    const hasIncompatibleStyle = validateStyleAttr(vnode, elm);\n    return hasIncompatibleAttrs && hasIncompatibleClass && hasIncompatibleStyle;\n}\nfunction validateAttrs(vnode, elm) {\n    const { data: { attrs = {} }, } = vnode;\n    let nodesAreCompatible = true;\n    // Validate attributes, though we could always recovery from those by running the update mods.\n    // Note: intentionally ONLY matching vnodes.attrs to elm.attrs, in case SSR is adding extra attributes.\n    for (const [attrName, attrValue] of Object.entries(attrs)) {\n        const elmAttrValue = getAttribute$1(elm, attrName);\n        if (String(attrValue) !== elmAttrValue) {\n            if (process.env.NODE_ENV !== 'production') {\n                logError(`Mismatch hydrating element <${getProperty$1(elm, 'tagName').toLowerCase()}>: attribute \"${attrName}\" has different values, expected \"${attrValue}\" but found \"${elmAttrValue}\"`, vnode.owner);\n            }\n            nodesAreCompatible = false;\n        }\n    }\n    return nodesAreCompatible;\n}\nfunction validateClassAttr(vnode, elm) {\n    const { data: { className, classMap }, } = vnode;\n    let nodesAreCompatible = true;\n    let vnodeClassName;\n    if (!isUndefined$1(className) && String(className) !== getProperty$1(elm, 'className')) {\n        // className is used when class is bound to an expr.\n        nodesAreCompatible = false;\n        vnodeClassName = className;\n    }\n    else if (!isUndefined$1(classMap)) {\n        // classMap is used when class is set to static value.\n        const classList = getClassList$1(elm);\n        let computedClassName = '';\n        // all classes from the vnode should be in the element.classList\n        for (const name in classMap) {\n            computedClassName += ' ' + name;\n            if (!classList.contains(name)) {\n                nodesAreCompatible = false;\n            }\n        }\n        vnodeClassName = computedClassName.trim();\n        if (classList.length > keys(classMap).length) {\n            nodesAreCompatible = false;\n        }\n    }\n    if (!nodesAreCompatible) {\n        if (process.env.NODE_ENV !== 'production') {\n            logError(`Mismatch hydrating element <${getProperty$1(elm, 'tagName').toLowerCase()}>: attribute \"class\" has different values, expected \"${vnodeClassName}\" but found \"${getProperty$1(elm, 'className')}\"`, vnode.owner);\n        }\n    }\n    return nodesAreCompatible;\n}\nfunction validateStyleAttr(vnode, elm) {\n    const { data: { style, styleDecls }, } = vnode;\n    const elmStyle = getAttribute$1(elm, 'style') || '';\n    let vnodeStyle;\n    let nodesAreCompatible = true;\n    if (!isUndefined$1(style) && style !== elmStyle) {\n        nodesAreCompatible = false;\n        vnodeStyle = style;\n    }\n    else if (!isUndefined$1(styleDecls)) {\n        const parsedVnodeStyle = parseStyleText(elmStyle);\n        const expectedStyle = [];\n        // styleMap is used when style is set to static value.\n        for (let i = 0, n = styleDecls.length; i < n; i++) {\n            const [prop, value, important] = styleDecls[i];\n            expectedStyle.push(`${prop}: ${value + (important ? ' important!' : '')}`);\n            const parsedPropValue = parsedVnodeStyle[prop];\n            if (isUndefined$1(parsedPropValue)) {\n                nodesAreCompatible = false;\n            }\n            else if (!parsedPropValue.startsWith(value)) {\n                nodesAreCompatible = false;\n            }\n            else if (important && !parsedPropValue.endsWith('!important')) {\n                nodesAreCompatible = false;\n            }\n        }\n        if (keys(parsedVnodeStyle).length > styleDecls.length) {\n            nodesAreCompatible = false;\n        }\n        vnodeStyle = ArrayJoin.call(expectedStyle, ';');\n    }\n    if (!nodesAreCompatible) {\n        if (process.env.NODE_ENV !== 'production') {\n            logError(`Mismatch hydrating element <${getProperty$1(elm, 'tagName').toLowerCase()}>: attribute \"style\" has different values, expected \"${vnodeStyle}\" but found \"${elmStyle}\".`, vnode.owner);\n        }\n    }\n    return nodesAreCompatible;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet hooksAreSet = false;\nfunction setHooks(hooks) {\n    assert.isFalse(hooksAreSet, 'Hooks are already overridden, only one definition is allowed.');\n    hooksAreSet = true;\n    setSanitizeHtmlContentHook(hooks.sanitizeHtmlContent);\n}\n/* version: 2.13.0 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst globalStylesheets = create(null);\nif (process.env.NODE_ENV === 'development') {\n    // @ts-ignore\n    window.__lwcResetGlobalStylesheets = () => {\n        for (const key of Object.keys(globalStylesheets)) {\n            delete globalStylesheets[key];\n        }\n    };\n}\nconst globalStylesheetsParentElement = document.head || document.body || document;\n// This check for constructable stylesheets is similar to Fast's:\n// https://github.com/microsoft/fast/blob/d49d1ec/packages/web-components/fast-element/src/dom.ts#L51-L53\n// See also: https://github.com/whatwg/webidl/issues/1027#issuecomment-934510070\nconst supportsConstructableStyleSheets = isFunction$1(CSSStyleSheet.prototype.replaceSync) && isArray$1(document.adoptedStyleSheets);\nconst supportsMutableAdoptedStyleSheets = supportsConstructableStyleSheets &&\n    getOwnPropertyDescriptor$1(document.adoptedStyleSheets, 'length').writable;\nconst styleElements = create(null);\nconst styleSheets = create(null);\nconst shadowRootsToStyleSheets = new WeakMap();\nlet getCustomElement;\nlet defineCustomElement;\nlet HTMLElementConstructor;\nfunction isCustomElementRegistryAvailable() {\n    if (typeof customElements === 'undefined') {\n        return false;\n    }\n    try {\n        // dereference HTMLElement global because babel wraps globals in compat mode with a\n        // _wrapNativeSuper()\n        // This is a problem because LWCUpgradableElement extends renderer.HTMLElement which does not\n        // get wrapped by babel.\n        const HTMLElementAlias = HTMLElement;\n        // In case we use compat mode with a modern browser, the compat mode transformation\n        // invokes the DOM api with an .apply() or .call() to initialize any DOM api sub-classing,\n        // which are not equipped to be initialized that way.\n        class clazz extends HTMLElementAlias {\n        }\n        customElements.define('lwc-test-' + Math.floor(Math.random() * 1000000), clazz);\n        new clazz();\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction insertConstructableStyleSheet(content, target) {\n    // It's important for CSSStyleSheets to be unique based on their content, so that\n    // `shadowRoot.adoptedStyleSheets.includes(sheet)` works.\n    let styleSheet = styleSheets[content];\n    if (isUndefined$1(styleSheet)) {\n        styleSheet = new CSSStyleSheet();\n        styleSheet.replaceSync(content);\n        styleSheets[content] = styleSheet;\n    }\n    const { adoptedStyleSheets } = target;\n    if (!adoptedStyleSheets.includes(styleSheet)) {\n        if (supportsMutableAdoptedStyleSheets) {\n            // This is only supported in later versions of Chromium:\n            // https://chromestatus.com/feature/5638996492288000\n            adoptedStyleSheets.push(styleSheet);\n        }\n        else {\n            target.adoptedStyleSheets = [...adoptedStyleSheets, styleSheet];\n        }\n    }\n}\nfunction insertStyleElement(content, target) {\n    // Avoid inserting duplicate `<style>`s\n    let sheets = shadowRootsToStyleSheets.get(target);\n    if (isUndefined$1(sheets)) {\n        sheets = create(null);\n        shadowRootsToStyleSheets.set(target, sheets);\n    }\n    if (sheets[content]) {\n        return;\n    }\n    sheets[content] = true;\n    // This `<style>` may be repeated multiple times in the DOM, so cache it. It's a bit\n    // faster to call `cloneNode()` on an existing node than to recreate it every time.\n    let elm = styleElements[content];\n    if (isUndefined$1(elm)) {\n        elm = document.createElement('style');\n        elm.type = 'text/css';\n        elm.textContent = content;\n        styleElements[content] = elm;\n    }\n    else {\n        elm = elm.cloneNode(true);\n    }\n    target.appendChild(elm);\n}\nif (isCustomElementRegistryAvailable()) {\n    getCustomElement = customElements.get.bind(customElements);\n    defineCustomElement = customElements.define.bind(customElements);\n    HTMLElementConstructor = HTMLElement;\n}\nelse {\n    const registry = create(null);\n    const reverseRegistry = new WeakMap();\n    defineCustomElement = function define(name, ctor) {\n        if (name !== StringToLowerCase.call(name) || registry[name]) {\n            throw new TypeError(`Invalid Registration`);\n        }\n        registry[name] = ctor;\n        reverseRegistry.set(ctor, name);\n    };\n    getCustomElement = function get(name) {\n        return registry[name];\n    };\n    HTMLElementConstructor = function HTMLElement() {\n        if (!(this instanceof HTMLElement)) {\n            throw new TypeError(`Invalid Invocation`);\n        }\n        const { constructor } = this;\n        const name = reverseRegistry.get(constructor);\n        if (!name) {\n            throw new TypeError(`Invalid Construction`);\n        }\n        const elm = document.createElement(name);\n        setPrototypeOf(elm, constructor.prototype);\n        return elm;\n    };\n    HTMLElementConstructor.prototype = HTMLElement.prototype;\n}\nlet hydrating = false;\nfunction setIsHydrating(value) {\n    hydrating = value;\n}\nconst ssr = false;\nfunction isHydrating() {\n    return hydrating;\n}\nconst isNativeShadowDefined = _globalThis[KEY__IS_NATIVE_SHADOW_ROOT_DEFINED];\nconst isSyntheticShadowDefined = hasOwnProperty$1.call(Element.prototype, KEY__SHADOW_TOKEN);\nfunction createElement$1(tagName, namespace) {\n    return isUndefined$1(namespace)\n        ? document.createElement(tagName)\n        : document.createElementNS(namespace, tagName);\n}\nfunction createText(content) {\n    return document.createTextNode(content);\n}\nfunction createComment(content) {\n    return document.createComment(content);\n}\nfunction insert(node, parent, anchor) {\n    parent.insertBefore(node, anchor);\n}\nfunction remove(node, parent) {\n    parent.removeChild(node);\n}\nfunction nextSibling(node) {\n    return node.nextSibling;\n}\nfunction attachShadow(element, options) {\n    if (hydrating) {\n        return element.shadowRoot;\n    }\n    return element.attachShadow(options);\n}\nfunction setText(node, content) {\n    node.nodeValue = content;\n}\nfunction getProperty(node, key) {\n    return node[key];\n}\nfunction setProperty(node, key, value) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (node instanceof Element && !(key in node)) {\n            // TODO [#1297]: Move this validation to the compiler\n            assert.fail(`Unknown public property \"${key}\" of element <${node.tagName}>. This is likely a typo on the corresponding attribute \"${htmlPropertyToAttribute(key)}\".`);\n        }\n    }\n    node[key] = value;\n}\nfunction getAttribute(element, name, namespace) {\n    return isUndefined$1(namespace)\n        ? element.getAttribute(name)\n        : element.getAttributeNS(namespace, name);\n}\nfunction setAttribute(element, name, value, namespace) {\n    return isUndefined$1(namespace)\n        ? element.setAttribute(name, value)\n        : element.setAttributeNS(namespace, name, value);\n}\nfunction removeAttribute(element, name, namespace) {\n    if (isUndefined$1(namespace)) {\n        element.removeAttribute(name);\n    }\n    else {\n        element.removeAttributeNS(namespace, name);\n    }\n}\nfunction addEventListener(target, type, callback, options) {\n    target.addEventListener(type, callback, options);\n}\nfunction removeEventListener(target, type, callback, options) {\n    target.removeEventListener(type, callback, options);\n}\nfunction dispatchEvent(target, event) {\n    return target.dispatchEvent(event);\n}\nfunction getClassList(element) {\n    return element.classList;\n}\nfunction setCSSStyleProperty(element, name, value, important) {\n    // TODO [#0]: How to avoid this type casting? Shall we use a different type interface to\n    // represent elements in the engine?\n    element.style.setProperty(name, value, important ? 'important' : '');\n}\nfunction getBoundingClientRect(element) {\n    return element.getBoundingClientRect();\n}\nfunction querySelector(element, selectors) {\n    return element.querySelector(selectors);\n}\nfunction querySelectorAll(element, selectors) {\n    return element.querySelectorAll(selectors);\n}\nfunction getElementsByTagName(element, tagNameOrWildCard) {\n    return element.getElementsByTagName(tagNameOrWildCard);\n}\nfunction getElementsByClassName(element, names) {\n    return element.getElementsByClassName(names);\n}\nfunction getChildren(element) {\n    return element.children;\n}\nfunction getChildNodes(element) {\n    return element.childNodes;\n}\nfunction getFirstChild(element) {\n    return element.firstChild;\n}\nfunction getFirstElementChild(element) {\n    return element.firstElementChild;\n}\nfunction getLastChild(element) {\n    return element.lastChild;\n}\nfunction getLastElementChild(element) {\n    return element.lastElementChild;\n}\nfunction isConnected(node) {\n    return node.isConnected;\n}\nfunction insertGlobalStylesheet(content) {\n    if (!isUndefined$1(globalStylesheets[content])) {\n        return;\n    }\n    globalStylesheets[content] = true;\n    const elm = document.createElement('style');\n    elm.type = 'text/css';\n    elm.textContent = content;\n    globalStylesheetsParentElement.appendChild(elm);\n}\nfunction insertStylesheet(content, target) {\n    if (supportsConstructableStyleSheets) {\n        insertConstructableStyleSheet(content, target);\n    }\n    else {\n        // Fall back to <style> element\n        insertStyleElement(content, target);\n    }\n}\nfunction assertInstanceOfHTMLElement(elm, msg) {\n    assert.invariant(elm instanceof HTMLElement, msg);\n}\nconst HTMLElementExported = HTMLElementConstructor;\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nsetAssertInstanceOfHTMLElement(assertInstanceOfHTMLElement);\nsetAttachShadow(attachShadow);\nsetCreateComment(createComment);\nsetCreateElement(createElement$1);\nsetCreateText(createText);\nsetDefineCustomElement(defineCustomElement);\nsetDispatchEvent(dispatchEvent);\nsetGetAttribute(getAttribute);\nsetGetBoundingClientRect(getBoundingClientRect);\nsetGetChildNodes(getChildNodes);\nsetGetChildren(getChildren);\nsetGetClassList(getClassList);\nsetGetCustomElement(getCustomElement);\nsetGetElementsByClassName(getElementsByClassName);\nsetGetElementsByTagName(getElementsByTagName);\nsetGetFirstChild(getFirstChild);\nsetGetFirstElementChild(getFirstElementChild);\nsetGetLastChild(getLastChild);\nsetGetLastElementChild(getLastElementChild);\nsetGetProperty(getProperty);\nsetHTMLElement(HTMLElementExported);\nsetInsert(insert);\nsetInsertGlobalStylesheet(insertGlobalStylesheet);\nsetInsertStylesheet(insertStylesheet);\nsetIsConnected(isConnected);\nsetIsHydrating$1(isHydrating);\nsetIsNativeShadowDefined(isNativeShadowDefined);\nsetIsSyntheticShadowDefined(isSyntheticShadowDefined);\nsetNextSibling(nextSibling);\nsetQuerySelector(querySelector);\nsetQuerySelectorAll(querySelectorAll);\nsetRemove(remove);\nsetRemoveAttribute(removeAttribute);\nsetRemoveEventListener(removeEventListener);\nsetSetAttribute(setAttribute);\nsetSetCSSStyleProperty(setCSSStyleProperty);\nsetSetProperty(setProperty);\nsetSetText(setText);\nsetSsr(ssr);\nsetAddEventListener(addEventListener);\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction resetShadowRootAndLightDom(element, Ctor) {\n    if (element.shadowRoot) {\n        const shadowRoot = element.shadowRoot;\n        while (!isNull(shadowRoot.firstChild)) {\n            shadowRoot.removeChild(shadowRoot.firstChild);\n        }\n    }\n    if (Ctor.renderMode === 'light') {\n        while (!isNull(element.firstChild)) {\n            element.removeChild(element.firstChild);\n        }\n    }\n}\nfunction createVMWithProps(element, Ctor, props) {\n    const vm = createVM(element, Ctor, {\n        mode: 'open',\n        owner: null,\n        tagName: element.tagName.toLowerCase(),\n    });\n    for (const [key, value] of Object.entries(props)) {\n        element[key] = value;\n    }\n    return vm;\n}\nfunction hydrateComponent(element, Ctor, props = {}) {\n    if (!(element instanceof Element)) {\n        throw new TypeError(`\"hydrateComponent\" expects a valid DOM element as the first parameter but instead received ${element}.`);\n    }\n    if (!isFunction$1(Ctor)) {\n        throw new TypeError(`\"hydrateComponent\" expects a valid component constructor as the second parameter but instead received ${Ctor}.`);\n    }\n    if (!isObject(props) || isNull(props)) {\n        throw new TypeError(`\"hydrateComponent\" expects an object as the third parameter but instead received ${props}.`);\n    }\n    if (getAssociatedVMIfPresent(element)) {\n        /* eslint-disable-next-line no-console */\n        console.warn(`\"hydrateComponent\" expects an element that is not hydrated.`, element);\n        return;\n    }\n    try {\n        // Let the renderer know we are hydrating, so it does not replace the existing shadowRoot\n        // and uses the same algo to create the stylesheets as in SSR.\n        setIsHydrating(true);\n        const vm = createVMWithProps(element, Ctor, props);\n        hydrateRoot(vm);\n        // set it back since now we finished hydration.\n        setIsHydrating(false);\n    }\n    catch (e) {\n        // Fallback: In case there's an error while hydrating, let's log the error, and replace the element content\n        //           with the client generated DOM.\n        /* eslint-disable-next-line no-console */\n        console.error('Recovering from error while hydrating: ', e);\n        // We want to preserve the element, so we need to reset the shadowRoot and light dom.\n        resetShadowRootAndLightDom(element, Ctor);\n        // we need to recreate the vm with the hydration flag on, so it re-uses the existing shadowRoot.\n        createVMWithProps(element, Ctor, props);\n        setIsHydrating(false);\n        connectRootElement(element);\n    }\n    finally {\n        // in case there's an error during recovery\n        setIsHydrating(false);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This function builds a Web Component class from a LWC constructor so it can be\n * registered as a new element via customElements.define() at any given time.\n *\n * @deprecated since version 1.3.11\n *\n * @example\n * ```\n * import { buildCustomElementConstructor } from 'lwc';\n * import Foo from 'ns/foo';\n * const WC = buildCustomElementConstructor(Foo);\n * customElements.define('x-foo', WC);\n * const elm = document.createElement('x-foo');\n * ```\n */\nfunction deprecatedBuildCustomElementConstructor(Ctor) {\n    if (process.env.NODE_ENV !== 'production') {\n        /* eslint-disable-next-line no-console */\n        console.warn('Deprecated function called: \"buildCustomElementConstructor\" function is deprecated and it will be removed.' +\n            `Use \"${Ctor.name}.CustomElementConstructor\" static property of the component constructor to access the corresponding custom element constructor instead.`);\n    }\n    return Ctor.CustomElementConstructor;\n}\n// Note: WeakSet is not supported in IE11, and the polyfill is not performant enough.\n//       This WeakSet usage is valid because this functionality is not meant to run in IE11.\nconst hydratedCustomElements = new WeakSet();\nfunction buildCustomElementConstructor(Ctor) {\n    const HtmlPrototype = getComponentHtmlPrototype(Ctor);\n    return class extends HtmlPrototype {\n        constructor() {\n            super();\n            if (this.isConnected) {\n                // this if block is hit when there's already an un-upgraded element in the DOM with the same tag name.\n                hydrateComponent(this, Ctor, {});\n                hydratedCustomElements.add(this);\n            }\n            else {\n                createVM(this, Ctor, {\n                    mode: 'open',\n                    owner: null,\n                    tagName: this.tagName,\n                });\n            }\n        }\n        connectedCallback() {\n            if (hydratedCustomElements.has(this)) {\n                // This is an un-upgraded element that was hydrated in the constructor.\n                hydratedCustomElements.delete(this);\n            }\n            else {\n                connectRootElement(this);\n            }\n        }\n        disconnectedCallback() {\n            disconnectRootElement(this);\n        }\n    };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// TODO [#2472]: Remove this workaround when appropriate.\n// eslint-disable-next-line lwc-internal/no-global-node\nconst _Node$1 = Node;\nconst ConnectingSlot = new WeakMap();\nconst DisconnectingSlot = new WeakMap();\nfunction callNodeSlot(node, slot) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isTrue(node, `callNodeSlot() should not be called for a non-object`);\n    }\n    const fn = slot.get(node);\n    if (!isUndefined$1(fn)) {\n        fn(node);\n    }\n    return node; // for convenience\n}\n// Monkey patching Node methods to be able to detect the insertions and removal of root elements\n// created via createElement.\nconst { appendChild, insertBefore, removeChild, replaceChild } = _Node$1.prototype;\nassign(_Node$1.prototype, {\n    appendChild(newChild) {\n        const appendedNode = appendChild.call(this, newChild);\n        return callNodeSlot(appendedNode, ConnectingSlot);\n    },\n    insertBefore(newChild, referenceNode) {\n        const insertedNode = insertBefore.call(this, newChild, referenceNode);\n        return callNodeSlot(insertedNode, ConnectingSlot);\n    },\n    removeChild(oldChild) {\n        const removedNode = removeChild.call(this, oldChild);\n        return callNodeSlot(removedNode, DisconnectingSlot);\n    },\n    replaceChild(newChild, oldChild) {\n        const replacedNode = replaceChild.call(this, newChild, oldChild);\n        callNodeSlot(replacedNode, DisconnectingSlot);\n        callNodeSlot(newChild, ConnectingSlot);\n        return replacedNode;\n    },\n});\n/**\n * EXPERIMENTAL: This function is almost identical to document.createElement with the slightly\n * difference that in the options, you can pass the `is` property set to a Constructor instead of\n * just a string value. The intent is to allow the creation of an element controlled by LWC without\n * having to register the element as a custom element.\n *\n * @example\n * ```\n * const el = createElement('x-foo', { is: FooCtor });\n * ```\n */\nfunction createElement(sel, options) {\n    if (!isObject(options) || isNull(options)) {\n        throw new TypeError(`\"createElement\" function expects an object as second parameter but received \"${toString$1(options)}\".`);\n    }\n    const Ctor = options.is;\n    if (!isFunction$1(Ctor)) {\n        throw new TypeError(`\"createElement\" function expects an \"is\" option with a valid component constructor.`);\n    }\n    const UpgradableConstructor = getUpgradableConstructor(sel);\n    let wasComponentUpgraded = false;\n    // the custom element from the registry is expecting an upgrade callback\n    /**\n     * Note: if the upgradable constructor does not expect, or throw when we new it\n     * with a callback as the first argument, we could implement a more advanced\n     * mechanism that only passes that argument if the constructor is known to be\n     * an upgradable custom element.\n     */\n    const element = new UpgradableConstructor((elm) => {\n        createVM(elm, Ctor, {\n            tagName: sel,\n            mode: options.mode !== 'closed' ? 'open' : 'closed',\n            owner: null,\n        });\n        ConnectingSlot.set(elm, connectRootElement);\n        DisconnectingSlot.set(elm, disconnectRootElement);\n        wasComponentUpgraded = true;\n    });\n    if (!wasComponentUpgraded) {\n        /* eslint-disable-next-line no-console */\n        console.error(`Unexpected tag name \"${sel}\". This name is a registered custom element, preventing LWC to upgrade the element.`);\n    }\n    return element;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * EXPERIMENTAL: This function provides access to the component constructor, given an HTMLElement.\n * This API is subject to change or being removed.\n */\nfunction getComponentConstructor(elm) {\n    let ctor = null;\n    if (elm instanceof HTMLElement) {\n        const vm = getAssociatedVMIfPresent(elm);\n        if (!isUndefined$1(vm)) {\n            ctor = vm.def.ctor;\n        }\n    }\n    return ctor;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// TODO [#2472]: Remove this workaround when appropriate.\n// eslint-disable-next-line lwc-internal/no-global-node\nconst _Node = Node;\n/**\n * EXPERIMENTAL: The purpose of this function is to detect shadowed nodes. THIS API WILL BE REMOVED\n * ONCE LOCKER V1 IS NO LONGER SUPPORTED.\n */\nfunction isNodeShadowed(node) {\n    if (isFalse(node instanceof _Node)) {\n        return false;\n    }\n    // It's debatable whether shadow root instances should be considered as shadowed, but we keep\n    // this unchanged for legacy reasons (#1250).\n    if (node instanceof ShadowRoot) {\n        return false;\n    }\n    const rootNode = node.getRootNode();\n    // Handle the native case. We can return early here because an invariant of LWC is that\n    // synthetic roots cannot be descendants of native roots.\n    if (rootNode instanceof ShadowRoot &&\n        isFalse(hasOwnProperty$1.call(getPrototypeOf$1(rootNode), 'synthetic'))) {\n        return true;\n    }\n    // TODO [#1252]: Old behavior that is still used by some pieces of the platform. Manually\n    // inserted nodes without the `lwc:dom=manual` directive will be considered as global elements.\n    return isSyntheticShadowDefined && !isUndefined$1(node[KEY__SHADOW_RESOLVER]);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ComponentConstructorToCustomElementConstructorMap = new Map();\nfunction getCustomElementConstructor(Ctor) {\n    if (Ctor === LightningElement) {\n        throw new TypeError(`Invalid Constructor. LightningElement base class can't be claimed as a custom element.`);\n    }\n    let ce = ComponentConstructorToCustomElementConstructorMap.get(Ctor);\n    if (isUndefined$1(ce)) {\n        ce = buildCustomElementConstructor(Ctor);\n        ComponentConstructorToCustomElementConstructorMap.set(Ctor, ce);\n    }\n    return ce;\n}\n/**\n * This static getter builds a Web Component class from a LWC constructor so it can be registered\n * as a new element via customElements.define() at any given time. E.g.:\n *\n *      import Foo from 'ns/foo';\n *      customElements.define('x-foo', Foo.CustomElementConstructor);\n *      const elm = document.createElement('x-foo');\n *\n */\ndefineProperty(LightningElement, 'CustomElementConstructor', {\n    get() {\n        return getCustomElementConstructor(this);\n    },\n});\nfreeze(LightningElement);\nseal(LightningElement.prototype);\n\nexports.LightningElement = LightningElement;\nexports.__unstable__ProfilerControl = profilerControl;\nexports.api = api$1;\nexports.buildCustomElementConstructor = deprecatedBuildCustomElementConstructor;\nexports.createContextProvider = createContextProvider;\nexports.createElement = createElement;\nexports.getComponentConstructor = getComponentConstructor;\nexports.getComponentDef = getComponentDef;\nexports.hydrateComponent = hydrateComponent;\nexports.isComponentConstructor = isComponentConstructor;\nexports.isNodeFromTemplate = isNodeShadowed;\nexports.readonly = readonly;\nexports.register = register;\nexports.registerComponent = registerComponent;\nexports.registerDecorators = registerDecorators;\nexports.registerTemplate = registerTemplate;\nexports.sanitizeAttribute = sanitizeAttribute;\nexports.setFeatureFlag = setFeatureFlag;\nexports.setFeatureFlagForTest = setFeatureFlagForTest;\nexports.setHooks = setHooks;\nexports.swapComponent = swapComponent;\nexports.swapStyle = swapStyle;\nexports.swapTemplate = swapTemplate;\nexports.track = track;\nexports.unwrap = unwrap;\nexports.wire = wire;\n/* version: 2.13.0 */\n","/* proxy-compat-disable */\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction invariant(value, msg) {\n    if (!value) {\n        throw new Error(`Invariant Violation: ${msg}`);\n    }\n}\nfunction isTrue$1(value, msg) {\n    if (!value) {\n        throw new Error(`Assert Violation: ${msg}`);\n    }\n}\nfunction isFalse$1(value, msg) {\n    if (value) {\n        throw new Error(`Assert Violation: ${msg}`);\n    }\n}\nfunction fail(msg) {\n    throw new Error(msg);\n}\n\nvar assert = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    invariant: invariant,\n    isTrue: isTrue$1,\n    isFalse: isFalse$1,\n    fail: fail\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst { assign, create, defineProperties, defineProperty, freeze, getOwnPropertyDescriptor, getOwnPropertyNames, getPrototypeOf, hasOwnProperty, isFrozen, keys, seal, setPrototypeOf, } = Object;\nconst { isArray } = Array;\nconst { filter: ArrayFilter, find: ArrayFind, indexOf: ArrayIndexOf, join: ArrayJoin, map: ArrayMap, push: ArrayPush, reduce: ArrayReduce, reverse: ArrayReverse, slice: ArraySlice, splice: ArraySplice, unshift: ArrayUnshift, forEach, } = Array.prototype;\nconst { charCodeAt: StringCharCodeAt, replace: StringReplace, slice: StringSlice, toLowerCase: StringToLowerCase, } = String.prototype;\nfunction isUndefined(obj) {\n    return obj === undefined;\n}\nfunction isNull(obj) {\n    return obj === null;\n}\nfunction isTrue(obj) {\n    return obj === true;\n}\nfunction isFalse(obj) {\n    return obj === false;\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nfunction isObject(obj) {\n    return typeof obj === 'object';\n}\nconst OtS = {}.toString;\nfunction toString(obj) {\n    if (obj && obj.toString) {\n        // Arrays might hold objects with \"null\" prototype So using\n        // Array.prototype.toString directly will cause an error Iterate through\n        // all the items and handle individually.\n        if (isArray(obj)) {\n            return ArrayJoin.call(ArrayMap.call(obj, toString), ',');\n        }\n        return obj.toString();\n    }\n    else if (typeof obj === 'object') {\n        return OtS.call(obj);\n    }\n    else {\n        return obj + '';\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Inspired from: https://mathiasbynens.be/notes/globalthis\nconst _globalThis = /*@__PURE__*/ (function () {\n    // On recent browsers, `globalThis` is already defined. In this case return it directly.\n    if (typeof globalThis === 'object') {\n        return globalThis;\n    }\n    let _globalThis;\n    try {\n        // eslint-disable-next-line no-extend-native\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // __magic__ is undefined in Safari 10 and IE10 and older.\n        // @ts-ignore\n        // eslint-disable-next-line no-undef\n        _globalThis = __magic__;\n        // @ts-ignore\n        delete Object.prototype.__magic__;\n    }\n    catch (ex) {\n        // In IE8, Object.defineProperty only works on DOM objects.\n    }\n    finally {\n        // If the magic above fails for some reason we assume that we are in a legacy browser.\n        // Assume `window` exists in this case.\n        if (typeof _globalThis === 'undefined') {\n            // @ts-ignore\n            _globalThis = window;\n        }\n    }\n    return _globalThis;\n})();\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst KEY__IS_NATIVE_SHADOW_ROOT_DEFINED = '$isNativeShadowRootDefined$';\nconst KEY__SHADOW_RESOLVER = '$shadowResolver$';\nconst KEY__SHADOW_RESOLVER_PRIVATE = '$$ShadowResolverKey$$';\nconst KEY__SHADOW_TOKEN = '$shadowToken$';\nconst KEY__SHADOW_TOKEN_PRIVATE = '$$ShadowTokenKey$$';\nconst KEY__SYNTHETIC_MODE = '$$lwc-synthetic-mode';\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// We use this to detect symbol support in order to avoid the expensive symbol polyfill. Note that\n// we can't use typeof since it will fail when transpiling.\nconst hasNativeSymbolSupport = /*@__PURE__*/ (() => Symbol('x').toString() === 'Symbol(x)')();\n/** version: 2.13.0 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// TODO [#2472]: Remove this workaround when appropriate.\n// eslint-disable-next-line lwc-internal/no-global-node\nconst _Node = Node;\nconst nodePrototype = _Node.prototype;\nconst { DOCUMENT_POSITION_CONTAINED_BY, DOCUMENT_POSITION_CONTAINS, DOCUMENT_POSITION_PRECEDING, DOCUMENT_POSITION_FOLLOWING, ELEMENT_NODE, TEXT_NODE, CDATA_SECTION_NODE, PROCESSING_INSTRUCTION_NODE, COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, } = _Node;\nconst { appendChild, cloneNode, compareDocumentPosition, insertBefore, removeChild, replaceChild, hasChildNodes, } = nodePrototype;\nconst { contains } = HTMLElement.prototype;\nconst firstChildGetter = getOwnPropertyDescriptor(nodePrototype, 'firstChild').get;\nconst lastChildGetter = getOwnPropertyDescriptor(nodePrototype, 'lastChild').get;\nconst textContentGetter = getOwnPropertyDescriptor(nodePrototype, 'textContent').get;\nconst parentNodeGetter = getOwnPropertyDescriptor(nodePrototype, 'parentNode').get;\nconst ownerDocumentGetter = getOwnPropertyDescriptor(nodePrototype, 'ownerDocument').get;\nconst parentElementGetter = hasOwnProperty.call(nodePrototype, 'parentElement')\n    ? getOwnPropertyDescriptor(nodePrototype, 'parentElement').get\n    : getOwnPropertyDescriptor(HTMLElement.prototype, 'parentElement').get; // IE11\nconst textContextSetter = getOwnPropertyDescriptor(nodePrototype, 'textContent').set;\nconst childNodesGetter = hasOwnProperty.call(nodePrototype, 'childNodes')\n    ? getOwnPropertyDescriptor(nodePrototype, 'childNodes').get\n    : getOwnPropertyDescriptor(HTMLElement.prototype, 'childNodes').get; // IE11\nconst isConnected = hasOwnProperty.call(nodePrototype, 'isConnected')\n    ? getOwnPropertyDescriptor(nodePrototype, 'isConnected').get\n    : function () {\n        const doc = ownerDocumentGetter.call(this);\n        // IE11\n        return (\n        // if doc is null, it means `this` is actually a document instance which\n        // is always connected\n        doc === null ||\n            (compareDocumentPosition.call(doc, this) & DOCUMENT_POSITION_CONTAINED_BY) !== 0);\n    };\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst { getAttribute, getBoundingClientRect, getElementsByTagName: getElementsByTagName$1, getElementsByTagNameNS: getElementsByTagNameNS$1, hasAttribute, querySelector, querySelectorAll: querySelectorAll$1, removeAttribute, setAttribute, } = Element.prototype;\nconst attachShadow$1 = hasOwnProperty.call(Element.prototype, 'attachShadow')\n    ? Element.prototype.attachShadow\n    : () => {\n        throw new TypeError('attachShadow() is not supported in current browser. Load the @lwc/synthetic-shadow polyfill and use Lightning Web Components');\n    };\nconst childElementCountGetter = getOwnPropertyDescriptor(Element.prototype, 'childElementCount').get;\nconst firstElementChildGetter = getOwnPropertyDescriptor(Element.prototype, 'firstElementChild').get;\nconst lastElementChildGetter = getOwnPropertyDescriptor(Element.prototype, 'lastElementChild').get;\nconst innerTextDescriptor = getOwnPropertyDescriptor(HTMLElement.prototype, 'innerText');\nconst innerTextGetter = innerTextDescriptor\n    ? innerTextDescriptor.get\n    : null;\nconst innerTextSetter = innerTextDescriptor\n    ? innerTextDescriptor.set\n    : null;\n// Note: Firefox does not have outerText, https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/outerText\nconst outerTextDescriptor = getOwnPropertyDescriptor(HTMLElement.prototype, 'outerText');\nconst outerTextGetter = outerTextDescriptor\n    ? outerTextDescriptor.get\n    : null;\nconst outerTextSetter = outerTextDescriptor\n    ? outerTextDescriptor.set\n    : null;\nconst innerHTMLDescriptor = hasOwnProperty.call(Element.prototype, 'innerHTML')\n    ? getOwnPropertyDescriptor(Element.prototype, 'innerHTML')\n    : getOwnPropertyDescriptor(HTMLElement.prototype, 'innerHTML'); // IE11\nconst innerHTMLGetter = innerHTMLDescriptor.get;\nconst innerHTMLSetter = innerHTMLDescriptor.set;\nconst outerHTMLDescriptor = hasOwnProperty.call(Element.prototype, 'outerHTML')\n    ? getOwnPropertyDescriptor(Element.prototype, 'outerHTML')\n    : getOwnPropertyDescriptor(HTMLElement.prototype, 'outerHTML'); // IE11\nconst outerHTMLGetter = outerHTMLDescriptor.get;\nconst outerHTMLSetter = outerHTMLDescriptor.set;\nconst tagNameGetter = getOwnPropertyDescriptor(Element.prototype, 'tagName').get;\nconst tabIndexDescriptor = getOwnPropertyDescriptor(HTMLElement.prototype, 'tabIndex');\nconst tabIndexGetter = tabIndexDescriptor.get;\nconst tabIndexSetter = tabIndexDescriptor.set;\nconst matches = hasOwnProperty.call(Element.prototype, 'matches')\n    ? Element.prototype.matches\n    : Element.prototype.msMatchesSelector; // IE11\nconst childrenGetter = hasOwnProperty.call(Element.prototype, 'children')\n    ? getOwnPropertyDescriptor(Element.prototype, 'children').get\n    : getOwnPropertyDescriptor(HTMLElement.prototype, 'children').get; // IE11\n// for IE11, access from HTMLElement\n// for all other browsers access the method from the parent Element interface\nconst { getElementsByClassName: getElementsByClassName$1 } = HTMLElement.prototype;\nconst shadowRootGetter = hasOwnProperty.call(Element.prototype, 'shadowRoot')\n    ? getOwnPropertyDescriptor(Element.prototype, 'shadowRoot').get\n    : () => null;\nconst assignedSlotGetter$1 = hasOwnProperty.call(Element.prototype, 'assignedSlot')\n    ? getOwnPropertyDescriptor(Element.prototype, 'assignedSlot').get\n    : () => null;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet assignedNodes, assignedElements;\nif (typeof HTMLSlotElement !== 'undefined') {\n    assignedNodes = HTMLSlotElement.prototype.assignedNodes;\n    assignedElements = HTMLSlotElement.prototype.assignedElements;\n}\nelse {\n    assignedNodes = () => {\n        throw new TypeError(\"assignedNodes() is not supported in current browser. Load the @lwc/synthetic-shadow polyfill to start using <slot> elements in your Lightning Web Component's template\");\n    };\n    assignedElements = () => {\n        throw new TypeError(\"assignedElements() is not supported in current browser. Load the @lwc/synthetic-shadow polyfill to start using <slot> elements in your Lightning Web Component's template\");\n    };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst eventTargetGetter = getOwnPropertyDescriptor(Event.prototype, 'target').get;\nconst eventCurrentTargetGetter = getOwnPropertyDescriptor(Event.prototype, 'currentTarget').get;\nconst focusEventRelatedTargetGetter = getOwnPropertyDescriptor(FocusEvent.prototype, 'relatedTarget').get;\n// IE does not implement composedPath() but that's ok because we only use this instead of our\n// composedPath() polyfill when dealing with native shadow DOM components in mixed mode. Defaulting\n// to a NOOP just to be safe, even though this is almost guaranteed to be defined such a scenario.\nconst composedPath = hasOwnProperty.call(Event.prototype, 'composedPath')\n    ? Event.prototype.composedPath\n    : () => [];\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst DocumentPrototypeActiveElement = getOwnPropertyDescriptor(Document.prototype, 'activeElement').get;\nconst elementFromPoint = hasOwnProperty.call(Document.prototype, 'elementFromPoint')\n    ? Document.prototype.elementFromPoint\n    : Document.prototype.msElementFromPoint; // IE11\nconst elementsFromPoint = hasOwnProperty.call(Document.prototype, 'elementsFromPoint')\n    ? Document.prototype.elementsFromPoint\n    : Document.prototype.msElementsFromPoint; // IE11\n// defaultView can be null when a document has no browsing context. For example, the owner document\n// of a node in a template doesn't have a default view: https://jsfiddle.net/hv9z0q5a/\nconst defaultViewGetter = getOwnPropertyDescriptor(Document.prototype, 'defaultView').get;\nconst { createComment, querySelectorAll, getElementById, getElementsByClassName, getElementsByTagName, getElementsByTagNameNS, } = Document.prototype;\n// In Firefox v57 and lower, getElementsByName is defined on HTMLDocument.prototype\n// In all other browsers have the method on Document.prototype\nconst { getElementsByName } = HTMLDocument.prototype;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst { addEventListener: windowAddEventListener, removeEventListener: windowRemoveEventListener, getComputedStyle: windowGetComputedStyle, getSelection: windowGetSelection, } = window;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// There is code in the polyfills that requires access to the unpatched\n// Mutation Observer constructor, this the code for that.\n// Eventually, the polyfill should uses the patched version, and this file can be removed.\nconst MO = MutationObserver;\nconst MutationObserverObserve = MO.prototype.observe;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet NativeShadowRoot = null;\nif (typeof ShadowRoot !== 'undefined') {\n    NativeShadowRoot = ShadowRoot;\n}\nconst isNativeShadowRootDefined = !isNull(NativeShadowRoot);\nconst isInstanceOfNativeShadowRoot = isNull(NativeShadowRoot)\n    ? () => false\n    : (node) => node instanceof NativeShadowRoot;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect$4 () {\n    return typeof HTMLSlotElement === 'undefined';\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst { createElement } = Document.prototype;\nconst CHAR_S = 115;\nconst CHAR_L = 108;\nconst CHAR_O = 111;\nconst CHAR_T = 116;\nfunction apply$4() {\n    // IE11 does not have this element definition\n    // we don't care much about the construction phase, just the prototype\n    class HTMLSlotElement {\n    }\n    // prototype inheritance dance\n    setPrototypeOf(HTMLSlotElement, HTMLElement.constructor);\n    setPrototypeOf(HTMLSlotElement.prototype, HTMLElement.prototype);\n    Window.prototype.HTMLSlotElement = HTMLSlotElement;\n    // IE11 doesn't have HTMLSlotElement, in which case we\n    // need to patch Document.prototype.createElement to remap `slot`\n    // elements to the right prototype\n    defineProperty(Document.prototype, 'createElement', {\n        value: function (tagName, _options) {\n            const elm = createElement.apply(this, ArraySlice.call(arguments));\n            if (tagName.length === 4 &&\n                StringCharCodeAt.call(tagName, 0) === CHAR_S &&\n                StringCharCodeAt.call(tagName, 1) === CHAR_L &&\n                StringCharCodeAt.call(tagName, 2) === CHAR_O &&\n                StringCharCodeAt.call(tagName, 3) === CHAR_T) {\n                // the new element is the `slot`, resetting the proto chain\n                // the new newly created global HTMLSlotElement.prototype\n                setPrototypeOf(elm, HTMLSlotElement.prototype);\n            }\n            return elm;\n        },\n    });\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nif (detect$4()) {\n    apply$4();\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Helpful for tests running with jsdom\nfunction getOwnerDocument(node) {\n    const doc = ownerDocumentGetter.call(node);\n    // if doc is null, it means `this` is actually a document instance\n    return doc === null ? node : doc;\n}\nfunction getOwnerWindow(node) {\n    const doc = getOwnerDocument(node);\n    const win = defaultViewGetter.call(doc);\n    if (win === null) {\n        // this method should never be called with a node that is not part\n        // of a qualifying connected node.\n        throw new TypeError();\n    }\n    return win;\n}\nlet skipGlobalPatching;\n// TODO [#1222]: remove global bypass\nfunction isGlobalPatchingSkipped(node) {\n    // we lazily compute this value instead of doing it during evaluation, this helps\n    // for apps that are setting this after the engine code is evaluated.\n    if (isUndefined(skipGlobalPatching)) {\n        const ownerDocument = getOwnerDocument(node);\n        skipGlobalPatching =\n            ownerDocument.body &&\n                getAttribute.call(ownerDocument.body, 'data-global-patching-bypass') ===\n                    'temporary-bypass';\n    }\n    return isTrue(skipGlobalPatching);\n}\nfunction arrayFromCollection(collection) {\n    const size = collection.length;\n    const cloned = [];\n    if (size > 0) {\n        for (let i = 0; i < size; i++) {\n            cloned[i] = collection[i];\n        }\n    }\n    return cloned;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst eventTargetPrototype = typeof EventTarget !== 'undefined' ? EventTarget.prototype : _Node.prototype;\nconst { addEventListener, dispatchEvent, removeEventListener } = eventTargetPrototype;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst EventListenerMap = new WeakMap();\nconst ComposedPathMap = new WeakMap();\nfunction isEventListenerOrEventListenerObject(fnOrObj) {\n    return (isFunction(fnOrObj) ||\n        (isObject(fnOrObj) &&\n            !isNull(fnOrObj) &&\n            isFunction(fnOrObj.handleEvent)));\n}\nfunction shouldInvokeListener(event, target, currentTarget) {\n    // Subsequent logic assumes that `currentTarget` must be contained in the composed path for the listener to be\n    // invoked, but this is not always the case. `composedPath()` will sometimes return an empty array, even when the\n    // listener should be invoked (e.g., a disconnected instance of EventTarget, an instance of XMLHttpRequest, etc).\n    if (target === currentTarget) {\n        return true;\n    }\n    let composedPath = ComposedPathMap.get(event);\n    if (isUndefined(composedPath)) {\n        composedPath = event.composedPath();\n        ComposedPathMap.set(event, composedPath);\n    }\n    return composedPath.includes(currentTarget);\n}\nfunction getEventListenerWrapper(fnOrObj) {\n    if (!isEventListenerOrEventListenerObject(fnOrObj)) {\n        return fnOrObj;\n    }\n    let wrapperFn = EventListenerMap.get(fnOrObj);\n    if (isUndefined(wrapperFn)) {\n        wrapperFn = function (event) {\n            // This function is invoked from an event listener and currentTarget is always defined.\n            const currentTarget = eventCurrentTargetGetter.call(event);\n            if (process.env.NODE_ENV !== 'production') {\n                assert.invariant(isFalse(isSyntheticShadowHost(currentTarget)), 'This routine should not be used to wrap event listeners for host elements and shadow roots.');\n            }\n            const actualTarget = getActualTarget(event);\n            if (!shouldInvokeListener(event, actualTarget, currentTarget)) {\n                return;\n            }\n            return isFunction(fnOrObj)\n                ? fnOrObj.call(this, event)\n                : fnOrObj.handleEvent && fnOrObj.handleEvent(event);\n        };\n        EventListenerMap.set(fnOrObj, wrapperFn);\n    }\n    return wrapperFn;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst eventToContextMap = new WeakMap();\nconst customElementToWrappedListeners = new WeakMap();\nfunction getEventMap(elm) {\n    let listenerInfo = customElementToWrappedListeners.get(elm);\n    if (isUndefined(listenerInfo)) {\n        listenerInfo = create(null);\n        customElementToWrappedListeners.set(elm, listenerInfo);\n    }\n    return listenerInfo;\n}\n/**\n * Events dispatched on shadow roots actually end up being dispatched on their hosts. This means that the event.target\n * property of events dispatched on shadow roots always resolve to their host. This function understands this\n * abstraction and properly returns a reference to the shadow root when appropriate.\n */\nfunction getActualTarget(event) {\n    var _a;\n    return (_a = eventToShadowRootMap.get(event)) !== null && _a !== void 0 ? _a : eventTargetGetter.call(event);\n}\nconst shadowRootEventListenerMap = new WeakMap();\nfunction getWrappedShadowRootListener(listener) {\n    if (!isFunction(listener)) {\n        throw new TypeError(); // avoiding problems with non-valid listeners\n    }\n    let shadowRootWrappedListener = shadowRootEventListenerMap.get(listener);\n    if (isUndefined(shadowRootWrappedListener)) {\n        shadowRootWrappedListener = function (event) {\n            // currentTarget is always defined inside an event listener\n            let currentTarget = eventCurrentTargetGetter.call(event);\n            // If currentTarget is not an instance of a native shadow root then we're dealing with a\n            // host element whose synthetic shadow root must be accessed via getShadowRoot().\n            if (!isInstanceOfNativeShadowRoot(currentTarget)) {\n                currentTarget = getShadowRoot(currentTarget);\n            }\n            const actualTarget = getActualTarget(event);\n            if (shouldInvokeListener(event, actualTarget, currentTarget)) {\n                listener.call(currentTarget, event);\n            }\n        };\n        shadowRootWrappedListener.placement = 1 /* SHADOW_ROOT_LISTENER */;\n        shadowRootEventListenerMap.set(listener, shadowRootWrappedListener);\n    }\n    return shadowRootWrappedListener;\n}\nconst customElementEventListenerMap = new WeakMap();\nfunction getWrappedCustomElementListener(listener) {\n    if (!isFunction(listener)) {\n        throw new TypeError(); // avoiding problems with non-valid listeners\n    }\n    let customElementWrappedListener = customElementEventListenerMap.get(listener);\n    if (isUndefined(customElementWrappedListener)) {\n        customElementWrappedListener = function (event) {\n            // currentTarget is always defined inside an event listener\n            const currentTarget = eventCurrentTargetGetter.call(event);\n            const actualTarget = getActualTarget(event);\n            if (shouldInvokeListener(event, actualTarget, currentTarget)) {\n                listener.call(currentTarget, event);\n            }\n        };\n        customElementWrappedListener.placement = 0 /* CUSTOM_ELEMENT_LISTENER */;\n        customElementEventListenerMap.set(listener, customElementWrappedListener);\n    }\n    return customElementWrappedListener;\n}\nfunction domListener(evt) {\n    let immediatePropagationStopped = false;\n    let propagationStopped = false;\n    const { type, stopImmediatePropagation, stopPropagation } = evt;\n    // currentTarget is always defined\n    const currentTarget = eventCurrentTargetGetter.call(evt);\n    const listenerMap = getEventMap(currentTarget);\n    const listeners = listenerMap[type]; // it must have listeners at this point\n    defineProperty(evt, 'stopImmediatePropagation', {\n        value() {\n            immediatePropagationStopped = true;\n            stopImmediatePropagation.call(evt);\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n    defineProperty(evt, 'stopPropagation', {\n        value() {\n            propagationStopped = true;\n            stopPropagation.call(evt);\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n    // in case a listener adds or removes other listeners during invocation\n    const bookkeeping = ArraySlice.call(listeners);\n    function invokeListenersByPlacement(placement) {\n        forEach.call(bookkeeping, (listener) => {\n            if (isFalse(immediatePropagationStopped) && listener.placement === placement) {\n                // making sure that the listener was not removed from the original listener queue\n                if (ArrayIndexOf.call(listeners, listener) !== -1) {\n                    // all handlers on the custom element should be called with undefined 'this'\n                    listener.call(undefined, evt);\n                }\n            }\n        });\n    }\n    eventToContextMap.set(evt, 1 /* SHADOW_ROOT_LISTENER */);\n    invokeListenersByPlacement(1 /* SHADOW_ROOT_LISTENER */);\n    if (isFalse(immediatePropagationStopped) && isFalse(propagationStopped)) {\n        // doing the second iteration only if the first one didn't interrupt the event propagation\n        eventToContextMap.set(evt, 0 /* CUSTOM_ELEMENT_LISTENER */);\n        invokeListenersByPlacement(0 /* CUSTOM_ELEMENT_LISTENER */);\n    }\n    eventToContextMap.set(evt, 2 /* UNKNOWN_LISTENER */);\n}\nfunction attachDOMListener(elm, type, wrappedListener) {\n    const listenerMap = getEventMap(elm);\n    let cmpEventHandlers = listenerMap[type];\n    if (isUndefined(cmpEventHandlers)) {\n        cmpEventHandlers = listenerMap[type] = [];\n    }\n    // Prevent identical listeners from subscribing to the same event type.\n    // TODO [#1824]: Options will also play a factor when we introduce support for them (#1824).\n    if (ArrayIndexOf.call(cmpEventHandlers, wrappedListener) !== -1) {\n        return;\n    }\n    // only add to DOM if there is no other listener on the same placement yet\n    if (cmpEventHandlers.length === 0) {\n        // super.addEventListener() - this will not work on\n        addEventListener.call(elm, type, domListener);\n    }\n    ArrayPush.call(cmpEventHandlers, wrappedListener);\n}\nfunction detachDOMListener(elm, type, wrappedListener) {\n    const listenerMap = getEventMap(elm);\n    let p;\n    let listeners;\n    if (!isUndefined((listeners = listenerMap[type])) &&\n        (p = ArrayIndexOf.call(listeners, wrappedListener)) !== -1) {\n        ArraySplice.call(listeners, p, 1);\n        // only remove from DOM if there is no other listener on the same placement\n        if (listeners.length === 0) {\n            removeEventListener.call(elm, type, domListener);\n        }\n    }\n}\nfunction addCustomElementEventListener(type, listener, _options) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!isFunction(listener)) {\n            throw new TypeError(`Invalid second argument for Element.addEventListener() in ${toString(this)} for event \"${type}\". Expected an EventListener but received ${listener}.`);\n        }\n    }\n    // TODO [#1824]: Lift this restriction on the option parameter\n    if (isFunction(listener)) {\n        const wrappedListener = getWrappedCustomElementListener(listener);\n        attachDOMListener(this, type, wrappedListener);\n    }\n}\nfunction removeCustomElementEventListener(type, listener, _options) {\n    // TODO [#1824]: Lift this restriction on the option parameter\n    if (isFunction(listener)) {\n        const wrappedListener = getWrappedCustomElementListener(listener);\n        detachDOMListener(this, type, wrappedListener);\n    }\n}\nfunction addShadowRootEventListener(sr, type, listener, _options) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!isFunction(listener)) {\n            throw new TypeError(`Invalid second argument for ShadowRoot.addEventListener() in ${toString(sr)} for event \"${type}\". Expected an EventListener but received ${listener}.`);\n        }\n    }\n    // TODO [#1824]: Lift this restriction on the option parameter\n    if (isFunction(listener)) {\n        const elm = getHost(sr);\n        const wrappedListener = getWrappedShadowRootListener(listener);\n        attachDOMListener(elm, type, wrappedListener);\n    }\n}\nfunction removeShadowRootEventListener(sr, type, listener, _options) {\n    // TODO [#1824]: Lift this restriction on the option parameter\n    if (isFunction(listener)) {\n        const elm = getHost(sr);\n        const wrappedListener = getWrappedShadowRootListener(listener);\n        detachDOMListener(elm, type, wrappedListener);\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Used as a back reference to identify the host element\nconst HostElementKey = '$$HostElementKey$$';\nconst ShadowedNodeKey = '$$ShadowedNodeKey$$';\nfunction fastDefineProperty(node, propName, config) {\n    const shadowedNode = node;\n    if (process.env.NODE_ENV !== 'production') {\n        // in dev, we are more restrictive\n        defineProperty(shadowedNode, propName, config);\n    }\n    else {\n        const { value } = config;\n        // in prod, we prioritize performance\n        shadowedNode[propName] = value;\n    }\n}\nfunction setNodeOwnerKey(node, value) {\n    fastDefineProperty(node, HostElementKey, { value, configurable: true });\n}\nfunction setNodeKey(node, value) {\n    fastDefineProperty(node, ShadowedNodeKey, { value });\n}\nfunction getNodeOwnerKey(node) {\n    return node[HostElementKey];\n}\nfunction getNodeNearestOwnerKey(node) {\n    let host = node;\n    let hostKey;\n    // search for the first element with owner identity (just in case of manually inserted elements)\n    while (!isNull(host)) {\n        hostKey = getNodeOwnerKey(host);\n        if (!isUndefined(hostKey)) {\n            return hostKey;\n        }\n        host = parentNodeGetter.call(host);\n    }\n}\nfunction getNodeKey(node) {\n    return node[ShadowedNodeKey];\n}\n/**\n * This function does not traverse up for performance reasons, but is sufficient for most use\n * cases. If we need to traverse up and verify those nodes that don't have owner key, use\n * isNodeDeepShadowed instead.\n */\nfunction isNodeShadowed(node) {\n    return !isUndefined(getNodeOwnerKey(node));\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// when finding a slot in the DOM, we can fold it if it is contained\n// inside another slot.\nfunction foldSlotElement(slot) {\n    let parent = parentElementGetter.call(slot);\n    while (!isNull(parent) && isSlotElement(parent)) {\n        slot = parent;\n        parent = parentElementGetter.call(slot);\n    }\n    return slot;\n}\nfunction isNodeSlotted(host, node) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.invariant(host instanceof HTMLElement, `isNodeSlotted() should be called with a host as the first argument instead of ${host}`);\n        assert.invariant(node instanceof _Node, `isNodeSlotted() should be called with a node as the second argument instead of ${node}`);\n        assert.invariant(compareDocumentPosition.call(node, host) & DOCUMENT_POSITION_CONTAINS, `isNodeSlotted() should never be called with a node that is not a child node of ${host}`);\n    }\n    const hostKey = getNodeKey(host);\n    // this routine assumes that the node is coming from a different shadow (it is not owned by the host)\n    // just in case the provided node is not an element\n    let currentElement = node instanceof Element ? node : parentElementGetter.call(node);\n    while (!isNull(currentElement) && currentElement !== host) {\n        const elmOwnerKey = getNodeNearestOwnerKey(currentElement);\n        const parent = parentElementGetter.call(currentElement);\n        if (elmOwnerKey === hostKey) {\n            // we have reached an element inside the host's template, and only if\n            // that element is an slot, then the node is considered slotted\n            return isSlotElement(currentElement);\n        }\n        else if (parent === host) {\n            return false;\n        }\n        else if (!isNull(parent) && getNodeNearestOwnerKey(parent) !== elmOwnerKey) {\n            // we are crossing a boundary of some sort since the elm and its parent\n            // have different owner key. for slotted elements, this is possible\n            // if the parent happens to be a slot.\n            if (isSlotElement(parent)) {\n                /**\n                 * the slot parent might be allocated inside another slot, think of:\n                 * <x-root> (<--- root element)\n                 *    <x-parent> (<--- own by x-root)\n                 *       <x-child> (<--- own by x-root)\n                 *           <slot> (<--- own by x-child)\n                 *               <slot> (<--- own by x-parent)\n                 *                  <div> (<--- own by x-root)\n                 *\n                 * while checking if x-parent has the div slotted, we need to traverse\n                 * up, but when finding the first slot, we skip that one in favor of the\n                 * most outer slot parent before jumping into its corresponding host.\n                 */\n                currentElement = getNodeOwner(foldSlotElement(parent));\n                if (!isNull(currentElement)) {\n                    if (currentElement === host) {\n                        // the slot element is a top level element inside the shadow\n                        // of a host that was allocated into host in question\n                        return true;\n                    }\n                    else if (getNodeNearestOwnerKey(currentElement) === hostKey) {\n                        // the slot element is an element inside the shadow\n                        // of a host that was allocated into host in question\n                        return true;\n                    }\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            currentElement = parent;\n        }\n    }\n    return false;\n}\nfunction getNodeOwner(node) {\n    if (!(node instanceof _Node)) {\n        return null;\n    }\n    const ownerKey = getNodeNearestOwnerKey(node);\n    if (isUndefined(ownerKey)) {\n        return null;\n    }\n    let nodeOwner = node;\n    // At this point, node is a valid node with owner identity, now we need to find the owner node\n    // search for a custom element with a VM that owns the first element with owner identity attached to it\n    while (!isNull(nodeOwner) && getNodeKey(nodeOwner) !== ownerKey) {\n        nodeOwner = parentNodeGetter.call(nodeOwner);\n    }\n    if (isNull(nodeOwner)) {\n        return null;\n    }\n    return nodeOwner;\n}\nfunction isSyntheticSlotElement(node) {\n    return isSlotElement(node) && isNodeShadowed(node);\n}\nfunction isSlotElement(node) {\n    return node instanceof HTMLSlotElement;\n}\nfunction isNodeOwnedBy(owner, node) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.invariant(owner instanceof HTMLElement, `isNodeOwnedBy() should be called with an element as the first argument instead of ${owner}`);\n        assert.invariant(node instanceof _Node, `isNodeOwnedBy() should be called with a node as the second argument instead of ${node}`);\n        assert.invariant(compareDocumentPosition.call(node, owner) & DOCUMENT_POSITION_CONTAINS, `isNodeOwnedBy() should never be called with a node that is not a child node of ${owner}`);\n    }\n    const ownerKey = getNodeNearestOwnerKey(node);\n    return isUndefined(ownerKey) || getNodeKey(owner) === ownerKey;\n}\nfunction shadowRootChildNodes(root) {\n    const elm = getHost(root);\n    return getAllMatches(elm, arrayFromCollection(childNodesGetter.call(elm)));\n}\nfunction getAllSlottedMatches(host, nodeList) {\n    const filteredAndPatched = [];\n    for (let i = 0, len = nodeList.length; i < len; i += 1) {\n        const node = nodeList[i];\n        if (!isNodeOwnedBy(host, node) && isNodeSlotted(host, node)) {\n            ArrayPush.call(filteredAndPatched, node);\n        }\n    }\n    return filteredAndPatched;\n}\nfunction getFirstSlottedMatch(host, nodeList) {\n    for (let i = 0, len = nodeList.length; i < len; i += 1) {\n        const node = nodeList[i];\n        if (!isNodeOwnedBy(host, node) && isNodeSlotted(host, node)) {\n            return node;\n        }\n    }\n    return null;\n}\nfunction getAllMatches(owner, nodeList) {\n    const filteredAndPatched = [];\n    for (let i = 0, len = nodeList.length; i < len; i += 1) {\n        const node = nodeList[i];\n        const isOwned = isNodeOwnedBy(owner, node);\n        if (isOwned) {\n            // Patch querySelector, querySelectorAll, etc\n            // if element is owned by VM\n            ArrayPush.call(filteredAndPatched, node);\n        }\n    }\n    return filteredAndPatched;\n}\nfunction getFirstMatch(owner, nodeList) {\n    for (let i = 0, len = nodeList.length; i < len; i += 1) {\n        if (isNodeOwnedBy(owner, nodeList[i])) {\n            return nodeList[i];\n        }\n    }\n    return null;\n}\nfunction shadowRootQuerySelector(root, selector) {\n    const elm = getHost(root);\n    const nodeList = arrayFromCollection(querySelectorAll$1.call(elm, selector));\n    return getFirstMatch(elm, nodeList);\n}\nfunction shadowRootQuerySelectorAll(root, selector) {\n    const elm = getHost(root);\n    const nodeList = querySelectorAll$1.call(elm, selector);\n    return getAllMatches(elm, arrayFromCollection(nodeList));\n}\nfunction getFilteredChildNodes(node) {\n    if (!isSyntheticShadowHost(node) && !isSlotElement(node)) {\n        // regular element - fast path\n        const children = childNodesGetter.call(node);\n        return arrayFromCollection(children);\n    }\n    if (isSyntheticShadowHost(node)) {\n        // we need to get only the nodes that were slotted\n        const slots = arrayFromCollection(querySelectorAll$1.call(node, 'slot'));\n        const resolver = getShadowRootResolver(getShadowRoot(node));\n        // Typescript is inferring the wrong function type for this particular\n        // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n        // @ts-ignore type-mismatch\n        return ArrayReduce.call(slots, (seed, slot) => {\n            if (resolver === getShadowRootResolver(slot)) {\n                ArrayPush.apply(seed, getFilteredSlotAssignedNodes(slot));\n            }\n            return seed;\n        }, []);\n    }\n    else {\n        // slot element\n        const children = arrayFromCollection(childNodesGetter.call(node));\n        const resolver = getShadowRootResolver(node);\n        return ArrayFilter.call(children, (child) => resolver === getShadowRootResolver(child));\n    }\n}\nfunction getFilteredSlotAssignedNodes(slot) {\n    const owner = getNodeOwner(slot);\n    if (isNull(owner)) {\n        return [];\n    }\n    const childNodes = arrayFromCollection(childNodesGetter.call(slot));\n    return ArrayFilter.call(childNodes, (child) => !isNodeShadowed(child) || !isNodeOwnedBy(owner, child));\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getTextContent(node) {\n    switch (node.nodeType) {\n        case ELEMENT_NODE: {\n            const childNodes = getFilteredChildNodes(node);\n            let content = '';\n            for (let i = 0, len = childNodes.length; i < len; i += 1) {\n                const currentNode = childNodes[i];\n                if (currentNode.nodeType !== COMMENT_NODE) {\n                    content += getTextContent(currentNode);\n                }\n            }\n            return content;\n        }\n        default:\n            return node.nodeValue;\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst Items$1 = new WeakMap();\nfunction StaticNodeList() {\n    throw new TypeError('Illegal constructor');\n}\nStaticNodeList.prototype = create(NodeList.prototype, {\n    constructor: {\n        writable: true,\n        configurable: true,\n        value: StaticNodeList,\n    },\n    item: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(index) {\n            return this[index];\n        },\n    },\n    length: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return Items$1.get(this).length;\n        },\n    },\n    // Iterator protocol\n    forEach: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(cb, thisArg) {\n            forEach.call(Items$1.get(this), cb, thisArg);\n        },\n    },\n    entries: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value() {\n            return ArrayMap.call(Items$1.get(this), (v, i) => [i, v]);\n        },\n    },\n    keys: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value() {\n            return ArrayMap.call(Items$1.get(this), (_v, i) => i);\n        },\n    },\n    values: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value() {\n            return Items$1.get(this);\n        },\n    },\n    [Symbol.iterator]: {\n        writable: true,\n        configurable: true,\n        value() {\n            let nextIndex = 0;\n            return {\n                next: () => {\n                    const items = Items$1.get(this);\n                    return nextIndex < items.length\n                        ? {\n                            value: items[nextIndex++],\n                            done: false,\n                        }\n                        : {\n                            done: true,\n                        };\n                },\n            };\n        },\n    },\n    [Symbol.toStringTag]: {\n        configurable: true,\n        get() {\n            return 'NodeList';\n        },\n    },\n    // IE11 doesn't support Symbol.toStringTag, in which case we\n    // provide the regular toString method.\n    toString: {\n        writable: true,\n        configurable: true,\n        value() {\n            return '[object NodeList]';\n        },\n    },\n});\n// prototype inheritance dance\nsetPrototypeOf(StaticNodeList, NodeList);\nfunction createStaticNodeList(items) {\n    const nodeList = create(StaticNodeList.prototype);\n    Items$1.set(nodeList, items);\n    // setting static indexes\n    forEach.call(items, (item, index) => {\n        defineProperty(nodeList, index, {\n            value: item,\n            enumerable: true,\n            configurable: true,\n        });\n    });\n    return nodeList;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst Items = new WeakMap();\nfunction StaticHTMLCollection() {\n    throw new TypeError('Illegal constructor');\n}\nStaticHTMLCollection.prototype = create(HTMLCollection.prototype, {\n    constructor: {\n        writable: true,\n        configurable: true,\n        value: StaticHTMLCollection,\n    },\n    item: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(index) {\n            return this[index];\n        },\n    },\n    length: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return Items.get(this).length;\n        },\n    },\n    // https://dom.spec.whatwg.org/#dom-htmlcollection-nameditem-key\n    namedItem: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(name) {\n            if (name === '') {\n                return null;\n            }\n            const items = Items.get(this);\n            for (let i = 0, len = items.length; i < len; i++) {\n                const item = items[len];\n                if (name === getAttribute.call(item, 'id') ||\n                    name === getAttribute.call(item, 'name')) {\n                    return item;\n                }\n            }\n            return null;\n        },\n    },\n    [Symbol.toStringTag]: {\n        configurable: true,\n        get() {\n            return 'HTMLCollection';\n        },\n    },\n    // IE11 doesn't support Symbol.toStringTag, in which case we\n    // provide the regular toString method.\n    toString: {\n        writable: true,\n        configurable: true,\n        value() {\n            return '[object HTMLCollection]';\n        },\n    },\n});\n// prototype inheritance dance\nsetPrototypeOf(StaticHTMLCollection, HTMLCollection);\nfunction createStaticHTMLCollection(items) {\n    const collection = create(StaticHTMLCollection.prototype);\n    Items.set(collection, items);\n    // setting static indexes\n    forEach.call(items, (item, index) => {\n        defineProperty(collection, index, {\n            value: item,\n            enumerable: true,\n            configurable: true,\n        });\n    });\n    return collection;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getInnerHTML(node) {\n    let s = '';\n    const childNodes = getFilteredChildNodes(node);\n    for (let i = 0, len = childNodes.length; i < len; i += 1) {\n        s += getOuterHTML(childNodes[i]);\n    }\n    return s;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nconst escapeAttrRegExp = /[&\\u00A0\"]/g;\nconst escapeDataRegExp = /[&\\u00A0<>]/g;\nconst { replace, toLowerCase } = String.prototype;\nfunction escapeReplace(c) {\n    switch (c) {\n        case '&':\n            return '&amp;';\n        case '<':\n            return '&lt;';\n        case '>':\n            return '&gt;';\n        case '\"':\n            return '&quot;';\n        case '\\u00A0':\n            return '&nbsp;';\n        default:\n            return '';\n    }\n}\nfunction escapeAttr(s) {\n    return replace.call(s, escapeAttrRegExp, escapeReplace);\n}\nfunction escapeData(s) {\n    return replace.call(s, escapeDataRegExp, escapeReplace);\n}\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nconst voidElements = new Set([\n    'AREA',\n    'BASE',\n    'BR',\n    'COL',\n    'COMMAND',\n    'EMBED',\n    'HR',\n    'IMG',\n    'INPUT',\n    'KEYGEN',\n    'LINK',\n    'META',\n    'PARAM',\n    'SOURCE',\n    'TRACK',\n    'WBR',\n]);\nconst plaintextParents = new Set([\n    'STYLE',\n    'SCRIPT',\n    'XMP',\n    'IFRAME',\n    'NOEMBED',\n    'NOFRAMES',\n    'PLAINTEXT',\n    'NOSCRIPT',\n]);\nfunction getOuterHTML(node) {\n    switch (node.nodeType) {\n        case ELEMENT_NODE: {\n            const { attributes: attrs } = node;\n            const tagName = tagNameGetter.call(node);\n            let s = '<' + toLowerCase.call(tagName);\n            for (let i = 0, attr; (attr = attrs[i]); i++) {\n                s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n            }\n            s += '>';\n            if (voidElements.has(tagName)) {\n                return s;\n            }\n            return s + getInnerHTML(node) + '</' + toLowerCase.call(tagName) + '>';\n        }\n        case TEXT_NODE: {\n            const { data, parentNode } = node;\n            if (parentNode instanceof Element &&\n                plaintextParents.has(tagNameGetter.call(parentNode))) {\n                return data;\n            }\n            return escapeData(data);\n        }\n        case CDATA_SECTION_NODE: {\n            return `<!CDATA[[${node.data}]]>`;\n        }\n        case PROCESSING_INSTRUCTION_NODE: {\n            return `<?${node.target} ${node.data}?>`;\n        }\n        case COMMENT_NODE: {\n            return `<!--${node.data}-->`;\n        }\n        default: {\n            // intentionally ignoring unknown node types\n            // Note: since this routine is always invoked for childNodes\n            // we can safety ignore type 9, 10 and 99 (document, fragment and doctype)\n            return '';\n        }\n    }\n}\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\nif (!_globalThis.lwcRuntimeFlags) {\n    Object.defineProperty(_globalThis, 'lwcRuntimeFlags', { value: create(null) });\n}\nconst runtimeFlags = _globalThis.lwcRuntimeFlags;\n/** version: 2.13.0 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This method checks whether or not the content of the node is computed\n * based on the light-dom slotting mechanism. This applies to synthetic slot elements\n * and elements with shadow dom attached to them. It doesn't apply to native slot elements\n * because we don't want to patch the children getters for those elements.\n */\n\nfunction hasMountedChildren(node) {\n  return isSyntheticSlotElement(node) || isSyntheticShadowHost(node);\n}\n\nfunction getShadowParent(node, value) {\n  const owner = getNodeOwner(node);\n\n  if (value === owner) {\n    // walking up via parent chain might end up in the shadow root element\n    return getShadowRoot(owner);\n  } else if (value instanceof Element) {\n    if (getNodeNearestOwnerKey(node) === getNodeNearestOwnerKey(value)) {\n      // the element and its parent node belong to the same shadow root\n      return value;\n    } else if (!isNull(owner) && isSlotElement(value)) {\n      // slotted elements must be top level childNodes of the slot element\n      // where they slotted into, but its shadowed parent is always the\n      // owner of the slot.\n      const slotOwner = getNodeOwner(value);\n\n      if (!isNull(slotOwner) && isNodeOwnedBy(owner, slotOwner)) {\n        // it is a slotted element, and therefore its parent is always going to be the host of the slot\n        return slotOwner;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction hasChildNodesPatched() {\n  return getInternalChildNodes(this).length > 0;\n}\n\nfunction firstChildGetterPatched() {\n  const childNodes = getInternalChildNodes(this);\n  return childNodes[0] || null;\n}\n\nfunction lastChildGetterPatched() {\n  const childNodes = getInternalChildNodes(this);\n  return childNodes[childNodes.length - 1] || null;\n}\n\nfunction textContentGetterPatched() {\n  return getTextContent(this);\n}\n\nfunction textContentSetterPatched(value) {\n  textContextSetter.call(this, value);\n}\n\nfunction parentNodeGetterPatched() {\n  const value = parentNodeGetter.call(this);\n\n  if (isNull(value)) {\n    return value;\n  } // TODO [#1635]: this needs optimization, maybe implementing it based on this.assignedSlot\n\n\n  return getShadowParent(this, value);\n}\n\nfunction parentElementGetterPatched() {\n  const value = parentNodeGetter.call(this);\n\n  if (isNull(value)) {\n    return null;\n  }\n\n  const parentNode = getShadowParent(this, value); // it could be that the parentNode is the shadowRoot, in which case\n  // we need to return null.\n  // TODO [#1635]: this needs optimization, maybe implementing it based on this.assignedSlot\n\n  return parentNode instanceof Element ? parentNode : null;\n}\n\nfunction compareDocumentPositionPatched(otherNode) {\n  if (this === otherNode) {\n    return 0;\n  } else if (this.getRootNode() === otherNode) {\n    // \"this\" is in a shadow tree where the shadow root is the \"otherNode\".\n    return 10; // Node.DOCUMENT_POSITION_CONTAINS | Node.DOCUMENT_POSITION_PRECEDING\n  } else if (getNodeOwnerKey(this) !== getNodeOwnerKey(otherNode)) {\n    // \"this\" and \"otherNode\" belongs to 2 different shadow tree.\n    return 35; // Node.DOCUMENT_POSITION_DISCONNECTED | Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC | Node.DOCUMENT_POSITION_PRECEDING\n  } // Since \"this\" and \"otherNode\" are part of the same shadow tree we can safely rely to the native\n  // Node.compareDocumentPosition implementation.\n\n\n  return compareDocumentPosition.call(this, otherNode);\n}\n\nfunction containsPatched(otherNode) {\n  if (otherNode == null || getNodeOwnerKey(this) !== getNodeOwnerKey(otherNode)) {\n    // it is from another shadow\n    return false;\n  }\n\n  return (compareDocumentPosition.call(this, otherNode) & DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n}\n\nfunction cloneNodePatched(deep) {\n  const clone = cloneNode.call(this, false); // Per spec, browsers only care about truthy values\n  // Not strict true or false\n\n  if (!deep) {\n    return clone;\n  }\n\n  const childNodes = getInternalChildNodes(this);\n\n  for (let i = 0, len = childNodes.length; i < len; i += 1) {\n    clone.appendChild(childNodes[i].cloneNode(true));\n  }\n\n  return clone;\n}\n/**\n * This method only applies to elements with a shadow or slots\n */\n\n\nfunction childNodesGetterPatched() {\n  if (isSyntheticShadowHost(this)) {\n    const owner = getNodeOwner(this);\n    const childNodes = isNull(owner) ? [] : getAllMatches(owner, getFilteredChildNodes(this));\n\n    if (process.env.NODE_ENV !== 'production' && isFalse(hasNativeSymbolSupport) && isExternalChildNodeAccessorFlagOn()) {\n      // inserting a comment node as the first childNode to trick the IE11\n      // DevTool to show the content of the shadowRoot, this should only happen\n      // in dev-mode and in IE11 (which we detect by looking at the symbol).\n      // Plus it should only be in place if we know it is an external invoker.\n      ArrayUnshift.call(childNodes, getIE11FakeShadowRootPlaceholder(this));\n    }\n\n    return createStaticNodeList(childNodes);\n  } // nothing to do here since this does not have a synthetic shadow attached to it\n  // TODO [#1636]: what about slot elements?\n\n\n  return childNodesGetter.call(this);\n}\n\nconst nativeGetRootNode = _Node.prototype.getRootNode;\n/**\n * Get the root by climbing up the dom tree, beyond the shadow root\n * If Node.prototype.getRootNode is supported, use it\n * else, assume we are working in non-native shadow mode and climb using parentNode\n */\n\nconst getDocumentOrRootNode = !isUndefined(nativeGetRootNode) ? nativeGetRootNode : function () {\n  let node = this;\n  let nodeParent;\n\n  while (!isNull(nodeParent = parentNodeGetter.call(node))) {\n    node = nodeParent;\n  }\n\n  return node;\n};\n/**\n * Get the shadow root\n * getNodeOwner() returns the host element that owns the given node\n * Note: getNodeOwner() returns null when running in native-shadow mode.\n *  Fallback to using the native getRootNode() to discover the root node.\n *  This is because, it is not possible to inspect the node and decide if it is part\n *  of a native shadow or the synthetic shadow.\n * @param {Node} node\n */\n\nfunction getNearestRoot(node) {\n  const ownerNode = getNodeOwner(node);\n\n  if (isNull(ownerNode)) {\n    // we hit a wall, either we are in native shadow mode or the node is not in lwc boundary.\n    return getDocumentOrRootNode.call(node);\n  }\n\n  return getShadowRoot(ownerNode);\n}\n/**\n * If looking for a root node beyond shadow root by calling `node.getRootNode({composed: true})`, use the original `Node.prototype.getRootNode` method\n * to return the root of the dom tree. In IE11 and Edge, Node.prototype.getRootNode is\n * [not supported](https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode#Browser_compatibility). The root node is discovered by manually\n * climbing up the dom tree.\n *\n * If looking for a shadow root of a node by calling `node.getRootNode({composed: false})` or `node.getRootNode()`,\n *\n *  1. Try to identify the host element that owns the give node.\n *     i. Identify the shadow tree that the node belongs to\n *     ii. If the node belongs to a shadow tree created by engine, return the shadowRoot of the host element that owns the shadow tree\n *  2. The host identification logic returns null in two cases:\n *     i. The node does not belong to a shadow tree created by engine\n *     ii. The engine is running in native shadow dom mode\n *     If so, use the original Node.prototype.getRootNode to fetch the root node(or manually climb up the dom tree where getRootNode() is unsupported)\n *\n * _Spec_: https://dom.spec.whatwg.org/#dom-node-getrootnode\n *\n **/\n\n\nfunction getRootNodePatched(options) {\n  const composed = isUndefined(options) ? false : !!options.composed;\n  return isTrue(composed) ? getDocumentOrRootNode.call(this, options) : getNearestRoot(this);\n} // Non-deep-traversing patches: this descriptor map includes all descriptors that\n// do not give access to nodes beyond the immediate children.\n\n\ndefineProperties(_Node.prototype, {\n  firstChild: {\n    get() {\n      if (hasMountedChildren(this)) {\n        return firstChildGetterPatched.call(this);\n      }\n\n      return firstChildGetter.call(this);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  lastChild: {\n    get() {\n      if (hasMountedChildren(this)) {\n        return lastChildGetterPatched.call(this);\n      }\n\n      return lastChildGetter.call(this);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  textContent: {\n    get() {\n      if (!runtimeFlags.ENABLE_NODE_PATCH) {\n        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {\n          return textContentGetterPatched.call(this);\n        }\n\n        return textContentGetter.call(this);\n      } // TODO [#1222]: remove global bypass\n\n\n      if (isGlobalPatchingSkipped(this)) {\n        return textContentGetter.call(this);\n      }\n\n      return textContentGetterPatched.call(this);\n    },\n\n    set: textContentSetterPatched,\n    enumerable: true,\n    configurable: true\n  },\n  parentNode: {\n    get() {\n      if (isNodeShadowed(this)) {\n        return parentNodeGetterPatched.call(this);\n      }\n\n      const parentNode = parentNodeGetter.call(this); // Handle the case where a top level light DOM element is slotted into a synthetic\n      // shadow slot.\n\n      if (!isNull(parentNode) && isSyntheticSlotElement(parentNode)) {\n        return getNodeOwner(parentNode);\n      }\n\n      return parentNode;\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  parentElement: {\n    get() {\n      if (isNodeShadowed(this)) {\n        return parentElementGetterPatched.call(this);\n      }\n\n      const parentElement = parentElementGetter.call(this); // Handle the case where a top level light DOM element is slotted into a synthetic\n      // shadow slot.\n\n      if (!isNull(parentElement) && isSyntheticSlotElement(parentElement)) {\n        return getNodeOwner(parentElement);\n      }\n\n      return parentElement;\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  childNodes: {\n    get() {\n      if (hasMountedChildren(this)) {\n        return childNodesGetterPatched.call(this);\n      }\n\n      return childNodesGetter.call(this);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  hasChildNodes: {\n    value() {\n      if (hasMountedChildren(this)) {\n        return hasChildNodesPatched.call(this);\n      }\n\n      return hasChildNodes.call(this);\n    },\n\n    enumerable: true,\n    writable: true,\n    configurable: true\n  },\n  compareDocumentPosition: {\n    value(otherNode) {\n      // TODO [#1222]: remove global bypass\n      if (isGlobalPatchingSkipped(this)) {\n        return compareDocumentPosition.call(this, otherNode);\n      }\n\n      return compareDocumentPositionPatched.call(this, otherNode);\n    },\n\n    enumerable: true,\n    writable: true,\n    configurable: true\n  },\n  contains: {\n    value(otherNode) {\n      // 1. Node.prototype.contains() returns true if otherNode is an inclusive descendant\n      //    spec: https://dom.spec.whatwg.org/#dom-node-contains\n      // 2. This normalizes the behavior of this api across all browsers.\n      //    In IE11, a disconnected dom element without children invoking contains() on self, returns false\n      if (this === otherNode) {\n        return true;\n      }\n\n      if (!runtimeFlags.ENABLE_NODE_PATCH) {\n        if (otherNode == null) {\n          return false;\n        }\n\n        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {\n          return containsPatched.call(this, otherNode);\n        }\n\n        return contains.call(this, otherNode);\n      } // TODO [#1222]: remove global bypass\n\n\n      if (isGlobalPatchingSkipped(this)) {\n        return contains.call(this, otherNode);\n      }\n\n      return containsPatched.call(this, otherNode);\n    },\n\n    enumerable: true,\n    writable: true,\n    configurable: true\n  },\n  cloneNode: {\n    value(deep) {\n      if (!runtimeFlags.ENABLE_NODE_PATCH) {\n        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {\n          return cloneNodePatched.call(this, deep);\n        }\n\n        return cloneNode.call(this, deep);\n      }\n\n      if (isTrue(deep)) {\n        // TODO [#1222]: remove global bypass\n        if (isGlobalPatchingSkipped(this)) {\n          return cloneNode.call(this, deep);\n        }\n\n        return cloneNodePatched.call(this, deep);\n      }\n\n      return cloneNode.call(this, deep);\n    },\n\n    enumerable: true,\n    writable: true,\n    configurable: true\n  },\n  getRootNode: {\n    value: getRootNodePatched,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  },\n  isConnected: {\n    enumerable: true,\n    configurable: true,\n\n    get() {\n      return isConnected.call(this);\n    }\n\n  }\n});\nlet internalChildNodeAccessorFlag = false;\n/**\n * These 2 methods are providing a machinery to understand who is accessing the\n * .childNodes member property of a node. If it is used from inside the synthetic shadow\n * or from an external invoker. This helps to produce the right output in one very peculiar\n * case, the IE11 debugging comment for shadowRoot representation on the devtool.\n */\n\nfunction isExternalChildNodeAccessorFlagOn() {\n  return !internalChildNodeAccessorFlag;\n}\nconst getInternalChildNodes = process.env.NODE_ENV !== 'production' && isFalse(hasNativeSymbolSupport) ? function (node) {\n  internalChildNodeAccessorFlag = true;\n  let childNodes;\n  let error = null;\n\n  try {\n    childNodes = node.childNodes;\n  } catch (e) {\n    // childNodes accessor should never throw, but just in case!\n    error = e;\n  } finally {\n    internalChildNodeAccessorFlag = false;\n\n    if (!isNull(error)) {\n      // re-throwing after restoring the state machinery for setInternalChildNodeAccessorFlag\n      throw error; // eslint-disable-line no-unsafe-finally\n    }\n  }\n\n  return childNodes;\n} : function (node) {\n  return node.childNodes;\n}; // IE11 extra patches for wrong prototypes\n\nif (hasOwnProperty.call(HTMLElement.prototype, 'contains')) {\n  defineProperty(HTMLElement.prototype, 'contains', getOwnPropertyDescriptor(_Node.prototype, 'contains'));\n}\n\nif (hasOwnProperty.call(HTMLElement.prototype, 'parentElement')) {\n  defineProperty(HTMLElement.prototype, 'parentElement', getOwnPropertyDescriptor(_Node.prototype, 'parentElement'));\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Walk up the DOM tree, collecting all shadow roots plus the document root\nfunction getAllRootNodes(node) {\n    var _a;\n    const rootNodes = [];\n    let currentRootNode = node.getRootNode();\n    while (!isUndefined(currentRootNode)) {\n        rootNodes.push(currentRootNode);\n        currentRootNode = (_a = currentRootNode.host) === null || _a === void 0 ? void 0 : _a.getRootNode();\n    }\n    return rootNodes;\n}\n// Keep searching up the host tree until we find an element that is within the immediate shadow root\nconst findAncestorHostInImmediateShadowRoot = (rootNode, targetRootNode) => {\n    let host;\n    while (!isUndefined((host = rootNode.host))) {\n        const thisRootNode = host.getRootNode();\n        if (thisRootNode === targetRootNode) {\n            return host;\n        }\n        rootNode = thisRootNode;\n    }\n};\nfunction fauxElementsFromPoint(context, doc, left, top) {\n    const elements = elementsFromPoint.call(doc, left, top);\n    const result = [];\n    const rootNodes = getAllRootNodes(context);\n    // Filter the elements array to only include those elements that are in this shadow root or in one of its\n    // ancestor roots. This matches Chrome and Safari's implementation (but not Firefox's, which only includes\n    // elements in the immediate shadow root: https://crbug.com/1207863#c4).\n    if (!isNull(elements)) {\n        // can be null in IE https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint#browser_compatibility\n        for (let i = 0; i < elements.length; i++) {\n            const element = elements[i];\n            if (isSyntheticSlotElement(element)) {\n                continue;\n            }\n            const elementRootNode = element.getRootNode();\n            if (ArrayIndexOf.call(rootNodes, elementRootNode) !== -1) {\n                ArrayPush.call(result, element);\n                continue;\n            }\n            // In cases where the host element is not visible but its shadow descendants are, then\n            // we may get the shadow descendant instead of the host element here. (The\n            // browser doesn't know the difference in synthetic shadow DOM.)\n            // In native shadow DOM, however, elementsFromPoint would return the host but not\n            // the child. So we need to detect if this shadow element's host is accessible from\n            // the context's shadow root. Note we also need to be careful not to add the host\n            // multiple times.\n            const ancestorHost = findAncestorHostInImmediateShadowRoot(elementRootNode, rootNodes[0]);\n            if (!isUndefined(ancestorHost) &&\n                ArrayIndexOf.call(elements, ancestorHost) === -1 &&\n                ArrayIndexOf.call(result, ancestorHost) === -1) {\n                ArrayPush.call(result, ancestorHost);\n            }\n        }\n    }\n    return result;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst InternalSlot = new WeakMap();\nconst { createDocumentFragment } = document;\nfunction hasInternalSlot(root) {\n    return InternalSlot.has(root);\n}\nfunction getInternalSlot(root) {\n    const record = InternalSlot.get(root);\n    if (isUndefined(record)) {\n        throw new TypeError();\n    }\n    return record;\n}\ndefineProperty(_Node.prototype, KEY__SHADOW_RESOLVER, {\n    set(fn) {\n        if (isUndefined(fn))\n            return;\n        this[KEY__SHADOW_RESOLVER_PRIVATE] = fn;\n        // TODO [#1164]: temporary propagation of the key\n        setNodeOwnerKey(this, fn.nodeKey);\n    },\n    get() {\n        return this[KEY__SHADOW_RESOLVER_PRIVATE];\n    },\n    configurable: true,\n    enumerable: true,\n});\ndefineProperty(_globalThis, KEY__IS_NATIVE_SHADOW_ROOT_DEFINED, {\n    value: isNativeShadowRootDefined,\n});\nfunction getShadowRootResolver(node) {\n    return node[KEY__SHADOW_RESOLVER];\n}\nfunction setShadowRootResolver(node, fn) {\n    node[KEY__SHADOW_RESOLVER] = fn;\n}\nfunction isDelegatingFocus(host) {\n    return getInternalSlot(host).delegatesFocus;\n}\nfunction getHost(root) {\n    return getInternalSlot(root).host;\n}\nfunction getShadowRoot(elm) {\n    return getInternalSlot(elm).shadowRoot;\n}\n// Intentionally adding `Node` here in addition to `Element` since this check is harmless for nodes\n// and we can avoid having to cast the type before calling this method in a few places.\nfunction isSyntheticShadowHost(node) {\n    const shadowRootRecord = InternalSlot.get(node);\n    return !isUndefined(shadowRootRecord) && node === shadowRootRecord.host;\n}\nfunction isSyntheticShadowRoot(node) {\n    const shadowRootRecord = InternalSlot.get(node);\n    return !isUndefined(shadowRootRecord) && node === shadowRootRecord.shadowRoot;\n}\nlet uid = 0;\nfunction attachShadow(elm, options) {\n    if (InternalSlot.has(elm)) {\n        throw new Error(`Failed to execute 'attachShadow' on 'Element': Shadow root cannot be created on a host which already hosts a shadow tree.`);\n    }\n    const { mode, delegatesFocus } = options;\n    // creating a real fragment for shadowRoot instance\n    const doc = getOwnerDocument(elm);\n    const sr = createDocumentFragment.call(doc);\n    // creating shadow internal record\n    const record = {\n        mode,\n        delegatesFocus: !!delegatesFocus,\n        host: elm,\n        shadowRoot: sr,\n    };\n    InternalSlot.set(sr, record);\n    InternalSlot.set(elm, record);\n    const shadowResolver = () => sr;\n    const x = (shadowResolver.nodeKey = uid++);\n    setNodeKey(elm, x);\n    setShadowRootResolver(sr, shadowResolver);\n    // correcting the proto chain\n    setPrototypeOf(sr, SyntheticShadowRoot.prototype);\n    return sr;\n}\nconst SyntheticShadowRootDescriptors = {\n    constructor: {\n        writable: true,\n        configurable: true,\n        value: SyntheticShadowRoot,\n    },\n    toString: {\n        writable: true,\n        configurable: true,\n        value() {\n            return `[object ShadowRoot]`;\n        },\n    },\n    synthetic: {\n        writable: false,\n        enumerable: false,\n        configurable: false,\n        value: true,\n    },\n};\nconst ShadowRootDescriptors = {\n    activeElement: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            const host = getHost(this);\n            const doc = getOwnerDocument(host);\n            const activeElement = DocumentPrototypeActiveElement.call(doc);\n            if (isNull(activeElement)) {\n                return activeElement;\n            }\n            if ((compareDocumentPosition.call(host, activeElement) &\n                DOCUMENT_POSITION_CONTAINED_BY) ===\n                0) {\n                return null;\n            }\n            // activeElement must be child of the host and owned by it\n            let node = activeElement;\n            while (!isNodeOwnedBy(host, node)) {\n                // parentElement is always an element because we are talking up the tree knowing\n                // that it is a child of the host.\n                node = parentElementGetter.call(node);\n            }\n            // If we have a slot element here that means that we were dealing\n            // with an element that was passed to one of our slots. In this\n            // case, activeElement returns null.\n            if (isSlotElement(node)) {\n                return null;\n            }\n            return node;\n        },\n    },\n    delegatesFocus: {\n        configurable: true,\n        get() {\n            return getInternalSlot(this).delegatesFocus;\n        },\n    },\n    elementFromPoint: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(left, top) {\n            const host = getHost(this);\n            const doc = getOwnerDocument(host);\n            return fauxElementFromPoint(this, doc, left, top);\n        },\n    },\n    elementsFromPoint: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(left, top) {\n            const host = getHost(this);\n            const doc = getOwnerDocument(host);\n            return fauxElementsFromPoint(this, doc, left, top);\n        },\n    },\n    getSelection: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value() {\n            throw new Error('Disallowed method \"getSelection\" on ShadowRoot.');\n        },\n    },\n    host: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return getHost(this);\n        },\n    },\n    mode: {\n        configurable: true,\n        get() {\n            return getInternalSlot(this).mode;\n        },\n    },\n    styleSheets: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            throw new Error();\n        },\n    },\n};\nconst eventToShadowRootMap = new WeakMap();\nconst NodePatchDescriptors = {\n    insertBefore: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(newChild, refChild) {\n            insertBefore.call(getHost(this), newChild, refChild);\n            return newChild;\n        },\n    },\n    removeChild: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(oldChild) {\n            removeChild.call(getHost(this), oldChild);\n            return oldChild;\n        },\n    },\n    appendChild: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(newChild) {\n            appendChild.call(getHost(this), newChild);\n            return newChild;\n        },\n    },\n    replaceChild: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(newChild, oldChild) {\n            replaceChild.call(getHost(this), newChild, oldChild);\n            return oldChild;\n        },\n    },\n    addEventListener: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(type, listener, options) {\n            addShadowRootEventListener(this, type, listener);\n        },\n    },\n    dispatchEvent: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(evt) {\n            eventToShadowRootMap.set(evt, this);\n            // Typescript does not like it when you treat the `arguments` object as an array\n            // @ts-ignore type-mismatch\n            return dispatchEvent.apply(getHost(this), arguments);\n        },\n    },\n    removeEventListener: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(type, listener, options) {\n            removeShadowRootEventListener(this, type, listener);\n        },\n    },\n    baseURI: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return getHost(this).baseURI;\n        },\n    },\n    childNodes: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return createStaticNodeList(shadowRootChildNodes(this));\n        },\n    },\n    cloneNode: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value() {\n            throw new Error('Disallowed method \"cloneNode\" on ShadowRoot.');\n        },\n    },\n    compareDocumentPosition: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(otherNode) {\n            const host = getHost(this);\n            if (this === otherNode) {\n                // \"this\" and \"otherNode\" are the same shadow root.\n                return 0;\n            }\n            else if (this.contains(otherNode)) {\n                // \"otherNode\" belongs to the shadow tree where \"this\" is the shadow root.\n                return 20; // Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING\n            }\n            else if (compareDocumentPosition.call(host, otherNode) & DOCUMENT_POSITION_CONTAINED_BY) {\n                // \"otherNode\" is in a different shadow tree contained by the shadow tree where \"this\" is the shadow root.\n                return 37; // Node.DOCUMENT_POSITION_DISCONNECTED | Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\n            }\n            else {\n                // \"otherNode\" is in a different shadow tree that is not contained by the shadow tree where \"this\" is the shadow root.\n                return 35; // Node.DOCUMENT_POSITION_DISCONNECTED | Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\n            }\n        },\n    },\n    contains: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(otherNode) {\n            if (this === otherNode) {\n                return true;\n            }\n            const host = getHost(this);\n            // must be child of the host and owned by it.\n            return ((compareDocumentPosition.call(host, otherNode) & DOCUMENT_POSITION_CONTAINED_BY) !==\n                0 && isNodeOwnedBy(host, otherNode));\n        },\n    },\n    firstChild: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            const childNodes = getInternalChildNodes(this);\n            return childNodes[0] || null;\n        },\n    },\n    lastChild: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            const childNodes = getInternalChildNodes(this);\n            return childNodes[childNodes.length - 1] || null;\n        },\n    },\n    hasChildNodes: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value() {\n            const childNodes = getInternalChildNodes(this);\n            return childNodes.length > 0;\n        },\n    },\n    isConnected: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return isConnected.call(getHost(this));\n        },\n    },\n    nextSibling: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return null;\n        },\n    },\n    previousSibling: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return null;\n        },\n    },\n    nodeName: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return '#document-fragment';\n        },\n    },\n    nodeType: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return 11; // Node.DOCUMENT_FRAGMENT_NODE\n        },\n    },\n    nodeValue: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return null;\n        },\n    },\n    ownerDocument: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return getHost(this).ownerDocument;\n        },\n    },\n    parentElement: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return null;\n        },\n    },\n    parentNode: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return null;\n        },\n    },\n    textContent: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            const childNodes = getInternalChildNodes(this);\n            let textContent = '';\n            for (let i = 0, len = childNodes.length; i < len; i += 1) {\n                const currentNode = childNodes[i];\n                if (currentNode.nodeType !== COMMENT_NODE) {\n                    textContent += getTextContent(currentNode);\n                }\n            }\n            return textContent;\n        },\n        set(v) {\n            const host = getHost(this);\n            textContextSetter.call(host, v);\n        },\n    },\n    // Since the synthetic shadow root is a detached DocumentFragment, short-circuit the getRootNode behavior\n    getRootNode: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(options) {\n            return !isUndefined(options) && isTrue(options.composed)\n                ? getHost(this).getRootNode(options)\n                : this;\n        },\n    },\n};\nconst ElementPatchDescriptors = {\n    innerHTML: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            const childNodes = getInternalChildNodes(this);\n            let innerHTML = '';\n            for (let i = 0, len = childNodes.length; i < len; i += 1) {\n                innerHTML += getOuterHTML(childNodes[i]);\n            }\n            return innerHTML;\n        },\n        set(v) {\n            const host = getHost(this);\n            innerHTMLSetter.call(host, v);\n        },\n    },\n};\nconst ParentNodePatchDescriptors = {\n    childElementCount: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.children.length;\n        },\n    },\n    children: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return createStaticHTMLCollection(ArrayFilter.call(shadowRootChildNodes(this), (elm) => elm instanceof Element));\n        },\n    },\n    firstElementChild: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.children[0] || null;\n        },\n    },\n    lastElementChild: {\n        enumerable: true,\n        configurable: true,\n        get() {\n            const { children } = this;\n            return children.item(children.length - 1) || null;\n        },\n    },\n    getElementById: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value() {\n            throw new Error('Disallowed method \"getElementById\" on ShadowRoot.');\n        },\n    },\n    querySelector: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(selectors) {\n            return shadowRootQuerySelector(this, selectors);\n        },\n    },\n    querySelectorAll: {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value(selectors) {\n            return createStaticNodeList(shadowRootQuerySelectorAll(this, selectors));\n        },\n    },\n};\nassign(SyntheticShadowRootDescriptors, NodePatchDescriptors, ParentNodePatchDescriptors, ElementPatchDescriptors, ShadowRootDescriptors);\nfunction SyntheticShadowRoot() {\n    throw new TypeError('Illegal constructor');\n}\nSyntheticShadowRoot.prototype = create(DocumentFragment.prototype, SyntheticShadowRootDescriptors);\n// `this.shadowRoot instanceof ShadowRoot` should evaluate to true even for synthetic shadow\ndefineProperty(SyntheticShadowRoot, Symbol.hasInstance, {\n    value: function (object) {\n        // Technically we should walk up the entire prototype chain, but with SyntheticShadowRoot\n        // it's reasonable to assume that no one is doing any deep subclasses here.\n        return (isObject(object) &&\n            !isNull(object) &&\n            (isInstanceOfNativeShadowRoot(object) ||\n                getPrototypeOf(object) === SyntheticShadowRoot.prototype));\n    },\n});\n/**\n * This method is only intended to be used in non-production mode in IE11\n * and its role is to produce a 1-1 mapping between a shadowRoot instance\n * and a comment node that is intended to use to trick the IE11 DevTools\n * to show the content of the shadowRoot in the DOM Explorer.\n */\nfunction getIE11FakeShadowRootPlaceholder(host) {\n    const shadowRoot = getShadowRoot(host);\n    // @ts-ignore this $$placeholder$$ is not a security issue because you must\n    // have access to the shadowRoot in order to extract the fake node, which give\n    // you access to the same childNodes of the shadowRoot, so, who cares.\n    let c = shadowRoot.$$placeholder$$;\n    if (!isUndefined(c)) {\n        return c;\n    }\n    const doc = getOwnerDocument(host);\n    // @ts-ignore $$placeholder$$ is fine, read the node above.\n    c = shadowRoot.$$placeholder$$ = createComment.call(doc, '');\n    defineProperties(c, {\n        childNodes: {\n            get() {\n                return shadowRoot.childNodes;\n            },\n            enumerable: true,\n            configurable: true,\n        },\n        tagName: {\n            get() {\n                return `#shadow-root (${shadowRoot.mode})`;\n            },\n            enumerable: true,\n            configurable: true,\n        },\n    });\n    return c;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction pathComposer(startNode, composed) {\n    const composedPath = [];\n    let startRoot;\n    if (startNode instanceof Window) {\n        startRoot = startNode;\n    }\n    else if (startNode instanceof _Node) {\n        startRoot = startNode.getRootNode();\n    }\n    else {\n        return composedPath;\n    }\n    let current = startNode;\n    while (!isNull(current)) {\n        composedPath.push(current);\n        if (current instanceof Element || current instanceof Text) {\n            const assignedSlot = current.assignedSlot;\n            if (!isNull(assignedSlot)) {\n                current = assignedSlot;\n            }\n            else {\n                current = current.parentNode;\n            }\n        }\n        else if ((isSyntheticShadowRoot(current) || isInstanceOfNativeShadowRoot(current)) &&\n            (composed || current !== startRoot)) {\n            current = current.host;\n        }\n        else if (current instanceof _Node) {\n            current = current.parentNode;\n        }\n        else {\n            // could be Window\n            current = null;\n        }\n    }\n    let doc;\n    if (startNode instanceof Window) {\n        doc = startNode.document;\n    }\n    else {\n        doc = getOwnerDocument(startNode);\n    }\n    // event composedPath includes window when startNode's ownerRoot is document\n    if (composedPath[composedPath.length - 1] === doc) {\n        composedPath.push(window);\n    }\n    return composedPath;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nfunction retarget(refNode, path) {\n    if (isNull(refNode)) {\n        return null;\n    }\n    // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n    // shadow-including inclusive ancestor, return ANCESTOR.\n    const refNodePath = pathComposer(refNode, true);\n    const p$ = path;\n    for (let i = 0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n        ancestor = p$[i];\n        root = ancestor instanceof Window ? ancestor : ancestor.getRootNode();\n        if (root !== lastRoot) {\n            rootIdx = refNodePath.indexOf(root);\n            lastRoot = root;\n        }\n        if (!isSyntheticShadowRoot(root) || (!isUndefined(rootIdx) && rootIdx > -1)) {\n            return ancestor;\n        }\n    }\n    return null;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction fauxElementFromPoint(context, doc, left, top) {\n    const element = elementFromPoint.call(doc, left, top);\n    if (isNull(element)) {\n        return element;\n    }\n    return retarget(context, pathComposer(element, true));\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction elemFromPoint(left, top) {\n    return fauxElementFromPoint(this, this, left, top);\n}\nDocument.prototype.elementFromPoint = elemFromPoint;\nfunction elemsFromPoint(left, top) {\n    return fauxElementsFromPoint(this, this, left, top);\n}\nDocument.prototype.elementsFromPoint = elemsFromPoint;\n// Go until we reach to top of the LWC tree\ndefineProperty(Document.prototype, 'activeElement', {\n    get() {\n        let node = DocumentPrototypeActiveElement.call(this);\n        if (isNull(node)) {\n            return node;\n        }\n        while (!isUndefined(getNodeOwnerKey(node))) {\n            node = parentElementGetter.call(node);\n            if (isNull(node)) {\n                return null;\n            }\n        }\n        if (node.tagName === 'HTML') {\n            // IE 11. Active element should never be html element\n            node = this.body;\n        }\n        return node;\n    },\n    enumerable: true,\n    configurable: true,\n});\n// The following patched methods hide shadowed elements from global\n// traversing mechanisms. They are simplified for performance reasons to\n// filter by ownership and do not account for slotted elements. This\n// compromise is fine for our synthetic shadow dom because root elements\n// cannot have slotted elements.\n// Another compromise here is that all these traversing methods will return\n// static HTMLCollection or static NodeList. We decided that this compromise\n// is not a big problem considering the amount of code that is relying on\n// the liveliness of these results are rare.\ndefineProperty(Document.prototype, 'getElementById', {\n    value() {\n        const elm = getElementById.apply(this, ArraySlice.call(arguments));\n        if (isNull(elm)) {\n            return null;\n        }\n        // TODO [#1222]: remove global bypass\n        return isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm) ? elm : null;\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true,\n});\ndefineProperty(Document.prototype, 'querySelector', {\n    value() {\n        const elements = arrayFromCollection(querySelectorAll.apply(this, ArraySlice.call(arguments)));\n        const filtered = ArrayFind.call(elements, \n        // TODO [#1222]: remove global bypass\n        (elm) => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));\n        return !isUndefined(filtered) ? filtered : null;\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true,\n});\ndefineProperty(Document.prototype, 'querySelectorAll', {\n    value() {\n        const elements = arrayFromCollection(querySelectorAll.apply(this, ArraySlice.call(arguments)));\n        const filtered = ArrayFilter.call(elements, \n        // TODO [#1222]: remove global bypass\n        (elm) => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));\n        return createStaticNodeList(filtered);\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true,\n});\ndefineProperty(Document.prototype, 'getElementsByClassName', {\n    value() {\n        const elements = arrayFromCollection(getElementsByClassName.apply(this, ArraySlice.call(arguments)));\n        const filtered = ArrayFilter.call(elements, \n        // TODO [#1222]: remove global bypass\n        (elm) => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));\n        return createStaticHTMLCollection(filtered);\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true,\n});\ndefineProperty(Document.prototype, 'getElementsByTagName', {\n    value() {\n        const elements = arrayFromCollection(getElementsByTagName.apply(this, ArraySlice.call(arguments)));\n        const filtered = ArrayFilter.call(elements, \n        // TODO [#1222]: remove global bypass\n        (elm) => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));\n        return createStaticHTMLCollection(filtered);\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true,\n});\ndefineProperty(Document.prototype, 'getElementsByTagNameNS', {\n    value() {\n        const elements = arrayFromCollection(getElementsByTagNameNS.apply(this, ArraySlice.call(arguments)));\n        const filtered = ArrayFilter.call(elements, \n        // TODO [#1222]: remove global bypass\n        (elm) => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));\n        return createStaticHTMLCollection(filtered);\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true,\n});\ndefineProperty(\n// In Firefox v57 and lower, getElementsByName is defined on HTMLDocument.prototype\ngetOwnPropertyDescriptor(HTMLDocument.prototype, 'getElementsByName')\n    ? HTMLDocument.prototype\n    : Document.prototype, 'getElementsByName', {\n    value() {\n        const elements = arrayFromCollection(getElementsByName.apply(this, ArraySlice.call(arguments)));\n        const filtered = ArrayFilter.call(elements, \n        // TODO [#1222]: remove global bypass\n        (elm) => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(elm));\n        return createStaticNodeList(filtered);\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true,\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nObject.defineProperty(window, 'ShadowRoot', {\n    value: SyntheticShadowRoot,\n    configurable: true,\n    writable: true,\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst composedDescriptor = Object.getOwnPropertyDescriptor(Event.prototype, 'composed');\nfunction detect$3() {\n    if (!composedDescriptor) {\n        // No need to apply this polyfill if this client completely lacks\n        // support for the composed property.\n        return false;\n    }\n    // Assigning a throwaway click event here to suppress a ts error when we\n    // pass clickEvent into the composed getter below. The error is:\n    // [ts] Variable 'clickEvent' is used before being assigned.\n    let clickEvent = new Event('click');\n    const button = document.createElement('button');\n    button.addEventListener('click', (event) => (clickEvent = event));\n    button.click();\n    return !composedDescriptor.get.call(clickEvent);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst originalClickDescriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'click');\nfunction handleClick(event) {\n    Object.defineProperty(event, 'composed', {\n        configurable: true,\n        enumerable: true,\n        get() {\n            return true;\n        },\n    });\n}\nfunction apply$3() {\n    HTMLElement.prototype.click = function () {\n        addEventListener.call(this, 'click', handleClick);\n        try {\n            originalClickDescriptor.value.call(this);\n        }\n        finally {\n            removeEventListener.call(this, 'click', handleClick);\n        }\n    };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nif (detect$3()) {\n    apply$3();\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect$2() {\n    return new Event('test', { composed: true }).composed !== true;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction apply$2() {\n    // https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\n    const composedEvents = assign(create(null), {\n        beforeinput: 1,\n        blur: 1,\n        click: 1,\n        compositionend: 1,\n        compositionstart: 1,\n        compositionupdate: 1,\n        copy: 1,\n        cut: 1,\n        dblclick: 1,\n        DOMActivate: 1,\n        DOMFocusIn: 1,\n        DOMFocusOut: 1,\n        drag: 1,\n        dragend: 1,\n        dragenter: 1,\n        dragleave: 1,\n        dragover: 1,\n        dragstart: 1,\n        drop: 1,\n        focus: 1,\n        focusin: 1,\n        focusout: 1,\n        gotpointercapture: 1,\n        input: 1,\n        keydown: 1,\n        keypress: 1,\n        keyup: 1,\n        lostpointercapture: 1,\n        mousedown: 1,\n        mouseenter: 1,\n        mouseleave: 1,\n        mousemove: 1,\n        mouseout: 1,\n        mouseover: 1,\n        mouseup: 1,\n        paste: 1,\n        pointercancel: 1,\n        pointerdown: 1,\n        pointerenter: 1,\n        pointerleave: 1,\n        pointermove: 1,\n        pointerout: 1,\n        pointerover: 1,\n        pointerup: 1,\n        touchcancel: 1,\n        touchend: 1,\n        touchmove: 1,\n        touchstart: 1,\n        wheel: 1,\n    });\n    const EventConstructor = Event;\n    // Patch Event constructor to add the composed property on events created via new Event.\n    function PatchedEvent(type, eventInitDict) {\n        const event = new EventConstructor(type, eventInitDict);\n        const isComposed = !!(eventInitDict && eventInitDict.composed);\n        Object.defineProperties(event, {\n            composed: {\n                get() {\n                    return isComposed;\n                },\n                configurable: true,\n                enumerable: true,\n            },\n        });\n        return event;\n    }\n    PatchedEvent.prototype = EventConstructor.prototype;\n    PatchedEvent.AT_TARGET = EventConstructor.AT_TARGET;\n    PatchedEvent.BUBBLING_PHASE = EventConstructor.BUBBLING_PHASE;\n    PatchedEvent.CAPTURING_PHASE = EventConstructor.CAPTURING_PHASE;\n    PatchedEvent.NONE = EventConstructor.NONE;\n    window.Event = PatchedEvent;\n    // Patch the Event prototype to add the composed property on user agent dispatched event.\n    Object.defineProperties(Event.prototype, {\n        composed: {\n            get() {\n                const { type } = this;\n                return composedEvents[type] === 1;\n            },\n            configurable: true,\n            enumerable: true,\n        },\n    });\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nif (detect$2()) {\n    apply$2();\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst CustomEventConstructor = CustomEvent;\nfunction PatchedCustomEvent(type, eventInitDict) {\n    const event = new CustomEventConstructor(type, eventInitDict);\n    const isComposed = !!(eventInitDict && eventInitDict.composed);\n    Object.defineProperties(event, {\n        composed: {\n            get() {\n                return isComposed;\n            },\n            configurable: true,\n            enumerable: true,\n        },\n    });\n    return event;\n}\nPatchedCustomEvent.prototype = CustomEventConstructor.prototype;\nwindow.CustomEvent = PatchedCustomEvent;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nif (typeof ClipboardEvent !== 'undefined') {\n    const isComposedType = assign(create(null), {\n        copy: 1,\n        cut: 1,\n        paste: 1,\n    });\n    // Patch the prototype to override the composed property on user-agent dispatched events\n    defineProperties(ClipboardEvent.prototype, {\n        composed: {\n            get() {\n                const { type } = this;\n                return isComposedType[type] === 1;\n            },\n            configurable: true,\n            enumerable: true,\n        },\n    });\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect$1() {\n    // Note: when using this in mobile apps, we might have a DOM that does not support iframes.\n    return typeof HTMLIFrameElement !== 'undefined';\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction apply$1() {\n    // the iframe property descriptor for `contentWindow` should always be available, otherwise this method should never be called\n    const desc = getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentWindow');\n    const { get: originalGetter } = desc;\n    desc.get = function () {\n        const original = originalGetter.call(this);\n        // If the original iframe element is not a keyed node, then do not wrap it\n        if (isNull(original) || isUndefined(getNodeOwnerKey(this))) {\n            return original;\n        }\n        // only if the element is an iframe inside a shadowRoot, we care about this problem\n        // because in that case, the code that is accessing the iframe, is very likely code\n        // compiled with proxy-compat transformation. It is true that other code without those\n        // transformations might also access an iframe from within a shadowRoot, but in that,\n        // case, which is more rare, we still return the wrapper, and it should work the same,\n        // this part is just an optimization.\n        return wrapIframeWindow(original);\n    };\n    defineProperty(HTMLIFrameElement.prototype, 'contentWindow', desc);\n}\nfunction wrapIframeWindow(win) {\n    return {\n        addEventListener() {\n            // Typescript does not like it when you treat the `arguments` object as an array\n            // @ts-ignore type-mismatch\n            return win.addEventListener.apply(win, arguments);\n        },\n        blur() {\n            // Typescript does not like it when you treat the `arguments` object as an array\n            // @ts-ignore type-mismatch\n            return win.blur.apply(win, arguments);\n        },\n        close() {\n            // Typescript does not like it when you treat the `arguments` object as an array\n            // @ts-ignore type-mismatch\n            return win.close.apply(win, arguments);\n        },\n        focus() {\n            // Typescript does not like it when you treat the `arguments` object as an array\n            // @ts-ignore type-mismatch\n            return win.focus.apply(win, arguments);\n        },\n        postMessage() {\n            // Typescript does not like it when you treat the `arguments` object as an array\n            // @ts-ignore type-mismatch\n            return win.postMessage.apply(win, arguments);\n        },\n        removeEventListener() {\n            // Typescript does not like it when you treat the `arguments` object as an array\n            // @ts-ignore type-mismatch\n            return win.removeEventListener.apply(win, arguments);\n        },\n        get closed() {\n            return win.closed;\n        },\n        get frames() {\n            return win.frames;\n        },\n        get length() {\n            return win.length;\n        },\n        get location() {\n            return win.location;\n        },\n        set location(value) {\n            win.location = value;\n        },\n        get opener() {\n            return win.opener;\n        },\n        get parent() {\n            return win.parent;\n        },\n        get self() {\n            return win.self;\n        },\n        get top() {\n            return win.top;\n        },\n        get window() {\n            return win.window;\n        },\n    }; // this is limited\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nif (detect$1()) {\n    apply$1();\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst OriginalMutationObserver = MutationObserver;\nconst { disconnect: originalDisconnect, observe: originalObserve, takeRecords: originalTakeRecords, } = OriginalMutationObserver.prototype;\n// Internal fields to maintain relationships\nconst wrapperLookupField = '$$lwcObserverCallbackWrapper$$';\nconst observerLookupField = '$$lwcNodeObservers$$';\nconst observerToNodesMap = new WeakMap();\nfunction getNodeObservers(node) {\n    return node[observerLookupField];\n}\nfunction setNodeObservers(node, observers) {\n    node[observerLookupField] = observers;\n}\n/**\n * Retarget the mutation record's target value to its shadowRoot\n * @param {MutationRecord} originalRecord\n */\nfunction retargetMutationRecord(originalRecord) {\n    const { addedNodes, removedNodes, target, type } = originalRecord;\n    const retargetedRecord = create(MutationRecord.prototype);\n    defineProperties(retargetedRecord, {\n        addedNodes: {\n            get() {\n                return addedNodes;\n            },\n            enumerable: true,\n            configurable: true,\n        },\n        removedNodes: {\n            get() {\n                return removedNodes;\n            },\n            enumerable: true,\n            configurable: true,\n        },\n        type: {\n            get() {\n                return type;\n            },\n            enumerable: true,\n            configurable: true,\n        },\n        target: {\n            get() {\n                return target.shadowRoot;\n            },\n            enumerable: true,\n            configurable: true,\n        },\n    });\n    return retargetedRecord;\n}\n/**\n * Utility to identify if a target node is being observed by the given observer\n * Start at the current node, if the observer is registered to observe the current node, the mutation qualifies\n * @param {MutationObserver} observer\n * @param {Node} target\n */\nfunction isQualifiedObserver(observer, target) {\n    let parentNode = target;\n    while (!isNull(parentNode)) {\n        const parentNodeObservers = getNodeObservers(parentNode);\n        if (!isUndefined(parentNodeObservers) &&\n            (parentNodeObservers[0] === observer || // perf optimization to check for the first item is a match\n                ArrayIndexOf.call(parentNodeObservers, observer) !== -1)) {\n            return true;\n        }\n        parentNode = parentNode.parentNode;\n    }\n    return false;\n}\n/**\n * This function provides a shadow dom compliant filtered view of mutation records for a given observer.\n *\n * The key logic here is to determine if a given observer has been registered to observe any nodes\n * between the target node of a mutation record to the target's root node.\n * This function also retargets records when mutations occur directly under the shadow root\n * @param {MutationRecords[]} mutations\n * @param {MutationObserver} observer\n */\nfunction filterMutationRecords(mutations, observer) {\n    return ArrayReduce.call(mutations, (filteredSet, record) => {\n        const { target, addedNodes, removedNodes, type } = record;\n        // If target is an lwc host,\n        // Determine if the mutations affected the host or the shadowRoot\n        // Mutations affecting host: changes to slot content\n        // Mutations affecting shadowRoot: changes to template content\n        if (type === 'childList' && !isUndefined(getNodeKey(target))) {\n            // In case of added nodes, we can climb up the tree and determine eligibility\n            if (addedNodes.length > 0) {\n                // Optimization: Peek in and test one node to decide if the MutationRecord qualifies\n                // The remaining nodes in this MutationRecord will have the same ownerKey\n                const sampleNode = addedNodes[0];\n                if (isQualifiedObserver(observer, sampleNode)) {\n                    // If the target was being observed, then return record as-is\n                    // this will be the case for slot content\n                    const nodeObservers = getNodeObservers(target);\n                    if (nodeObservers &&\n                        (nodeObservers[0] === observer ||\n                            ArrayIndexOf.call(nodeObservers, observer) !== -1)) {\n                        ArrayPush.call(filteredSet, record);\n                    }\n                    else {\n                        // else, must be observing the shadowRoot\n                        ArrayPush.call(filteredSet, retargetMutationRecord(record));\n                    }\n                }\n            }\n            else {\n                // In the case of removed nodes, climbing the tree is not an option as the nodes are disconnected\n                // We can only check if either the host or shadow root was observed and qualify the record\n                const shadowRoot = target.shadowRoot;\n                const sampleNode = removedNodes[0];\n                if (getNodeNearestOwnerKey(target) === getNodeNearestOwnerKey(sampleNode) && // trickery: sampleNode is slot content\n                    isQualifiedObserver(observer, target) // use target as a close enough reference to climb up\n                ) {\n                    ArrayPush.call(filteredSet, record);\n                }\n                else if (shadowRoot) {\n                    const shadowRootObservers = getNodeObservers(shadowRoot);\n                    if (shadowRootObservers &&\n                        (shadowRootObservers[0] === observer ||\n                            ArrayIndexOf.call(shadowRootObservers, observer) !== -1)) {\n                        ArrayPush.call(filteredSet, retargetMutationRecord(record));\n                    }\n                }\n            }\n        }\n        else {\n            // Mutation happened under a root node(shadow root or document) and the decision is straighforward\n            // Ascend the tree starting from target and check if observer is qualified\n            if (isQualifiedObserver(observer, target)) {\n                ArrayPush.call(filteredSet, record);\n            }\n        }\n        return filteredSet;\n    }, []);\n}\nfunction getWrappedCallback(callback) {\n    let wrappedCallback = callback[wrapperLookupField];\n    if (isUndefined(wrappedCallback)) {\n        wrappedCallback = callback[wrapperLookupField] = (mutations, observer) => {\n            // Filter mutation records\n            const filteredRecords = filterMutationRecords(mutations, observer);\n            // If not records are eligible for the observer, do not invoke callback\n            if (filteredRecords.length === 0) {\n                return;\n            }\n            callback.call(observer, filteredRecords, observer);\n        };\n    }\n    return wrappedCallback;\n}\n/**\n * Patched MutationObserver constructor.\n * 1. Wrap the callback to filter out MutationRecords based on dom ownership\n * 2. Add a property field to track all observed targets of the observer instance\n * @param {MutationCallback} callback\n */\nfunction PatchedMutationObserver(callback) {\n    const wrappedCallback = getWrappedCallback(callback);\n    const observer = new OriginalMutationObserver(wrappedCallback);\n    return observer;\n}\nfunction patchedDisconnect() {\n    originalDisconnect.call(this);\n    // Clear the node to observer reference which is a strong references\n    const observedNodes = observerToNodesMap.get(this);\n    if (!isUndefined(observedNodes)) {\n        forEach.call(observedNodes, (observedNode) => {\n            const observers = observedNode[observerLookupField];\n            if (!isUndefined(observers)) {\n                const index = ArrayIndexOf.call(observers, this);\n                if (index !== -1) {\n                    ArraySplice.call(observers, index, 1);\n                }\n            }\n        });\n        observedNodes.length = 0;\n    }\n}\n/**\n * A single mutation observer can observe multiple nodes(target).\n * Maintain a list of all targets that the observer chooses to observe\n * @param {Node} target\n * @param {Object} options\n */\nfunction patchedObserve(target, options) {\n    let targetObservers = getNodeObservers(target);\n    // Maintain a list of all observers that want to observe a node\n    if (isUndefined(targetObservers)) {\n        targetObservers = [];\n        setNodeObservers(target, targetObservers);\n    }\n    // Same observer trying to observe the same node\n    if (ArrayIndexOf.call(targetObservers, this) === -1) {\n        ArrayPush.call(targetObservers, this);\n    } // else There is more bookkeeping to do here https://dom.spec.whatwg.org/#dom-mutationobserver-observe Step #7\n    // SyntheticShadowRoot instances are not actually a part of the DOM so observe the host instead.\n    if (isSyntheticShadowRoot(target)) {\n        target = target.host;\n    }\n    // maintain a list of all nodes observed by this observer\n    if (observerToNodesMap.has(this)) {\n        const observedNodes = observerToNodesMap.get(this);\n        if (ArrayIndexOf.call(observedNodes, target) === -1) {\n            ArrayPush.call(observedNodes, target);\n        }\n    }\n    else {\n        observerToNodesMap.set(this, [target]);\n    }\n    return originalObserve.call(this, target, options);\n}\n/**\n * Patch the takeRecords() api to filter MutationRecords based on the observed targets\n */\nfunction patchedTakeRecords() {\n    return filterMutationRecords(originalTakeRecords.call(this), this);\n}\nPatchedMutationObserver.prototype = OriginalMutationObserver.prototype;\nPatchedMutationObserver.prototype.disconnect = patchedDisconnect;\nPatchedMutationObserver.prototype.observe = patchedObserve;\nPatchedMutationObserver.prototype.takeRecords = patchedTakeRecords;\ndefineProperty(window, 'MutationObserver', {\n    value: PatchedMutationObserver,\n    configurable: true,\n    writable: true,\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction patchedAddEventListener$1(type, listener, optionsOrCapture) {\n    if (isSyntheticShadowHost(this)) {\n        // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n        return addCustomElementEventListener.apply(this, arguments);\n    }\n    if (arguments.length < 2) {\n        // Slow path, unlikely to be called frequently. We expect modern browsers to throw:\n        // https://googlechrome.github.io/samples/event-listeners-mandatory-arguments/\n        const args = ArraySlice.call(arguments);\n        if (args.length > 1) {\n            args[1] = getEventListenerWrapper(args[1]);\n        }\n        // Ignore types because we're passing through to native method\n        // @ts-ignore type-mismatch\n        return addEventListener.apply(this, args);\n    }\n    // Fast path. This function is optimized to avoid ArraySlice because addEventListener is called\n    // very frequently, and it provides a measurable perf boost to avoid so much array cloning.\n    const wrappedListener = getEventListenerWrapper(listener);\n    // The third argument is optional, so passing in `undefined` for `optionsOrCapture` gives capture=false\n    return addEventListener.call(this, type, wrappedListener, optionsOrCapture);\n}\nfunction patchedRemoveEventListener$1(_type, _listener, _optionsOrCapture) {\n    if (isSyntheticShadowHost(this)) {\n        // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n        return removeCustomElementEventListener.apply(this, arguments);\n    }\n    const args = ArraySlice.call(arguments);\n    if (arguments.length > 1) {\n        args[1] = getEventListenerWrapper(args[1]);\n    }\n    // Ignore types because we're passing through to native method\n    // @ts-ignore type-mismatch\n    removeEventListener.apply(this, args);\n    // Account for listeners that were added before this polyfill was applied\n    // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n    removeEventListener.apply(this, arguments);\n}\ndefineProperties(eventTargetPrototype, {\n    addEventListener: {\n        value: patchedAddEventListener$1,\n        enumerable: true,\n        writable: true,\n        configurable: true,\n    },\n    removeEventListener: {\n        value: patchedRemoveEventListener$1,\n        enumerable: true,\n        writable: true,\n        configurable: true,\n    },\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect() {\n    return typeof EventTarget === 'undefined';\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction patchedAddEventListener(_type, _listener, _options) {\n    if (arguments.length > 1) {\n        const args = ArraySlice.call(arguments);\n        args[1] = getEventListenerWrapper(args[1]);\n        // Ignore types because we're passing through to native method\n        // @ts-ignore type-mismatch\n        return windowAddEventListener.apply(this, args);\n    }\n    // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n    return windowAddEventListener.apply(this, arguments);\n}\nfunction patchedRemoveEventListener(_type, _listener, _options) {\n    if (arguments.length > 1) {\n        const args = ArraySlice.call(arguments);\n        args[1] = getEventListenerWrapper(args[1]);\n        // Ignore types because we're passing through to native method\n        // @ts-ignore type-mismatch\n        windowRemoveEventListener.apply(this, args);\n    }\n    // Account for listeners that were added before this polyfill was applied\n    // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n    windowRemoveEventListener.apply(this, arguments);\n}\nfunction apply() {\n    defineProperties(Window.prototype, {\n        addEventListener: {\n            value: patchedAddEventListener,\n            enumerable: true,\n            writable: true,\n            configurable: true,\n        },\n        removeEventListener: {\n            value: patchedRemoveEventListener,\n            enumerable: true,\n            writable: true,\n            configurable: true,\n        },\n    });\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nif (detect()) {\n    apply();\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction patchedCurrentTargetGetter() {\n    const currentTarget = eventCurrentTargetGetter.call(this);\n    if (isNull(currentTarget)) {\n        return null;\n    }\n    if (eventToContextMap.get(this) === 1 /* SHADOW_ROOT_LISTENER */) {\n        return getShadowRoot(currentTarget);\n    }\n    return currentTarget;\n}\nfunction patchedTargetGetter() {\n    const originalTarget = eventTargetGetter.call(this);\n    if (!(originalTarget instanceof _Node)) {\n        return originalTarget;\n    }\n    const doc = getOwnerDocument(originalTarget);\n    const composedPath = pathComposer(originalTarget, this.composed);\n    const originalCurrentTarget = eventCurrentTargetGetter.call(this);\n    // Handle cases where the currentTarget is null (for async events), and when an event has been\n    // added to Window\n    if (!(originalCurrentTarget instanceof _Node)) {\n        // TODO [#1511]: Special escape hatch to support legacy behavior. Should be fixed.\n        // If the event's target is being accessed async and originalTarget is not a keyed element, do not retarget\n        if (isNull(originalCurrentTarget) && isUndefined(getNodeOwnerKey(originalTarget))) {\n            return originalTarget;\n        }\n        return retarget(doc, composedPath);\n    }\n    else if (originalCurrentTarget === doc || originalCurrentTarget === doc.body) {\n        // TODO [#1530]: If currentTarget is document or document.body (Third party libraries that have global event listeners)\n        // and the originalTarget is not a keyed element, do not retarget\n        if (isUndefined(getNodeOwnerKey(originalTarget))) {\n            return originalTarget;\n        }\n        return retarget(doc, composedPath);\n    }\n    let actualCurrentTarget = originalCurrentTarget;\n    let actualPath = composedPath;\n    // Address the possibility that `currentTarget` is a shadow root\n    if (isSyntheticShadowHost(originalCurrentTarget)) {\n        const context = eventToContextMap.get(this);\n        if (context === 1 /* SHADOW_ROOT_LISTENER */) {\n            actualCurrentTarget = getShadowRoot(originalCurrentTarget);\n        }\n    }\n    // Address the possibility that `target` is a shadow root\n    if (isSyntheticShadowHost(originalTarget) && eventToShadowRootMap.has(this)) {\n        actualPath = pathComposer(getShadowRoot(originalTarget), this.composed);\n    }\n    return retarget(actualCurrentTarget, actualPath);\n}\nfunction patchedComposedPathValue() {\n    const originalTarget = eventTargetGetter.call(this);\n    // Account for events with targets that are not instances of Node (e.g., when a readystatechange\n    // handler is listening on an instance of XMLHttpRequest).\n    if (!(originalTarget instanceof _Node)) {\n        return [];\n    }\n    // If the original target is inside a native shadow root, then just call the native\n    // composePath() method. The event is already retargeted and this causes our composedPath()\n    // polyfill to compute the wrong value. This is only an issue when you have a native web\n    // component inside an LWC component (see test in same commit) but this scenario is unlikely\n    // because we don't yet support that. Workaround specifically for W-9846457. Mixed mode solution\n    // will likely be more involved.\n    const hasShadowRoot = Boolean(originalTarget.shadowRoot);\n    const hasSyntheticShadowRootAttached = hasInternalSlot(originalTarget);\n    if (hasShadowRoot && !hasSyntheticShadowRootAttached) {\n        return composedPath.call(this);\n    }\n    const originalCurrentTarget = eventCurrentTargetGetter.call(this);\n    // If the event has completed propagation, the composedPath should be an empty array.\n    if (isNull(originalCurrentTarget)) {\n        return [];\n    }\n    // Address the possibility that `target` is a shadow root\n    let actualTarget = originalTarget;\n    if (isSyntheticShadowHost(originalTarget) && eventToShadowRootMap.has(this)) {\n        actualTarget = getShadowRoot(originalTarget);\n    }\n    return pathComposer(actualTarget, this.composed);\n}\ndefineProperties(Event.prototype, {\n    target: {\n        get: patchedTargetGetter,\n        enumerable: true,\n        configurable: true,\n    },\n    currentTarget: {\n        get: patchedCurrentTargetGetter,\n        enumerable: true,\n        configurable: true,\n    },\n    composedPath: {\n        value: patchedComposedPathValue,\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    },\n    // Non-standard but widely supported for backwards-compatibility\n    srcElement: {\n        get: patchedTargetGetter,\n        enumerable: true,\n        configurable: true,\n    },\n    // Non-standard but implemented in Chrome and continues to exist for backwards-compatibility\n    // https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/dom/events/event.idl;l=58?q=event.idl&ss=chromium\n    path: {\n        get: patchedComposedPathValue,\n        enumerable: true,\n        configurable: true,\n    },\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction retargetRelatedTarget(Ctor) {\n    const relatedTargetGetter = getOwnPropertyDescriptor(Ctor.prototype, 'relatedTarget')\n        .get;\n    defineProperty(Ctor.prototype, 'relatedTarget', {\n        get() {\n            const relatedTarget = relatedTargetGetter.call(this);\n            if (isNull(relatedTarget)) {\n                return null;\n            }\n            if (!(relatedTarget instanceof _Node) || !isNodeShadowed(relatedTarget)) {\n                return relatedTarget;\n            }\n            let pointOfReference = eventCurrentTargetGetter.call(this);\n            if (isNull(pointOfReference)) {\n                pointOfReference = getOwnerDocument(relatedTarget);\n            }\n            return retarget(pointOfReference, pathComposer(relatedTarget, true));\n        },\n        enumerable: true,\n        configurable: true,\n    });\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nretargetRelatedTarget(FocusEvent);\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nretargetRelatedTarget(MouseEvent);\n\n/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst assignedSlotGetter = hasOwnProperty.call(Text.prototype, 'assignedSlot')\n    ? getOwnPropertyDescriptor(Text.prototype, 'assignedSlot').get\n    : () => null;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// We can use a single observer without having to worry about leaking because\n// \"Registered observers in a node’s registered observer list have a weak\n// reference to the node.\"\n// https://dom.spec.whatwg.org/#garbage-collection\nlet observer;\nconst observerConfig = { childList: true };\nconst SlotChangeKey = new WeakMap();\nfunction initSlotObserver() {\n    return new MO((mutations) => {\n        const slots = [];\n        forEach.call(mutations, (mutation) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.invariant(mutation.type === 'childList', `Invalid mutation type: ${mutation.type}. This mutation handler for slots should only handle \"childList\" mutations.`);\n            }\n            const { target: slot } = mutation;\n            if (ArrayIndexOf.call(slots, slot) === -1) {\n                ArrayPush.call(slots, slot);\n                dispatchEvent.call(slot, new CustomEvent('slotchange'));\n            }\n        });\n    });\n}\nfunction getFilteredSlotFlattenNodes(slot) {\n    const childNodes = arrayFromCollection(childNodesGetter.call(slot));\n    // Typescript is inferring the wrong function type for this particular\n    // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n    // @ts-ignore type-mismatch\n    return ArrayReduce.call(childNodes, (seed, child) => {\n        if (child instanceof Element && isSlotElement(child)) {\n            ArrayPush.apply(seed, getFilteredSlotFlattenNodes(child));\n        }\n        else {\n            ArrayPush.call(seed, child);\n        }\n        return seed;\n    }, []);\n}\nfunction assignedSlotGetterPatched() {\n    const parentNode = parentNodeGetter.call(this);\n    // use original assignedSlot if parent has a native shdow root\n    if (parentNode instanceof Element) {\n        const sr = shadowRootGetter.call(parentNode);\n        if (isInstanceOfNativeShadowRoot(sr)) {\n            if (this instanceof Text) {\n                return assignedSlotGetter.call(this);\n            }\n            return assignedSlotGetter$1.call(this);\n        }\n    }\n    /**\n     * The node is assigned to a slot if:\n     *  - it has a parent and its parent is a slot element\n     *  - and if the slot owner key is different than the node owner key.\n     *\n     * When the slot and the slotted node are 2 different shadow trees, the owner keys will be\n     * different. When the slot is in a shadow tree and the slotted content is a light DOM node,\n     * the light DOM node doesn't have an owner key and therefor the slot owner key will be\n     * different than the node owner key (always `undefined`).\n     */\n    if (!isNull(parentNode) &&\n        isSlotElement(parentNode) &&\n        getNodeOwnerKey(parentNode) !== getNodeOwnerKey(this)) {\n        return parentNode;\n    }\n    return null;\n}\ndefineProperties(HTMLSlotElement.prototype, {\n    addEventListener: {\n        value(type, listener, options) {\n            // super.addEventListener - but that doesn't work with typescript\n            HTMLElement.prototype.addEventListener.call(this, type, listener, options);\n            if (type === 'slotchange' && !SlotChangeKey.get(this)) {\n                SlotChangeKey.set(this, true);\n                if (!observer) {\n                    observer = initSlotObserver();\n                }\n                MutationObserverObserve.call(observer, this, observerConfig);\n            }\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    },\n    assignedElements: {\n        value(options) {\n            if (isNodeShadowed(this)) {\n                const flatten = !isUndefined(options) && isTrue(options.flatten);\n                const nodes = flatten\n                    ? getFilteredSlotFlattenNodes(this)\n                    : getFilteredSlotAssignedNodes(this);\n                return ArrayFilter.call(nodes, (node) => node instanceof Element);\n            }\n            else {\n                return assignedElements.apply(this, ArraySlice.call(arguments));\n            }\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    },\n    assignedNodes: {\n        value(options) {\n            if (isNodeShadowed(this)) {\n                const flatten = !isUndefined(options) && isTrue(options.flatten);\n                return flatten\n                    ? getFilteredSlotFlattenNodes(this)\n                    : getFilteredSlotAssignedNodes(this);\n            }\n            else {\n                return assignedNodes.apply(this, ArraySlice.call(arguments));\n            }\n        },\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    },\n    name: {\n        get() {\n            const name = getAttribute.call(this, 'name');\n            return isNull(name) ? '' : name;\n        },\n        set(value) {\n            setAttribute.call(this, 'name', value);\n        },\n        enumerable: true,\n        configurable: true,\n    },\n    childNodes: {\n        get() {\n            if (isNodeShadowed(this)) {\n                const owner = getNodeOwner(this);\n                const childNodes = isNull(owner)\n                    ? []\n                    : getAllMatches(owner, getFilteredChildNodes(this));\n                return createStaticNodeList(childNodes);\n            }\n            return childNodesGetter.call(this);\n        },\n        enumerable: true,\n        configurable: true,\n    },\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Non-deep-traversing patches: this descriptor map includes all descriptors that\n// do not five access to nodes beyond the immediate children.\ndefineProperties(Text.prototype, {\n    assignedSlot: {\n        get: assignedSlotGetterPatched,\n        enumerable: true,\n        configurable: true,\n    },\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This methods filters out elements that are not in the same shadow root of context.\n * It does not enforce shadow dom semantics if $context is not managed by LWC\n */\nfunction getNonPatchedFilteredArrayOfNodes(context, unfilteredNodes) {\n    let filtered;\n    const ownerKey = getNodeOwnerKey(context);\n    // a node inside a shadow.\n    if (!isUndefined(ownerKey)) {\n        if (isSyntheticShadowHost(context)) {\n            // element with shadowRoot attached\n            const owner = getNodeOwner(context);\n            if (isNull(owner)) {\n                filtered = [];\n            }\n            else if (getNodeKey(context)) {\n                // it is a custom element, and we should then filter by slotted elements\n                filtered = getAllSlottedMatches(context, unfilteredNodes);\n            }\n            else {\n                // regular element, we should then filter by ownership\n                filtered = getAllMatches(owner, unfilteredNodes);\n            }\n        }\n        else {\n            // context is handled by lwc, using getNodeNearestOwnerKey to include manually inserted elements in the same shadow.\n            filtered = ArrayFilter.call(unfilteredNodes, (elm) => getNodeNearestOwnerKey(elm) === ownerKey);\n        }\n    }\n    else if (context instanceof HTMLBodyElement) {\n        // `context` is document.body which is already patched.\n        filtered = ArrayFilter.call(unfilteredNodes, \n        // TODO [#1222]: remove global bypass\n        (elm) => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(context));\n    }\n    else {\n        // `context` is outside the lwc boundary, return unfiltered list.\n        filtered = ArraySlice.call(unfilteredNodes);\n    }\n    return filtered;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction innerHTMLGetterPatched() {\n  const childNodes = getInternalChildNodes(this);\n  let innerHTML = '';\n\n  for (let i = 0, len = childNodes.length; i < len; i += 1) {\n    innerHTML += getOuterHTML(childNodes[i]);\n  }\n\n  return innerHTML;\n}\n\nfunction outerHTMLGetterPatched() {\n  return getOuterHTML(this);\n}\n\nfunction attachShadowPatched(options) {\n  // To retain native behavior of the API, provide synthetic shadowRoot only when specified\n  if (options[KEY__SYNTHETIC_MODE]) {\n    return attachShadow(this, options);\n  }\n\n  return attachShadow$1.call(this, options);\n}\n\nfunction shadowRootGetterPatched() {\n  if (isSyntheticShadowHost(this)) {\n    const shadow = getShadowRoot(this);\n\n    if (shadow.mode === 'open') {\n      return shadow;\n    }\n  }\n\n  return shadowRootGetter.call(this);\n}\n\nfunction childrenGetterPatched() {\n  const owner = getNodeOwner(this);\n  const childNodes = isNull(owner) ? [] : getAllMatches(owner, getFilteredChildNodes(this));\n  return createStaticHTMLCollection(ArrayFilter.call(childNodes, node => node instanceof Element));\n}\n\nfunction childElementCountGetterPatched() {\n  return this.children.length;\n}\n\nfunction firstElementChildGetterPatched() {\n  return this.children[0] || null;\n}\n\nfunction lastElementChildGetterPatched() {\n  const {\n    children\n  } = this;\n  return children.item(children.length - 1) || null;\n} // Non-deep-traversing patches: this descriptor map includes all descriptors that\n// do not five access to nodes beyond the immediate children.\n\n\ndefineProperties(Element.prototype, {\n  innerHTML: {\n    get() {\n      if (!runtimeFlags.ENABLE_ELEMENT_PATCH) {\n        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {\n          return innerHTMLGetterPatched.call(this);\n        }\n\n        return innerHTMLGetter.call(this);\n      } // TODO [#1222]: remove global bypass\n\n\n      if (isGlobalPatchingSkipped(this)) {\n        return innerHTMLGetter.call(this);\n      }\n\n      return innerHTMLGetterPatched.call(this);\n    },\n\n    set(v) {\n      innerHTMLSetter.call(this, v);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  outerHTML: {\n    get() {\n      if (!runtimeFlags.ENABLE_ELEMENT_PATCH) {\n        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {\n          return outerHTMLGetterPatched.call(this);\n        }\n\n        return outerHTMLGetter.call(this);\n      } // TODO [#1222]: remove global bypass\n\n\n      if (isGlobalPatchingSkipped(this)) {\n        return outerHTMLGetter.call(this);\n      }\n\n      return outerHTMLGetterPatched.call(this);\n    },\n\n    set(v) {\n      outerHTMLSetter.call(this, v);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  attachShadow: {\n    value: attachShadowPatched,\n    enumerable: true,\n    writable: true,\n    configurable: true\n  },\n  shadowRoot: {\n    get: shadowRootGetterPatched,\n    enumerable: true,\n    configurable: true\n  },\n  // patched in HTMLElement if exists (IE11 is the one off here)\n  children: {\n    get() {\n      if (hasMountedChildren(this)) {\n        return childrenGetterPatched.call(this);\n      }\n\n      return childrenGetter.call(this);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  childElementCount: {\n    get() {\n      if (hasMountedChildren(this)) {\n        return childElementCountGetterPatched.call(this);\n      }\n\n      return childElementCountGetter.call(this);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  firstElementChild: {\n    get() {\n      if (hasMountedChildren(this)) {\n        return firstElementChildGetterPatched.call(this);\n      }\n\n      return firstElementChildGetter.call(this);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  lastElementChild: {\n    get() {\n      if (hasMountedChildren(this)) {\n        return lastElementChildGetterPatched.call(this);\n      }\n\n      return lastElementChildGetter.call(this);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  assignedSlot: {\n    get: assignedSlotGetterPatched,\n    enumerable: true,\n    configurable: true\n  }\n}); // IE11 extra patches for wrong prototypes\n\nif (hasOwnProperty.call(HTMLElement.prototype, 'innerHTML')) {\n  defineProperty(HTMLElement.prototype, 'innerHTML', getOwnPropertyDescriptor(Element.prototype, 'innerHTML'));\n}\n\nif (hasOwnProperty.call(HTMLElement.prototype, 'outerHTML')) {\n  defineProperty(HTMLElement.prototype, 'outerHTML', getOwnPropertyDescriptor(Element.prototype, 'outerHTML'));\n}\n\nif (hasOwnProperty.call(HTMLElement.prototype, 'children')) {\n  defineProperty(HTMLElement.prototype, 'children', getOwnPropertyDescriptor(Element.prototype, 'children'));\n} // Deep-traversing patches from this point on:\n\n\nfunction querySelectorPatched() {\n  const nodeList = arrayFromCollection(querySelectorAll$1.apply(this, ArraySlice.call(arguments)));\n\n  if (isSyntheticShadowHost(this)) {\n    // element with shadowRoot attached\n    const owner = getNodeOwner(this);\n\n    if (isNull(owner)) {\n      return null;\n    } else if (getNodeKey(this)) {\n      // it is a custom element, and we should then filter by slotted elements\n      return getFirstSlottedMatch(this, nodeList);\n    } else {\n      // regular element, we should then filter by ownership\n      return getFirstMatch(owner, nodeList);\n    }\n  } else if (isNodeShadowed(this)) {\n    // element inside a shadowRoot\n    const ownerKey = getNodeOwnerKey(this);\n\n    if (!isUndefined(ownerKey)) {\n      // `this` is handled by lwc, using getNodeNearestOwnerKey to include manually inserted elements in the same shadow.\n      const elm = ArrayFind.call(nodeList, elm => getNodeNearestOwnerKey(elm) === ownerKey);\n      return isUndefined(elm) ? null : elm;\n    } else {\n      if (!runtimeFlags.ENABLE_NODE_LIST_PATCH) {\n        // `this` is a manually inserted element inside a shadowRoot, return the first element.\n        return nodeList.length === 0 ? null : nodeList[0];\n      } // Element is inside a shadow but we dont know which one. Use the\n      // \"nearest\" owner key to filter by ownership.\n\n\n      const contextNearestOwnerKey = getNodeNearestOwnerKey(this);\n      const elm = ArrayFind.call(nodeList, elm => getNodeNearestOwnerKey(elm) === contextNearestOwnerKey);\n      return isUndefined(elm) ? null : elm;\n    }\n  } else {\n    if (!runtimeFlags.ENABLE_NODE_LIST_PATCH) {\n      if (!(this instanceof HTMLBodyElement)) {\n        const elm = nodeList[0];\n        return isUndefined(elm) ? null : elm;\n      }\n    } // element belonging to the document\n\n\n    const elm = ArrayFind.call(nodeList, // TODO [#1222]: remove global bypass\n    elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(this));\n    return isUndefined(elm) ? null : elm;\n  }\n}\n\nfunction getFilteredArrayOfNodes(context, unfilteredNodes, shadowDomSemantic) {\n  let filtered;\n\n  if (isSyntheticShadowHost(context)) {\n    // element with shadowRoot attached\n    const owner = getNodeOwner(context);\n\n    if (isNull(owner)) {\n      filtered = [];\n    } else if (getNodeKey(context)) {\n      // it is a custom element, and we should then filter by slotted elements\n      filtered = getAllSlottedMatches(context, unfilteredNodes);\n    } else {\n      // regular element, we should then filter by ownership\n      filtered = getAllMatches(owner, unfilteredNodes);\n    }\n  } else if (isNodeShadowed(context)) {\n    // element inside a shadowRoot\n    const ownerKey = getNodeOwnerKey(context);\n\n    if (!isUndefined(ownerKey)) {\n      // context is handled by lwc, using getNodeNearestOwnerKey to include manually inserted elements in the same shadow.\n      filtered = ArrayFilter.call(unfilteredNodes, elm => getNodeNearestOwnerKey(elm) === ownerKey);\n    } else if (shadowDomSemantic === 1\n    /* Enabled */\n    ) {\n      // context is inside a shadow, we dont know which one.\n      const contextNearestOwnerKey = getNodeNearestOwnerKey(context);\n      filtered = ArrayFilter.call(unfilteredNodes, elm => getNodeNearestOwnerKey(elm) === contextNearestOwnerKey);\n    } else {\n      // context is manually inserted without lwc:dom-manual and ShadowDomSemantics is off, return everything\n      filtered = ArraySlice.call(unfilteredNodes);\n    }\n  } else {\n    if (context instanceof HTMLBodyElement || shadowDomSemantic === 1\n    /* Enabled */\n    ) {\n      // `context` is document.body or element belonging to the document with the patch enabled\n      filtered = ArrayFilter.call(unfilteredNodes, // TODO [#1222]: remove global bypass\n      elm => isUndefined(getNodeOwnerKey(elm)) || isGlobalPatchingSkipped(context));\n    } else {\n      // `context` is outside the lwc boundary and patch is not enabled.\n      filtered = ArraySlice.call(unfilteredNodes);\n    }\n  }\n\n  return filtered;\n} // The following patched methods hide shadowed elements from global\n// traversing mechanisms. They are simplified for performance reasons to\n// filter by ownership and do not account for slotted elements. This\n// compromise is fine for our synthetic shadow dom because root elements\n// cannot have slotted elements.\n// Another compromise here is that all these traversing methods will return\n// static HTMLCollection or static NodeList. We decided that this compromise\n// is not a big problem considering the amount of code that is relying on\n// the liveliness of these results are rare.\n\n\ndefineProperties(Element.prototype, {\n  querySelector: {\n    value: querySelectorPatched,\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  querySelectorAll: {\n    value() {\n      const nodeList = arrayFromCollection(querySelectorAll$1.apply(this, ArraySlice.call(arguments)));\n\n      if (!runtimeFlags.ENABLE_NODE_LIST_PATCH) {\n        const filteredResults = getFilteredArrayOfNodes(this, nodeList, 0\n        /* Disabled */\n        );\n        return createStaticNodeList(filteredResults);\n      }\n\n      return createStaticNodeList(getFilteredArrayOfNodes(this, nodeList, 1\n      /* Enabled */\n      ));\n    },\n\n    writable: true,\n    enumerable: true,\n    configurable: true\n  }\n}); // The following APIs are used directly by Jest internally so we avoid patching them during testing.\n\nif (process.env.NODE_ENV !== 'test') {\n  defineProperties(Element.prototype, {\n    getElementsByClassName: {\n      value() {\n        const elements = arrayFromCollection(getElementsByClassName$1.apply(this, ArraySlice.call(arguments)));\n\n        if (!runtimeFlags.ENABLE_HTML_COLLECTIONS_PATCH) {\n          return createStaticHTMLCollection(getNonPatchedFilteredArrayOfNodes(this, elements));\n        }\n\n        const filteredResults = getFilteredArrayOfNodes(this, elements, 1\n        /* Enabled */\n        );\n        return createStaticHTMLCollection(filteredResults);\n      },\n\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    getElementsByTagName: {\n      value() {\n        const elements = arrayFromCollection(getElementsByTagName$1.apply(this, ArraySlice.call(arguments)));\n\n        if (!runtimeFlags.ENABLE_HTML_COLLECTIONS_PATCH) {\n          return createStaticHTMLCollection(getNonPatchedFilteredArrayOfNodes(this, elements));\n        }\n\n        const filteredResults = getFilteredArrayOfNodes(this, elements, 1\n        /* Enabled */\n        );\n        return createStaticHTMLCollection(filteredResults);\n      },\n\n      writable: true,\n      enumerable: true,\n      configurable: true\n    },\n    getElementsByTagNameNS: {\n      value() {\n        const elements = arrayFromCollection(getElementsByTagNameNS$1.apply(this, ArraySlice.call(arguments)));\n\n        if (!runtimeFlags.ENABLE_HTML_COLLECTIONS_PATCH) {\n          return createStaticHTMLCollection(getNonPatchedFilteredArrayOfNodes(this, elements));\n        }\n\n        const filteredResults = getFilteredArrayOfNodes(this, elements, 1\n        /* Enabled */\n        );\n        return createStaticHTMLCollection(filteredResults);\n      },\n\n      writable: true,\n      enumerable: true,\n      configurable: true\n    }\n  });\n} // IE11 extra patches for wrong prototypes\n\n\nif (hasOwnProperty.call(HTMLElement.prototype, 'getElementsByClassName')) {\n  defineProperty(HTMLElement.prototype, 'getElementsByClassName', getOwnPropertyDescriptor(Element.prototype, 'getElementsByClassName'));\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst FocusableSelector = `\n    [contenteditable],\n    [tabindex],\n    a[href],\n    area[href],\n    audio[controls],\n    button,\n    iframe,\n    input,\n    select,\n    textarea,\n    video[controls]\n`;\nconst formElementTagNames = new Set(['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA']);\nfunction filterSequentiallyFocusableElements(elements) {\n    return elements.filter((element) => {\n        if (hasAttribute.call(element, 'tabindex')) {\n            // Even though LWC only supports tabindex values of 0 or -1,\n            // passing through elements with tabindex=\"0\" is a tighter criteria\n            // than filtering out elements based on tabindex=\"-1\".\n            return getAttribute.call(element, 'tabindex') === '0';\n        }\n        if (formElementTagNames.has(tagNameGetter.call(element))) {\n            return !hasAttribute.call(element, 'disabled');\n        }\n        return true;\n    });\n}\nconst DidAddMouseEventListeners = new WeakMap();\n// Due to browser differences, it is impossible to know what is focusable until\n// we actually try to focus it. We need to refactor our focus delegation logic\n// to verify whether or not the target was actually focused instead of trying\n// to predict focusability like we do here.\nfunction isVisible(element) {\n    const { width, height } = getBoundingClientRect.call(element);\n    const noZeroSize = width > 0 || height > 0;\n    // The area element can be 0x0 and focusable. Hardcoding this is not ideal\n    // but it will minimize changes in the current behavior.\n    const isAreaElement = element.tagName === 'AREA';\n    return (noZeroSize || isAreaElement) && getComputedStyle(element).visibility !== 'hidden';\n}\n// This function based on https://allyjs.io/data-tables/focusable.html\n// It won't catch everything, but should be good enough\n// There are a lot of edge cases here that we can't realistically handle\n// Determines if a particular element is tabbable, as opposed to simply focusable\nfunction isTabbable(element) {\n    if (isSyntheticShadowHost(element) && isDelegatingFocus(element)) {\n        return false;\n    }\n    return matches.call(element, FocusableSelector) && isVisible(element);\n}\nfunction hostElementFocus() {\n    const _rootNode = this.getRootNode();\n    if (_rootNode === this) {\n        // We invoke the focus() method even if the host is disconnected in order to eliminate\n        // observable differences for component authors between synthetic and native.\n        const focusable = querySelector.call(this, FocusableSelector);\n        if (!isNull(focusable)) {\n            // @ts-ignore type-mismatch\n            focusable.focus.apply(focusable, arguments);\n        }\n        return;\n    }\n    // If the root node is not the host element then it's either the document or a shadow root.\n    const rootNode = _rootNode;\n    if (rootNode.activeElement === this) {\n        // The focused element should not change if the focus method is invoked\n        // on the shadow-including ancestor of the currently focused element.\n        return;\n    }\n    const focusables = arrayFromCollection(querySelectorAll$1.call(this, FocusableSelector));\n    let didFocus = false;\n    while (!didFocus && focusables.length !== 0) {\n        const focusable = focusables.shift();\n        // @ts-ignore type-mismatch\n        focusable.focus.apply(focusable, arguments);\n        // Get the root node of the current focusable in case it was slotted.\n        const currentRootNode = focusable.getRootNode();\n        didFocus = currentRootNode.activeElement === focusable;\n    }\n}\nfunction getTabbableSegments(host) {\n    const doc = getOwnerDocument(host);\n    const all = filterSequentiallyFocusableElements(arrayFromCollection(querySelectorAll.call(doc, FocusableSelector)));\n    const inner = filterSequentiallyFocusableElements(arrayFromCollection(querySelectorAll$1.call(host, FocusableSelector)));\n    if (process.env.NODE_ENV !== 'production') {\n        assert.invariant(getAttribute.call(host, 'tabindex') === '-1' || isDelegatingFocus(host), `The focusin event is only relevant when the tabIndex property is -1 on the host.`);\n    }\n    const firstChild = inner[0];\n    const lastChild = inner[inner.length - 1];\n    const hostIndex = ArrayIndexOf.call(all, host);\n    // Host element can show up in our \"previous\" section if its tabindex is 0\n    // We want to filter that out here\n    const firstChildIndex = hostIndex > -1 ? hostIndex : ArrayIndexOf.call(all, firstChild);\n    // Account for an empty inner list\n    const lastChildIndex = inner.length === 0 ? firstChildIndex + 1 : ArrayIndexOf.call(all, lastChild) + 1;\n    const prev = ArraySlice.call(all, 0, firstChildIndex);\n    const next = ArraySlice.call(all, lastChildIndex);\n    return {\n        prev,\n        inner,\n        next,\n    };\n}\nfunction getActiveElement(host) {\n    const doc = getOwnerDocument(host);\n    const activeElement = DocumentPrototypeActiveElement.call(doc);\n    if (isNull(activeElement)) {\n        return activeElement;\n    }\n    // activeElement must be child of the host and owned by it\n    return (compareDocumentPosition.call(host, activeElement) & DOCUMENT_POSITION_CONTAINED_BY) !==\n        0\n        ? activeElement\n        : null;\n}\nfunction relatedTargetPosition(host, relatedTarget) {\n    // assert: target must be child of host\n    const pos = compareDocumentPosition.call(host, relatedTarget);\n    if (pos & DOCUMENT_POSITION_CONTAINED_BY) {\n        // focus remains inside the host\n        return 0;\n    }\n    else if (pos & DOCUMENT_POSITION_PRECEDING) {\n        // focus is coming from above\n        return 1;\n    }\n    else if (pos & DOCUMENT_POSITION_FOLLOWING) {\n        // focus is coming from below\n        return 2;\n    }\n    // we don't know what's going on.\n    return -1;\n}\nfunction muteEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n}\nfunction muteFocusEventsDuringExecution(win, func) {\n    windowAddEventListener.call(win, 'focusin', muteEvent, true);\n    windowAddEventListener.call(win, 'focusout', muteEvent, true);\n    func();\n    windowRemoveEventListener.call(win, 'focusin', muteEvent, true);\n    windowRemoveEventListener.call(win, 'focusout', muteEvent, true);\n}\nfunction focusOnNextOrBlur(segment, target, relatedTarget) {\n    const win = getOwnerWindow(relatedTarget);\n    const next = getNextTabbable(segment, relatedTarget);\n    if (isNull(next)) {\n        // nothing to focus on, blur to invalidate the operation\n        muteFocusEventsDuringExecution(win, () => {\n            target.blur();\n        });\n    }\n    else {\n        muteFocusEventsDuringExecution(win, () => {\n            next.focus();\n        });\n    }\n}\nlet letBrowserHandleFocus = false;\nfunction disableKeyboardFocusNavigationRoutines() {\n    letBrowserHandleFocus = true;\n}\nfunction enableKeyboardFocusNavigationRoutines() {\n    letBrowserHandleFocus = false;\n}\nfunction isKeyboardFocusNavigationRoutineEnabled() {\n    return !letBrowserHandleFocus;\n}\nfunction skipHostHandler(event) {\n    if (letBrowserHandleFocus) {\n        return;\n    }\n    const host = eventCurrentTargetGetter.call(event);\n    const target = eventTargetGetter.call(event);\n    // If the host delegating focus with tabindex=0 is not the target, we know\n    // that the event was dispatched on a descendant node of the host. This\n    // means the focus is coming from below and we don't need to do anything.\n    if (host !== target) {\n        // Focus is coming from above\n        return;\n    }\n    const relatedTarget = focusEventRelatedTargetGetter.call(event);\n    if (isNull(relatedTarget)) {\n        // If relatedTarget is null, the user is most likely tabbing into the document from the\n        // browser chrome. We could probably deduce whether focus is coming in from the top or the\n        // bottom by comparing the position of the target to all tabbable elements. This is an edge\n        // case and only comes up if the custom element is the first or last tabbable element in the\n        // document.\n        return;\n    }\n    const segments = getTabbableSegments(host);\n    const position = relatedTargetPosition(host, relatedTarget);\n    if (position === 1) {\n        // Focus is coming from above\n        const findTabbableElms = isTabbableFrom.bind(null, host.getRootNode());\n        const first = ArrayFind.call(segments.inner, findTabbableElms);\n        if (!isUndefined(first)) {\n            const win = getOwnerWindow(first);\n            muteFocusEventsDuringExecution(win, () => {\n                first.focus();\n            });\n        }\n        else {\n            focusOnNextOrBlur(segments.next, target, relatedTarget);\n        }\n    }\n    else if (host === target) {\n        // Host is receiving focus from below, either from its shadow or from a sibling\n        focusOnNextOrBlur(ArrayReverse.call(segments.prev), target, relatedTarget);\n    }\n}\nfunction skipShadowHandler(event) {\n    if (letBrowserHandleFocus) {\n        return;\n    }\n    const relatedTarget = focusEventRelatedTargetGetter.call(event);\n    if (isNull(relatedTarget)) {\n        // If relatedTarget is null, the user is most likely tabbing into the document from the\n        // browser chrome. We could probably deduce whether focus is coming in from the top or the\n        // bottom by comparing the position of the target to all tabbable elements. This is an edge\n        // case and only comes up if the custom element is the first or last tabbable element in the\n        // document.\n        return;\n    }\n    const host = eventCurrentTargetGetter.call(event);\n    const segments = getTabbableSegments(host);\n    if (ArrayIndexOf.call(segments.inner, relatedTarget) !== -1) {\n        // If relatedTarget is contained by the host's subtree we can assume that the user is\n        // tabbing between elements inside of the shadow. Do nothing.\n        return;\n    }\n    const target = eventTargetGetter.call(event);\n    // Determine where the focus is coming from (Tab or Shift+Tab)\n    const position = relatedTargetPosition(host, relatedTarget);\n    if (position === 1) {\n        // Focus is coming from above\n        focusOnNextOrBlur(segments.next, target, relatedTarget);\n    }\n    if (position === 2) {\n        // Focus is coming from below\n        focusOnNextOrBlur(ArrayReverse.call(segments.prev), target, relatedTarget);\n    }\n}\n// Use this function to determine whether you can start from one root and end up\n// at another element via tabbing.\nfunction isTabbableFrom(fromRoot, toElm) {\n    if (!isTabbable(toElm)) {\n        return false;\n    }\n    const ownerDocument = getOwnerDocument(toElm);\n    let root = toElm.getRootNode();\n    while (root !== ownerDocument && root !== fromRoot) {\n        const sr = root;\n        const host = sr.host;\n        if (getAttribute.call(host, 'tabindex') === '-1') {\n            return false;\n        }\n        root = host && host.getRootNode();\n    }\n    return true;\n}\nfunction getNextTabbable(tabbables, relatedTarget) {\n    const len = tabbables.length;\n    if (len > 0) {\n        for (let i = 0; i < len; i += 1) {\n            const next = tabbables[i];\n            if (isTabbableFrom(relatedTarget.getRootNode(), next)) {\n                return next;\n            }\n        }\n    }\n    return null;\n}\n// Skips the host element\nfunction handleFocus(elm) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.invariant(isDelegatingFocus(elm), `Invalid attempt to handle focus event for ${toString(elm)}. ${toString(elm)} should have delegates focus true, but is not delegating focus`);\n    }\n    bindDocumentMousedownMouseupHandlers(elm);\n    // Unbind any focusin listeners we may have going on\n    ignoreFocusIn(elm);\n    addEventListener.call(elm, 'focusin', skipHostHandler, true);\n}\nfunction ignoreFocus(elm) {\n    removeEventListener.call(elm, 'focusin', skipHostHandler, true);\n}\nfunction bindDocumentMousedownMouseupHandlers(elm) {\n    const ownerDocument = getOwnerDocument(elm);\n    if (!DidAddMouseEventListeners.get(ownerDocument)) {\n        DidAddMouseEventListeners.set(ownerDocument, true);\n        addEventListener.call(ownerDocument, 'mousedown', disableKeyboardFocusNavigationRoutines, true);\n        addEventListener.call(ownerDocument, 'mouseup', () => {\n            // We schedule this as an async task in the mouseup handler (as\n            // opposed to the mousedown handler) because we want to guarantee\n            // that it will never run before the focusin handler:\n            //\n            // Click form element   | Click form element label\n            // ==================================================\n            // mousedown            | mousedown\n            // FOCUSIN              | mousedown-setTimeout\n            // mousedown-setTimeout | mouseup\n            // mouseup              | FOCUSIN\n            // mouseup-setTimeout   | mouseup-setTimeout\n            setTimeout(enableKeyboardFocusNavigationRoutines);\n        }, true);\n        // [W-7824445] If the element is draggable, the mousedown event is dispatched before the\n        // element is starting to be dragged, which disable the keyboard focus navigation routine.\n        // But by specification, the mouseup event is never dispatched once the element is dropped.\n        //\n        // For all draggable element, we need to add an event listener to re-enable the keyboard\n        // navigation routine after dragging starts.\n        addEventListener.call(ownerDocument, 'dragstart', enableKeyboardFocusNavigationRoutines, true);\n    }\n}\n// Skips the shadow tree\nfunction handleFocusIn(elm) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.invariant(tabIndexGetter.call(elm) === -1, `Invalid attempt to handle focus in  ${toString(elm)}. ${toString(elm)} should have tabIndex -1, but has tabIndex ${tabIndexGetter.call(elm)}`);\n    }\n    bindDocumentMousedownMouseupHandlers(elm);\n    // Unbind any focus listeners we may have going on\n    ignoreFocus(elm);\n    // This focusin listener is to catch focusin events from keyboard interactions\n    // A better solution would perhaps be to listen for keydown events, but\n    // the keydown event happens on whatever element already has focus (or no element\n    // at all in the case of the location bar. So, instead we have to assume that focusin\n    // without a mousedown means keyboard navigation\n    addEventListener.call(elm, 'focusin', skipShadowHandler, true);\n}\nfunction ignoreFocusIn(elm) {\n    removeEventListener.call(elm, 'focusin', skipShadowHandler, true);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getElementComputedStyle(element) {\n    const win = getOwnerWindow(element);\n    return windowGetComputedStyle.call(win, element);\n}\nfunction getWindowSelection(node) {\n    const win = getOwnerWindow(node);\n    return windowGetSelection.call(win);\n}\nfunction nodeIsBeingRendered(nodeComputedStyle) {\n    return nodeComputedStyle.visibility === 'visible' && nodeComputedStyle.display !== 'none';\n}\nfunction getSelectionState(element) {\n    const win = getOwnerWindow(element);\n    const selection = getWindowSelection(element);\n    if (selection === null) {\n        return null;\n    }\n    const ranges = [];\n    for (let i = 0; i < selection.rangeCount; i++) {\n        ranges.push(selection.getRangeAt(i));\n    }\n    const state = {\n        element,\n        onselect: win.onselect,\n        onselectstart: win.onselectstart,\n        onselectionchange: win.onselectionchange,\n        ranges,\n    };\n    win.onselect = null;\n    win.onselectstart = null;\n    win.onselectionchange = null;\n    return state;\n}\nfunction restoreSelectionState(state) {\n    if (state === null) {\n        return;\n    }\n    const { element, onselect, onselectstart, onselectionchange, ranges } = state;\n    const win = getOwnerWindow(element);\n    const selection = getWindowSelection(element);\n    selection.removeAllRanges();\n    for (let i = 0; i < ranges.length; i++) {\n        selection.addRange(ranges[i]);\n    }\n    win.onselect = onselect;\n    win.onselectstart = onselectstart;\n    win.onselectionchange = onselectionchange;\n}\n/**\n * Gets the \"innerText\" of a text node using the Selection API\n *\n * NOTE: For performance reasons, since this function will be called multiple times while calculating the innerText of\n *       an element, it does not restore the current selection.\n */\nfunction getTextNodeInnerText(textNode) {\n    const selection = getWindowSelection(textNode);\n    if (selection === null) {\n        return textNode.textContent || '';\n    }\n    const range = document.createRange();\n    range.selectNodeContents(textNode);\n    const domRect = range.getBoundingClientRect();\n    if (domRect.height <= 0 || domRect.width <= 0) {\n        // the text node is not rendered\n        return '';\n    }\n    // Needed to remove non rendered characters from the text node.\n    selection.removeAllRanges();\n    selection.addRange(range);\n    const selectionText = selection.toString();\n    // The textNode is visible, but it may not be selectable. When the text is not selectable,\n    // textContent is the nearest approximation to innerText.\n    return selectionText ? selectionText : textNode.textContent || '';\n}\nconst nodeIsElement = (node) => node.nodeType === ELEMENT_NODE;\nconst nodeIsText = (node) => node.nodeType === TEXT_NODE;\n/**\n * Spec: https://html.spec.whatwg.org/multipage/dom.html#inner-text-collection-steps\n * One spec implementation: https://github.com/servo/servo/blob/721271dcd3c20db5ca8cf146e2b5907647afb4d6/components/layout/query.rs#L1132\n */\nfunction innerTextCollectionSteps(node) {\n    const items = [];\n    if (nodeIsElement(node)) {\n        const { tagName } = node;\n        const computedStyle = getElementComputedStyle(node);\n        if (tagName === 'OPTION') {\n            // For options, is hard to get the \"rendered\" text, let's use the original getter.\n            return [1, innerTextGetter.call(node), 1];\n        }\n        else if (tagName === 'TEXTAREA') {\n            return [];\n        }\n        else {\n            const childNodes = node.childNodes;\n            for (let i = 0, n = childNodes.length; i < n; i++) {\n                ArrayPush.apply(items, innerTextCollectionSteps(childNodes[i]));\n            }\n        }\n        if (!nodeIsBeingRendered(computedStyle)) {\n            if (tagName === 'SELECT' || tagName === 'DATALIST') {\n                // the select is either: .visibility != 'visible' or .display === hidden, therefore this select should\n                // not display any value.\n                return [];\n            }\n            return items;\n        }\n        if (tagName === 'BR') {\n            items.push('\\u{000A}' /* line feed */);\n        }\n        const { display } = computedStyle;\n        if (display === 'table-cell') {\n            // omitting case: and node's CSS box is not the last 'table-cell' box of its enclosing 'table-row' box\n            items.push('\\u{0009}' /* tab */);\n        }\n        if (display === 'table-row') {\n            // omitting case: and node's CSS box is not the last 'table-row' box of the nearest ancestor 'table' box\n            items.push('\\u{000A}' /* line feed */);\n        }\n        if (tagName === 'P') {\n            items.unshift(2);\n            items.push(2);\n        }\n        if (display === 'block' ||\n            display === 'table-caption' ||\n            display === 'flex' ||\n            display === 'table') {\n            items.unshift(1);\n            items.push(1);\n        }\n    }\n    else if (nodeIsText(node)) {\n        items.push(getTextNodeInnerText(node));\n    }\n    return items;\n}\n/**\n * InnerText getter spec: https://html.spec.whatwg.org/multipage/dom.html#the-innertext-idl-attribute\n *\n * One spec implementation: https://github.com/servo/servo/blob/721271dcd3c20db5ca8cf146e2b5907647afb4d6/components/layout/query.rs#L1087\n */\nfunction getInnerText(element) {\n    const thisComputedStyle = getElementComputedStyle(element);\n    if (!nodeIsBeingRendered(thisComputedStyle)) {\n        return getTextContent(element) || '';\n    }\n    const selectionState = getSelectionState(element);\n    const results = [];\n    const childNodes = element.childNodes;\n    for (let i = 0, n = childNodes.length; i < n; i++) {\n        ArrayPush.apply(results, innerTextCollectionSteps(childNodes[i]));\n    }\n    restoreSelectionState(selectionState);\n    let elementInnerText = '';\n    let maxReqLineBreakCount = 0;\n    for (let i = 0, n = results.length; i < n; i++) {\n        const item = results[i];\n        if (typeof item === 'string') {\n            if (maxReqLineBreakCount > 0) {\n                for (let j = 0; j < maxReqLineBreakCount; j++) {\n                    elementInnerText += '\\u{000A}';\n                }\n                maxReqLineBreakCount = 0;\n            }\n            if (item.length > 0) {\n                elementInnerText += item;\n            }\n        }\n        else {\n            if (elementInnerText.length == 0) {\n                // Remove required line break count at the start.\n                continue;\n            }\n            // Store the count if it's the max of this run,\n            // but it may be ignored if no text item is found afterwards,\n            // which means that these are consecutive line breaks at the end.\n            if (item > maxReqLineBreakCount) {\n                maxReqLineBreakCount = item;\n            }\n        }\n    }\n    return elementInnerText;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst {\n  blur,\n  focus\n} = HTMLElement.prototype;\n/**\n * This method only applies to elements with a shadow attached to them\n */\n\nfunction tabIndexGetterPatched() {\n  if (isDelegatingFocus(this) && isFalse(hasAttribute.call(this, 'tabindex'))) {\n    // this covers the case where the default tabindex should be 0 because the\n    // custom element is delegating its focus\n    return 0;\n  }\n\n  return tabIndexGetter.call(this);\n}\n/**\n * This method only applies to elements with a shadow attached to them\n */\n\n\nfunction tabIndexSetterPatched(value) {\n  // This tabIndex setter might be confusing unless it is understood that HTML\n  // elements have default tabIndex property values. Natively focusable elements have\n  // a default tabIndex value of 0 and all other elements have a default tabIndex\n  // value of -1. For example, the tabIndex property value is -1 for both <x-foo> and\n  // <x-foo tabindex=\"-1\">, but our delegatesFocus polyfill should only kick in for\n  // the latter case when the value of the tabindex attribute is -1.\n  const delegatesFocus = isDelegatingFocus(this); // Record the state of things before invoking component setter.\n\n  const prevValue = tabIndexGetter.call(this);\n  const prevHasAttr = hasAttribute.call(this, 'tabindex');\n  tabIndexSetter.call(this, value); // Record the state of things after invoking component setter.\n\n  const currValue = tabIndexGetter.call(this);\n  const currHasAttr = hasAttribute.call(this, 'tabindex');\n  const didValueChange = prevValue !== currValue; // If the tabindex attribute is initially rendered, we can assume that this setter has\n  // previously executed and a listener has been added. We must remove that listener if\n  // the tabIndex property value has changed or if the component no longer renders a\n  // tabindex attribute.\n\n  if (prevHasAttr && (didValueChange || isFalse(currHasAttr))) {\n    if (prevValue === -1) {\n      ignoreFocusIn(this);\n    }\n\n    if (prevValue === 0 && delegatesFocus) {\n      ignoreFocus(this);\n    }\n  } // If a tabindex attribute was not rendered after invoking its setter, it means the\n  // component is taking control. Do nothing.\n\n\n  if (isFalse(currHasAttr)) {\n    return;\n  } // If the tabindex attribute is initially rendered, we can assume that this setter has\n  // previously executed and a listener has been added. If the tabindex attribute is still\n  // rendered after invoking the setter AND the tabIndex property value has not changed,\n  // we don't need to do any work.\n\n\n  if (prevHasAttr && currHasAttr && isFalse(didValueChange)) {\n    return;\n  } // At this point we know that a tabindex attribute was rendered after invoking the\n  // setter and that either:\n  // 1) This is the first time this setter is being invoked.\n  // 2) This is not the first time this setter is being invoked and the value is changing.\n  // We need to add the appropriate listeners in either case.\n\n\n  if (currValue === -1) {\n    // Add the magic to skip the shadow tree\n    handleFocusIn(this);\n  }\n\n  if (currValue === 0 && delegatesFocus) {\n    // Add the magic to skip the host element\n    handleFocus(this);\n  }\n}\n/**\n * This method only applies to elements with a shadow attached to them\n */\n\n\nfunction blurPatched() {\n  if (isDelegatingFocus(this)) {\n    const currentActiveElement = getActiveElement(this);\n\n    if (!isNull(currentActiveElement)) {\n      // if there is an active element, blur it (intentionally using the dot notation in case the user defines the blur routine)\n      currentActiveElement.blur();\n      return;\n    }\n  }\n\n  return blur.call(this);\n}\n\nfunction focusPatched() {\n  // Save enabled state\n  const originallyEnabled = isKeyboardFocusNavigationRoutineEnabled(); // Change state by disabling if originally enabled\n\n  if (originallyEnabled) {\n    disableKeyboardFocusNavigationRoutines();\n  }\n\n  if (isSyntheticShadowHost(this) && isDelegatingFocus(this)) {\n    hostElementFocus.call(this);\n    return;\n  } // Typescript does not like it when you treat the `arguments` object as an array\n  // @ts-ignore type-mismatch\n\n\n  focus.apply(this, arguments); // Restore state by enabling if originally enabled\n\n  if (originallyEnabled) {\n    enableKeyboardFocusNavigationRoutines();\n  }\n} // Non-deep-traversing patches: this descriptor map includes all descriptors that\n// do not five access to nodes beyond the immediate children.\n\n\ndefineProperties(HTMLElement.prototype, {\n  tabIndex: {\n    get() {\n      if (isSyntheticShadowHost(this)) {\n        return tabIndexGetterPatched.call(this);\n      }\n\n      return tabIndexGetter.call(this);\n    },\n\n    set(v) {\n      if (isSyntheticShadowHost(this)) {\n        return tabIndexSetterPatched.call(this, v);\n      }\n\n      return tabIndexSetter.call(this, v);\n    },\n\n    enumerable: true,\n    configurable: true\n  },\n  blur: {\n    value() {\n      if (isSyntheticShadowHost(this)) {\n        return blurPatched.call(this);\n      }\n\n      blur.call(this);\n    },\n\n    enumerable: true,\n    writable: true,\n    configurable: true\n  },\n  focus: {\n    value() {\n      // Typescript does not like it when you treat the `arguments` object as an array\n      // @ts-ignore type-mismatch\n      focusPatched.apply(this, arguments);\n    },\n\n    enumerable: true,\n    writable: true,\n    configurable: true\n  }\n}); // Note: In JSDOM innerText is not implemented: https://github.com/jsdom/jsdom/issues/1245\n\nif (innerTextGetter !== null && innerTextSetter !== null) {\n  defineProperty(HTMLElement.prototype, 'innerText', {\n    get() {\n      if (!runtimeFlags.ENABLE_INNER_OUTER_TEXT_PATCH) {\n        return innerTextGetter.call(this);\n      }\n\n      if (!runtimeFlags.ENABLE_ELEMENT_PATCH) {\n        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {\n          return getInnerText(this);\n        }\n\n        return innerTextGetter.call(this);\n      } // TODO [#1222]: remove global bypass\n\n\n      if (isGlobalPatchingSkipped(this)) {\n        return innerTextGetter.call(this);\n      }\n\n      return getInnerText(this);\n    },\n\n    set(v) {\n      innerTextSetter.call(this, v);\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n} // Note: Firefox does not have outerText, https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/outerText\n\n\nif (outerTextGetter !== null && outerTextSetter !== null) {\n  // From https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/outerText :\n  // HTMLElement.outerText is a non-standard property. As a getter, it returns the same value as Node.innerText.\n  // As a setter, it removes the current node and replaces it with the given text.\n  defineProperty(HTMLElement.prototype, 'outerText', {\n    get() {\n      if (!runtimeFlags.ENABLE_INNER_OUTER_TEXT_PATCH) {\n        return outerTextGetter.call(this);\n      }\n\n      if (!runtimeFlags.ENABLE_ELEMENT_PATCH) {\n        if (isNodeShadowed(this) || isSyntheticShadowHost(this)) {\n          return getInnerText(this);\n        }\n\n        return outerTextGetter.call(this);\n      } // TODO [#1222]: remove global bypass\n\n\n      if (isGlobalPatchingSkipped(this)) {\n        return outerTextGetter.call(this);\n      }\n\n      return getInnerText(this);\n    },\n\n    set(v) {\n      // Invoking the `outerText` setter on a host element should trigger its disconnection, but until we merge node reactions, it will not work.\n      // We could reimplement the outerText setter in JavaScript ([blink implementation](https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/html/html_element.cc;l=841-879;drc=6e8b402a6231405b753919029c9027404325ea00;bpv=0;bpt=1))\n      // but the benefits don't worth the efforts.\n      outerTextSetter.call(this, v);\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getShadowToken(node) {\n    return node[KEY__SHADOW_TOKEN];\n}\nfunction setShadowToken(node, shadowToken) {\n    node[KEY__SHADOW_TOKEN] = shadowToken;\n}\n/**\n * Patching Element.prototype.$shadowToken$ to mark elements a portal:\n *\n *  - we use a property to allow engines to set a custom attribute that should be\n *    placed into the element to sandbox the css rules defined for the template.\n *\n *  - this custom attribute must be unique.\n *\n **/\ndefineProperty(Element.prototype, KEY__SHADOW_TOKEN, {\n    set(shadowToken) {\n        const oldShadowToken = this[KEY__SHADOW_TOKEN_PRIVATE];\n        if (!isUndefined(oldShadowToken) && oldShadowToken !== shadowToken) {\n            removeAttribute.call(this, oldShadowToken);\n        }\n        if (!isUndefined(shadowToken)) {\n            setAttribute.call(this, shadowToken, '');\n        }\n        this[KEY__SHADOW_TOKEN_PRIVATE] = shadowToken;\n    },\n    get() {\n        return this[KEY__SHADOW_TOKEN_PRIVATE];\n    },\n    configurable: true,\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst DomManualPrivateKey = '$$DomManualKey$$';\n// Resolver function used when a node is removed from within a portal\nconst DocumentResolverFn = function () { };\n// We can use a single observer without having to worry about leaking because\n// \"Registered observers in a node’s registered observer list have a weak\n// reference to the node.\"\n// https://dom.spec.whatwg.org/#garbage-collection\nlet portalObserver;\nconst portalObserverConfig = {\n    childList: true,\n};\nfunction adoptChildNode(node, fn, shadowToken) {\n    const previousNodeShadowResolver = getShadowRootResolver(node);\n    if (previousNodeShadowResolver === fn) {\n        return; // nothing to do here, it is already correctly patched\n    }\n    setShadowRootResolver(node, fn);\n    if (node instanceof Element) {\n        setShadowToken(node, shadowToken);\n        if (isSyntheticShadowHost(node)) {\n            // Root LWC elements can't get content slotted into them, therefore we don't observe their children.\n            return;\n        }\n        if (isUndefined(previousNodeShadowResolver)) {\n            // we only care about Element without shadowResolver (no MO.observe has been called)\n            MutationObserverObserve.call(portalObserver, node, portalObserverConfig);\n        }\n        // recursively patching all children as well\n        const childNodes = childNodesGetter.call(node);\n        for (let i = 0, len = childNodes.length; i < len; i += 1) {\n            adoptChildNode(childNodes[i], fn, shadowToken);\n        }\n    }\n}\nfunction initPortalObserver() {\n    return new MO((mutations) => {\n        forEach.call(mutations, (mutation) => {\n            /**\n             * This routine will process all nodes added or removed from elm (which is marked as a portal)\n             * When adding a node to the portal element, we should add the ownership.\n             * When removing a node from the portal element, this ownership should be removed.\n             *\n             * There is some special cases in which MutationObserver may call with stacked mutations (the same node\n             * will be in addedNodes and removedNodes) or with false positives (a node that is removed and re-appended\n             * in the same tick) for those cases, we cover by checking that the node is contained\n             * (or not in the case of removal) by the element.\n             */\n            const { target: elm, addedNodes, removedNodes } = mutation;\n            // the target of the mutation should always have a ShadowRootResolver attached to it\n            const fn = getShadowRootResolver(elm);\n            const shadowToken = getShadowToken(elm);\n            // Process removals first to handle the case where an element is removed and reinserted\n            for (let i = 0, len = removedNodes.length; i < len; i += 1) {\n                const node = removedNodes[i];\n                if (!(compareDocumentPosition.call(elm, node) & _Node.DOCUMENT_POSITION_CONTAINED_BY)) {\n                    adoptChildNode(node, DocumentResolverFn, undefined);\n                }\n            }\n            for (let i = 0, len = addedNodes.length; i < len; i += 1) {\n                const node = addedNodes[i];\n                if (compareDocumentPosition.call(elm, node) & _Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                    adoptChildNode(node, fn, shadowToken);\n                }\n            }\n        });\n    });\n}\nfunction markElementAsPortal(elm) {\n    if (isUndefined(portalObserver)) {\n        portalObserver = initPortalObserver();\n    }\n    if (isUndefined(getShadowRootResolver(elm))) {\n        // only an element from a within a shadowRoot should be used here\n        throw new Error(`Invalid Element`);\n    }\n    // install mutation observer for portals\n    MutationObserverObserve.call(portalObserver, elm, portalObserverConfig);\n    // TODO [#1253]: optimization to synchronously adopt new child nodes added\n    // to this elm, we can do that by patching the most common operations\n    // on the node itself\n}\n/**\n * Patching Element.prototype.$domManual$ to mark elements as portal:\n *\n *  - we use a property to allow engines to signal that a particular element in\n *    a shadow supports manual insertion of child nodes.\n *\n *  - this signal comes as a boolean value, and we use it to install the MO instance\n *    onto the element, to propagate the $ownerKey$ and $shadowToken$ to all new\n *    child nodes.\n *\n *  - at the moment, there is no way to undo this operation, once the element is\n *    marked as $domManual$, setting it to false does nothing.\n *\n **/\n// TODO [#1306]: rename this to $observerConnection$\ndefineProperty(Element.prototype, '$domManual$', {\n    set(v) {\n        this[DomManualPrivateKey] = v;\n        if (isTrue(v)) {\n            markElementAsPortal(this);\n        }\n    },\n    get() {\n        return this[DomManualPrivateKey];\n    },\n    configurable: true,\n});\n/** version: 2.13.0 */\n","export default undefined","import _implicitStylesheets from \"./extract-data.css\";\n\nimport _implicitScopedStylesheets from \"./extract-data.scoped.css?scoped=true\";\n\nimport _lightningInput from \"lightning/input\";\nimport _lightningLayoutItem from \"lightning/layoutItem\";\nimport _lightningButtonIcon from \"lightning/buttonIcon\";\nimport _lightningLayout from \"lightning/layout\";\nimport _lightningButton from \"lightning/button\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-m-vertical_small\": true\n  },\n  key: 0\n};\nconst stc1 = {\n  classMap: {\n    \"slds-list_horizontal\": true,\n    \"slds-wrap\": true\n  },\n  key: 1\n};\nconst stc2 = {\n  classMap: {\n    \"slds-item_label\": true,\n    \"slds-text-color_weak\": true,\n    \"slds-truncate\": true,\n    \"slds-text-title_bold\": true\n  },\n  key: 2\n};\nconst stc3 = {\n  classMap: {\n    \"slds-item_detail\": true,\n    \"slds-truncate\": true\n  },\n  key: 3\n};\nconst stc4 = {\n  classMap: {\n    \"slds-text-color_error\": true,\n    \"slds-text-title_bold\": true,\n    \"slds-text-align_center\": true\n  },\n  key: 4\n};\nconst stc5 = {\n  \"verticalAlign\": \"end\"\n};\nconst stc6 = {\n  props: {\n    \"flexibility\": \"auto\"\n  },\n  key: 6\n};\nconst stc7 = {\n  classMap: {\n    \"slds-text-heading_medium\": true,\n    \"slds-p-horizontal_medium\": true\n  },\n  props: {\n    \"flexibility\": \"shrink\"\n  },\n  key: 8\n};\nconst stc8 = {\n  props: {\n    \"iconName\": \"utility:chevronright\",\n    \"alternativeText\": \"Map\",\n    \"variant\": \"border-filled\"\n  },\n  key: 9\n};\nconst stc9 = {\n  props: {\n    \"flexibility\": \"auto\"\n  },\n  key: 10\n};\nconst stc10 = {\n  classMap: {\n    \"slds-p-horizontal_medium\": true\n  },\n  props: {\n    \"flexibility\": \"shrink\"\n  },\n  key: 12\n};\nconst stc11 = {\n  \"iconName\": \"utility:close\",\n  \"alternativeText\": \"Remove\",\n  \"variant\": \"border-filled\"\n};\nconst stc12 = {\n  classMap: {\n    \"slds-m-top_medium\": true\n  },\n  key: 14\n};\nconst stc13 = {\n  \"label\": \"Add field\",\n  \"variant\": \"brand\"\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {t: api_text, h: api_element, d: api_dynamic_text, k: api_key, b: api_bind, c: api_custom_element, i: api_iterator, f: api_flatten} = $api;\n  const {_m0, _m1, _m2, _m3} = $ctx;\n  return api_flatten([api_element(\"div\", stc0, [api_element(\"dl\", stc1, [api_element(\"dt\", stc2, [api_text(\"Event Definition Key :\")]), api_element(\"dd\", stc3, [api_text(api_dynamic_text($cmp.eventDefinitionKey))])])]), !$cmp.hasFields ? api_element(\"div\", stc4, [api_text(\"Please start by adding field.\")]) : null, api_iterator($cmp.fields, function (itValue, itIndex, itFirst, itLast) {\n    const it = {\n      value: itValue,\n      index: itIndex,\n      first: itFirst,\n      last: itLast\n    };\n    return api_custom_element(\"lightning-layout\", _lightningLayout, {\n      props: stc5,\n      key: api_key(5, it.value.id)\n    }, [api_custom_element(\"lightning-layout-item\", _lightningLayoutItem, stc6, [api_custom_element(\"lightning-input\", _lightningInput, {\n      attrs: {\n        \"data-fieldid\": it.value.id,\n        \"data-fieldtype\": \"name\"\n      },\n      props: {\n        \"label\": \"Name\",\n        \"value\": it.value.name\n      },\n      key: 7,\n      on: {\n        \"change\": _m0 || ($ctx._m0 = api_bind($cmp.onFieldChange))\n      }\n    })]), api_custom_element(\"lightning-layout-item\", _lightningLayoutItem, stc7, [api_custom_element(\"lightning-button-icon\", _lightningButtonIcon, stc8)]), api_custom_element(\"lightning-layout-item\", _lightningLayoutItem, stc9, [api_custom_element(\"lightning-input\", _lightningInput, {\n      attrs: {\n        \"data-fieldid\": it.value.id,\n        \"data-fieldtype\": \"value\"\n      },\n      props: {\n        \"label\": \"Value\",\n        \"value\": it.value.value\n      },\n      key: 11,\n      on: {\n        \"change\": _m1 || ($ctx._m1 = api_bind($cmp.onFieldChange))\n      }\n    })]), api_custom_element(\"lightning-layout-item\", _lightningLayoutItem, stc10, [api_custom_element(\"lightning-button-icon\", _lightningButtonIcon, {\n      attrs: {\n        \"data-id\": it.value.id\n      },\n      props: stc11,\n      key: 13,\n      on: {\n        \"click\": _m2 || ($ctx._m2 = api_bind($cmp.removeField))\n      }\n    })])]);\n  }), api_element(\"div\", stc12, [api_custom_element(\"lightning-button\", _lightningButton, {\n    props: stc13,\n    key: 15,\n    on: {\n      \"click\": _m3 || ($ctx._m3 = api_bind($cmp.addField))\n    }\n  })])]);\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"src-extract-data_extract-data\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./extract-data.html\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport setupTestMock from './../test/testMock';\nimport Postmonger from 'postmonger';\nconst connection = new Postmonger.Session();\n\nclass ExtractData extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this.hasFields = void 0;\n    this.payload = void 0;\n    this.fields = [{\n      id: 0,\n      name: '',\n      value: ''\n    }];\n    this.file = {\n      filename: 'test.csv'\n    };\n    this.eventDefinitionKey = 'loading...';\n  }\n\n  connectedCallback() {\n    setupTestMock(connection);\n    connection.trigger('ready'); //connection.trigger('requestDataSources');\n    //connection.trigger('requestContactsSchema');\n\n    connection.trigger('requestEntryEventDefinitionKey');\n    connection.on('initActivity', payload => this.init(payload));\n    connection.on('clickedNext', () => this.clickedNext());\n    connection.on('requestedEntryEventDefinitionKey', payload => {\n      this.eventDefinitionKey = payload.entryEventDefinitionKey;\n    });\n  }\n  /**\r\n   *\r\n   */\n\n\n  renderedCallback() {\n    this.hasFields = this.fields.length > 0;\n  }\n  /**\r\n   *\r\n   * @param {*} event\r\n   */\n\n\n  onFieldChange(event) {\n    let fieldId = event.target.dataset.fieldid;\n    let fieldType = event.target.dataset.fieldtype;\n    let indexOfField = this.fields.indexOf(this.fields.find(field => field.id == fieldId));\n\n    if (indexOfField > -1) {\n      if (fieldType == 'name') {\n        this.fields[indexOfField].name = event.target.value;\n      } else if (fieldType == 'value') {\n        this.fields[indexOfField].value = event.target.value;\n      }\n    } // this.updateActivity();\n\n  }\n  /**\r\n   *\r\n   */\n\n\n  addField() {\n    console.log(`[fields] Add new field`);\n    let lastField = this.fields.slice(-1).pop(); // if lastField.id == undefined (ex: removed field) make = 0\n\n    let lastFieldId = typeof lastField != 'undefined' ? lastField.id : 0;\n    this.fields.push({\n      id: lastFieldId + 1,\n      name: '',\n      value: ''\n    }); // this.updateActivity();\n  }\n  /**\r\n   *\r\n   * @param {*} event\r\n   */\n\n\n  removeField(event) {\n    // We save field id in name property of button icon lws el\n    let fieldId = parseInt(event.target.dataset.id, 10);\n    console.log(`[fields] Remove field ID : ${fieldId}`);\n    let indexOfField = this.fields.indexOf(this.fields.find(field => field.id == fieldId));\n    this.fields.splice(indexOfField, 1); // this.updateActivity();\n  }\n  /**\r\n   * Init Activity\r\n   *\r\n   * @param {*} payload\r\n   */\n\n\n  init(payload) {\n    this.payload = payload;\n\n    if (payload.arguments && payload.arguments.execute && payload.arguments.execute.inArguments && payload.arguments.execute.inArguments.length > 0) {\n      let args = payload.arguments.execute.inArguments[0];\n      this.file = _objectSpread({}, args.file);\n      this.fields = [...args.fields];\n    }\n\n    console.log('[Init Activity]');\n  }\n\n  clickedNext() {\n    this.save();\n  }\n\n  save() {\n    const newPayload = _objectSpread({}, this.payload);\n\n    const newInArguments = {\n      file: _objectSpread({}, this.file),\n      fields: [...this.fields]\n    };\n    newPayload.arguments.execute.inArguments = newInArguments; // check if no empty field\n\n    newPayload.metaData.isConfigured = this.fields.filter(field => !field.value).length === 0;\n    connection.trigger('updateActivity', newPayload);\n  }\n  /**\r\n   *\r\n   */\n\n\n  updateActivity() {\n    const newPayload = JSON.parse(JSON.stringify(this.config.payload));\n    const argfields = this.fields.reduce((obj, field) => {\n      obj[field.name] = field.value;\n      return obj;\n    }, {});\n    let newInArguments = [];\n    this.fields.forEach(field => {\n      let indexOfArg = newInArguments.indexOf(newInArguments.find(arg => arg.id == field.id));\n\n      if (indexOfArg > -1) {\n        newInArguments[indexOfArg] = {\n          id: field.id,\n          name: field.name,\n          value: field.value\n        };\n      } else {\n        newInArguments.push({\n          id: field.id,\n          name: field.name,\n          value: field.value\n        });\n      }\n    });\n    newPayload.arguments.execute.inArguments = newInArguments;\n    newPayload.configurationArguments.params = argfields; // check if no empty field\n\n    newPayload.metaData.isConfigured = this.fields.filter(field => !field.value).length === 0;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(ExtractData, {\n  track: {\n    hasFields: 1,\n    payload: 1,\n    fields: 1,\n    file: 1,\n    eventDefinitionKey: 1\n  }\n});\n\nexport default _registerComponent(ExtractData, {\n  tmpl: _tmpl\n});","// this function is for example purposes only. it sets ups a Postmonger\n// session that emulates how Journey Builder works. You can call jb.ready()\n// from the console to kick off the initActivity event with a mock activity object\nexport default function setupTestMock(jbSession) {\n  const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n\n  if (!isLocalhost) {\n    console.log('[setupTestHarness]', 'loading prod data'); // don't load the test harness functions when running in Journey Builder\n\n    return;\n  }\n\n  console.log('[setupTestHarness]', 'loading test data');\n  const jb = {};\n  window.jb = jb; //standard responses\n\n  const events = ['requestContactsSchema', 'requestSchema', 'requestTriggerEventDefinition', 'requestDataSources', 'requestTokens', 'requestEntryEventDefinitionKey'];\n\n  for (const e of events) {\n    try {\n      jbSession.on(e, () => {\n        console.log('[echo]', e);\n        jbSession.trigger(e.replace('request', 'requested'), require(`./testdata/${e}.json`));\n      });\n    } catch (ex) {\n      console.error('Could not load test harness for event ', e, ex);\n    }\n  } // custom responses\n\n\n  jbSession.on('ready', function () {\n    console.log('[echo] ready');\n\n    const data = require('./testdata/ready.json');\n\n    jbSession.trigger('initActivity', data);\n  });\n  jbSession.on('setActivityDirtyState', function (value) {\n    console.log('[echo] setActivityDirtyState -> ', value);\n  });\n  jbSession.on('requestInspectorClose', function () {\n    console.log('[echo] requestInspectorClose');\n  });\n  jbSession.on('updateActivity', function (activity) {\n    console.log('[echo] updateActivity -> ', JSON.stringify(activity, null, 4));\n  });\n}","export default 'Large';","export default 'USD';","export default 'MMMM d, yyyy';","export default 'MMM d, yyyy';","export default 'h:mm:ss a';","export default 'M/d/yyyy';","export default 'h:mm a';","export default 'ltr';","export default '1';","export default 'en';","export default 'en-US';","export default '¤#,##0.00;(¤#,##0.00)';","export default '.';","export default ',';","export default '#,##0.###';","export default '#,##0%';","export default 'false';","export default 'America/Los_Angeles';","export default 'a few seconds ago';","export default 'in a few seconds';","export default 'Choose a color. Current color: ';","export default 'B';","export default 'Blue';","export default 'Cancel';","export default 'Use arrow keys to select a saturation and brightness, on an x and y axis.';","export default 'Done';","export default 'Enter a valid hexadecimal value.';","export default 'G';","export default 'Green';","export default 'Hex';","export default 'Select Hue';","export default 'R';","export default 'Red';","export default 'Custom';","export default 'Default';","export default 'Selected Options:';","export default 'Press delete or backspace to remove';","export default 'Loading';","export default 'Clear Selection';","export default 'Active';","export default 'Clear';","export default 'Inactive';","export default 'Loading';","export default 'required';","export default 'Date picker: ';","export default 'Date';","export default 'Your entry does not match the allowed format {0}.';","export default 'Select a date before {0}';","export default 'Select a date between {0} and {1}';","export default 'Select a date after {0}';","export default 'Next Month';","export default 'Previous Month';","export default 'Value must be {0} or earlier.';","export default 'Value must be {0} or later.';","export default 'Select a date for {0}';","export default 'Time';","export default 'Today';","export default 'Pick a Year';","export default 'Enter a valid value.';","export default 'Your entry does not match the allowed pattern.';","export default 'The number is too high.';","export default 'The number is too low.';","export default 'You must select at least one choice from this set.';","export default 'Your entry isn\\'t a valid increment.';","export default 'Your entry is too long.';","export default 'Your entry is too short.';","export default 'You have entered an invalid format.';","export default 'Complete this field.';","export default 'Help';","export default '{0} Help Info';","export default 'Or drop files';","export default 'Upload Files';","export default 'Decrease number';","export default 'Increase number';","import _tmpl from \"./ariaObserver.html\";\nimport { registerComponent as _registerComponent } from \"lwc\";\nimport { guid, synchronizeAttrs, isNativeComponent } from 'lightning/utilsPrivate';\nconst CONTENT_SEPARATOR = '\\n';\n\nfunction getAttr(elm, attr) {\n  if (elm.tagName.match(/lightning/i)) {\n    return elm[attr];\n  }\n\n  return elm.getAttribute(attr);\n}\n\nfunction extractElements(root, ids) {\n  if (typeof ids !== 'string' || ids === '') {\n    return [];\n  } // We must query the elements in the order of ids, so that\n  // the content will be extracted in the correct order.\n\n\n  return splitIds(ids).map(id => root.querySelector(`#${id}`));\n}\n\nfunction extractContent(elements) {\n  return elements.map(element => element.textContent).filter(text => text.length).join(CONTENT_SEPARATOR);\n}\n\nfunction splitIds(ids) {\n  return (ids + '').trim().split(/\\s+/);\n}\n\nfunction hashIds(ids) {\n  return (ids + '').trim().split(/\\s+/).reduce((r, v) => {\n    r[v] = 1;\n    return r;\n  }, {});\n} // this method should check each individual id from computedIds\n// against the existing value of the attrName on elm, and dupe\n// them, and add the new ones.\n\n\nfunction addAriaRefWhenNeeded(elm, attrName, computedIds) {\n  const newIds = splitIds(computedIds);\n  const oldIds = getAttr(elm, attrName) || '';\n  const oldIdsHash = hashIds(oldIds);\n  const suffix = [];\n\n  for (let i = 0; i < newIds.length; i += 1) {\n    if (!oldIdsHash[newIds[i]]) {\n      suffix.push(newIds[i]);\n    }\n  }\n\n  if (suffix.length !== 0) {\n    synchronizeAttrs(elm, {\n      [attrName]: oldIds + (oldIds.length === 0 ? '' : ' ') + suffix.join(' ')\n    });\n  }\n} // this method should check each individual id from computedIds\n// against the existing value of the attrName on elm, and remove\n// them when possible in preparation for some new values.\n\n\nfunction removeAriaRefWhenPossible(elm, attrName, computedIds) {\n  const newIds = splitIds(computedIds);\n  const oldIds = getAttr(elm, attrName) || '';\n  const oldIdsHash = hashIds(oldIds);\n  const newValues = [];\n\n  for (let i = 0; i < newIds.length; i += 1) {\n    if (!oldIdsHash[newIds[i]]) {\n      newValues.push(newIds[i]);\n    }\n  }\n\n  synchronizeAttrs(elm, {\n    [attrName]: newValues.join(' ')\n  });\n}\n\nfunction createPlaceholderContainer() {\n  const container = document.createElement('span');\n  container.style.display = 'none';\n  container.setAttribute('placeholder-container', '');\n  return container;\n}\n\nclass AriaObserver {\n  constructor(component) {\n    this.component = component;\n    this.template = component.template;\n    this.isNative = isNativeComponent(component);\n    this.state = {};\n    this.liveIds = {};\n    this.guid = guid();\n    this.placeholderContainer = null;\n  }\n\n  connectLiveIdRef(refs, callback) {\n    const selector = (refs + '').trim().split(/\\s+/).map(ref => `[id*=\"${ref}\"]`).join(',');\n    const liveId = {\n      selector,\n      callback\n    };\n    this.liveIds[refs] = liveId;\n  }\n\n  connect({\n    targetSelector,\n    attribute,\n    id,\n    ids\n  }) {\n    ids = ids || id;\n    this.state[attribute] = this.state[attribute] || {};\n    const attrState = this.state[attribute]; // note: we don't support linking to a different targetSelector\n\n    attrState.innerSelector = attrState.innerSelector || targetSelector; // removing the old ids if possible before setting the new ones\n\n    if (!this.isNative && attrState.ids) {\n      const elm = this.template.querySelector(attrState.innerSelector);\n\n      if (elm) {\n        removeAriaRefWhenPossible(elm, attribute, attrState.ids);\n      }\n    }\n\n    attrState.ids = ids;\n\n    if (this.isNative && !attrState.placeholder) {\n      // create placeholder element for copied content\n      attrState.placeholder = document.createElement('span');\n      attrState.placeholder.id = `auto-link-${attribute}-${this.guid}`;\n    }\n\n    if (this.component.isConnected) {\n      this.privateUpdate(attribute);\n    }\n  }\n\n  sync() {\n    if (!this.component.isConnected) {\n      throw new Error(`Invalid sync invocation. It can only be invoked during renderedCallback().`);\n    }\n\n    if (this.isNative && !this.mo) {\n      this.privateConnect();\n    }\n\n    for (const attrName in this.state) {\n      if (Object.prototype.hasOwnProperty.call(this.state, attrName)) {\n        this.privateUpdate(attrName);\n      }\n    } // live idRef feature is a no-op in native\n\n\n    if (!this.isNative) {\n      this.privateUpdateLiveIds();\n    }\n  }\n\n  privateExtractIds(elements) {\n    return elements.map(el => {\n      return el.getAttribute('id');\n    }).join(' ');\n  }\n\n  privateUpdateLiveIds() {\n    const root = this.template.host.getRootNode(); // if not connected do nothing\n\n    if (!root) {\n      return;\n    }\n\n    for (const liveId in this.liveIds) {\n      if (Object.prototype.hasOwnProperty.call(this.liveIds, liveId)) {\n        const thisId = this.liveIds[liveId];\n\n        if (!thisId.elements) {\n          // element refs are cached\n          thisId.elements = Array.prototype.slice.call(root.querySelectorAll(thisId.selector));\n        }\n\n        const newIds = this.privateExtractIds(thisId.elements); // only fire calback if the value changed\n\n        if (newIds !== thisId.ids) {\n          thisId.callback(newIds);\n          thisId.ids = newIds;\n        }\n      }\n    }\n  }\n\n  privateUpdate(attrName) {\n    const {\n      innerSelector\n    } = this.state[attrName];\n    const elm = this.template.querySelector(innerSelector);\n\n    if (!elm) {\n      return; // nothing to update\n    }\n\n    let computedIds;\n\n    if (this.isNative) {\n      const {\n        ids,\n        content,\n        placeholder\n      } = this.state[attrName];\n      const newContent = extractContent(extractElements(this.root, ids));\n\n      if (content !== newContent) {\n        this.state[attrName].content = placeholder.textContent = newContent;\n      }\n\n      if (!placeholder.parentNode) {\n        // create placeholder container at template root, if not already exist\n        if (!this.placeholderContainer) {\n          this.placeholderContainer = createPlaceholderContainer();\n          this.template.appendChild(this.placeholderContainer);\n        } // inserting the placeholder once\n\n\n        this.placeholderContainer.appendChild(placeholder);\n      }\n\n      computedIds = placeholder.id;\n    } else {\n      computedIds = this.state[attrName].ids;\n    }\n\n    addAriaRefWhenNeeded(elm, attrName, computedIds);\n  }\n\n  privateConnect() {\n    // caching root ref\n    this.root = this.template.host.getRootNode(); // creating the observer once\n\n    this.mo = new MutationObserver(() => {\n      if (!this.component.isConnected) {\n        return; // do nothing when the template is not connected\n      }\n\n      this.sync();\n    });\n    this.mo.observe(this.root, {\n      characterData: true,\n      childList: true,\n      subtree: true\n    });\n  }\n\n  disconnect() {\n    // MutationObservers must be disconnected manually when using @lwc/synthetic-shadow\n    // https://lwc.dev/guide/composition#:~:text=memory%20leak\n    if (this.mo) {\n      this.mo.disconnect();\n      this.mo = undefined;\n    }\n  }\n\n}\n\nexport default _registerComponent(AriaObserver, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./baseComboboxFormattedText.css\";\n\nimport _implicitScopedStylesheets from \"./baseComboboxFormattedText.scoped.css?scoped=true\";\n\nimport {registerTemplate} from \"lwc\";\nconst stc0 = [];\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {k: api_key, d: api_dynamic_text, t: api_text, h: api_element, i: api_iterator, f: api_flatten} = $api;\n  return api_flatten([$cmp.hasParts ? api_iterator($cmp.text, function (item) {\n    return [item.part.highlight ? api_element(\"strong\", {\n      key: api_key(0, item.key)\n    }, [api_text(api_dynamic_text(item.part.text))]) : null, !item.part.highlight ? api_text(api_dynamic_text(item.part.text)) : null];\n  }) : stc0, !$cmp.hasParts ? api_text(api_dynamic_text($cmp.text)) : null]);\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-baseComboboxFormattedText_baseComboboxFormattedText\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./baseComboboxFormattedText.html\";\n\nclass LightningBaseComboboxFormattedText extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this._text = '';\n    this.hasParts = void 0;\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  set text(value) {\n    this.hasParts = Array.isArray(value) && value.length > 0;\n\n    if (this.hasParts) {\n      // Generate keys for LWC DOM\n      this._text = value.map((part, i) => ({\n        part,\n        key: i\n      }));\n    } else {\n      this._text = value;\n    }\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningBaseComboboxFormattedText, {\n  publicProps: {\n    text: {\n      config: 3\n    }\n  },\n  track: {\n    _text: 1,\n    hasParts: 1\n  }\n});\n\nexport default _registerComponent(LightningBaseComboboxFormattedText, {\n  tmpl: _tmpl\n});","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./baseComboboxItem.html\";\nimport card from './card.html';\nimport inline from './inline.html';\n\nclass LightningBaseComboboxItem extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this.item = {};\n  }\n\n  connectedCallback() {\n    // We want to make sure that the item has 'aria-selected' if it's selectable\n    if (this.item.selectable) {\n      this.setAttribute('aria-selected', 'false');\n    }\n\n    if (this.item.type === 'option-inline') {\n      this.classList.add('slds-media_small', 'slds-listbox__option_plain');\n    } else {\n      this.classList.add('slds-listbox__option_entity');\n    }\n  }\n\n  get textHasParts() {\n    const text = this.item.text;\n    return text && Array.isArray(text) && text.length > 0;\n  }\n\n  get subTextHasParts() {\n    const subText = this.item.subText;\n    return subText && Array.isArray(subText) && subText.length > 0;\n  } // Return html based on the specified item type\n\n\n  render() {\n    if (this.item.type === 'option-card') {\n      return card;\n    }\n\n    return inline;\n  }\n\n  highlight() {\n    this.toggleHighlight(true);\n  }\n\n  removeHighlight() {\n    this.toggleHighlight(false);\n  }\n\n  toggleHighlight(highlighted) {\n    if (this.item.selectable) {\n      this.setAttribute('aria-selected', highlighted ? 'true' : 'false');\n      this.classList.toggle('slds-has-focus', highlighted);\n    }\n  } // Parts are needed for highlighting\n\n\n  partsToText(parts) {\n    if (parts && Array.isArray(parts) && parts.length > 0) {\n      return parts.map(part => part.text).join('');\n    }\n\n    return parts;\n  }\n\n  get rightIconSize() {\n    return this.item.rightIconSize || 'small';\n  }\n\n  get iconSize() {\n    return this.item.iconSize || 'small';\n  }\n\n  get text() {\n    return this.partsToText(this.item.text);\n  }\n\n  get subText() {\n    return this.partsToText(this.item.subText);\n  }\n\n  get hasSubText() {\n    const subText = this.item.subText;\n    return subText && subText.length > 0;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningBaseComboboxItem, {\n  publicProps: {\n    item: {\n      config: 0\n    }\n  },\n  publicMethods: [\"highlight\", \"removeHighlight\"]\n});\n\nexport default _registerComponent(LightningBaseComboboxItem, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./card.css\";\n\nimport _implicitScopedStylesheets from \"./card.scoped.css?scoped=true\";\n\nimport _lightningIcon from \"lightning/icon\";\nimport _lightningBaseComboboxFormattedText from \"lightning/baseComboboxFormattedText\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-media__figure\": true,\n    \"slds-listbox__option-icon\": true\n  },\n  key: 0\n};\nconst stc1 = {\n  classMap: {\n    \"slds-media__body\": true\n  },\n  key: 2\n};\nconst stc2 = {\n  classMap: {\n    \"slds-listbox__option-text\": true,\n    \"slds-listbox__option-text_entity\": true\n  },\n  key: 3\n};\nconst stc3 = {\n  \"slds-truncate\": true\n};\nconst stc4 = {\n  classMap: {\n    \"slds-listbox__option-meta\": true,\n    \"slds-listbox__option-meta_entity\": true\n  },\n  key: 6\n};\nconst stc5 = {\n  classMap: {\n    \"slds-media__figure\": true,\n    \"slds-media__figure_reverse\": true\n  },\n  key: 9\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {c: api_custom_element, h: api_element, d: api_dynamic_text, t: api_text} = $api;\n  return [api_element(\"span\", stc0, [$cmp.item.iconName ? api_custom_element(\"lightning-icon\", _lightningIcon, {\n    props: {\n      \"size\": $cmp.iconSize,\n      \"alternativeText\": $cmp.item.iconAlternativeText,\n      \"iconName\": $cmp.item.iconName\n    },\n    key: 1\n  }) : null]), api_element(\"span\", stc1, [api_element(\"span\", stc2, [!$cmp.textHasParts ? api_element(\"span\", {\n    classMap: stc3,\n    attrs: {\n      \"title\": $cmp.item.text\n    },\n    key: 4\n  }, [api_text(api_dynamic_text($cmp.item.text))]) : null, $cmp.textHasParts ? api_custom_element(\"lightning-base-combobox-formatted-text\", _lightningBaseComboboxFormattedText, {\n    classMap: stc3,\n    props: {\n      \"title\": $cmp.text,\n      \"text\": $cmp.item.text\n    },\n    key: 5\n  }) : null]), $cmp.hasSubText ? api_element(\"span\", stc4, [!$cmp.subTextHasParts ? api_element(\"span\", {\n    classMap: stc3,\n    attrs: {\n      \"title\": $cmp.item.subText\n    },\n    key: 7\n  }, [api_text(api_dynamic_text($cmp.item.subText))]) : null, $cmp.subTextHasParts ? api_custom_element(\"lightning-base-combobox-formatted-text\", _lightningBaseComboboxFormattedText, {\n    classMap: stc3,\n    props: {\n      \"title\": $cmp.subText,\n      \"text\": $cmp.item.subText\n    },\n    key: 8\n  }) : null]) : null]), $cmp.item.rightIconName ? api_element(\"span\", stc5, [api_custom_element(\"lightning-icon\", _lightningIcon, {\n    props: {\n      \"size\": $cmp.rightIconSize,\n      \"alternativeText\": $cmp.item.rightIconAlternativeText,\n      \"iconName\": $cmp.item.rightIconName\n    },\n    key: 10\n  })]) : null];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-baseComboboxItem_card\"\n}\n","import _implicitStylesheets from \"./inline.css\";\n\nimport _implicitScopedStylesheets from \"./inline.scoped.css?scoped=true\";\n\nimport _lightningIcon from \"lightning/icon\";\nimport _lightningBaseComboboxFormattedText from \"lightning/baseComboboxFormattedText\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-media__figure\": true,\n    \"slds-listbox__option-icon\": true\n  },\n  key: 0\n};\nconst stc1 = {\n  classMap: {\n    \"slds-media__body\": true\n  },\n  key: 2\n};\nconst stc2 = {\n  \"slds-truncate\": true\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {c: api_custom_element, h: api_element, d: api_dynamic_text, t: api_text} = $api;\n  return [api_element(\"span\", stc0, [$cmp.item.iconName ? api_custom_element(\"lightning-icon\", _lightningIcon, {\n    props: {\n      \"alternativeText\": $cmp.item.iconAlternativeText,\n      \"iconName\": $cmp.item.iconName,\n      \"size\": \"x-small\"\n    },\n    key: 1\n  }) : null]), api_element(\"span\", stc1, [!$cmp.textHasParts ? api_element(\"span\", {\n    classMap: stc2,\n    attrs: {\n      \"title\": $cmp.item.text\n    },\n    key: 3\n  }, [api_text(api_dynamic_text($cmp.item.text))]) : null, $cmp.textHasParts ? api_custom_element(\"lightning-base-combobox-formatted-text\", _lightningBaseComboboxFormattedText, {\n    classMap: stc2,\n    props: {\n      \"text\": $cmp.item.text,\n      \"title\": $cmp.text\n    },\n    key: 4\n  }) : null])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-baseComboboxItem_inline\"\n}\n","function stylesheet(token, useActualHostSelector, useNativeDirPseudoclass) {\n  var shadowSelector = token ? (\"[\" + token + \"]\") : \"\";\n  var hostSelector = token ? (\"[\" + token + \"-host]\") : \"\";\n  return \".slds-inline-logo\" + shadowSelector + \" {height: 1rem;margin-top: 1rem;margin-bottom: 1rem;}input[aria-readonly=\\\"true\\\"]\" + shadowSelector + \" {caret-color: transparent;}\";\n  /*LWC compiler v2.13.0*/\n}\nexport default [stylesheet];","import _implicitStylesheets from \"./baseCombobox.css\";\n\nimport _implicitScopedStylesheets from \"./baseCombobox.scoped.css?scoped=true\";\n\nimport _lightningIcon from \"lightning/icon\";\nimport _lightningPrimitiveIcon from \"lightning/primitiveIcon\";\nimport _lightningBaseComboboxItem from \"lightning/baseComboboxItem\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  \"role\": \"none\"\n};\nconst stc1 = {\n  \"slds-icon_container\": true,\n  \"slds-combobox__input-entity-icon\": true\n};\nconst stc2 = {\n  classMap: {\n    \"slds-truncate\": true\n  },\n  key: 5\n};\nconst stc3 = {\n  classMap: {\n    \"slds-input__icon-group\": true,\n    \"slds-input__icon-group_right\": true\n  },\n  key: 6\n};\nconst stc4 = {\n  \"slds-button\": true,\n  \"slds-button_icon\": true,\n  \"slds-input__icon\": true,\n  \"slds-input__icon_right\": true\n};\nconst stc5 = {\n  props: {\n    \"iconName\": \"utility:close\",\n    \"variant\": \"bare\",\n    \"svgClass\": \"slds-button__icon\"\n  },\n  key: 8\n};\nconst stc6 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 9\n};\nconst stc7 = {\n  classMap: {\n    \"slds-input__icon-group\": true,\n    \"slds-input__icon-group_right\": true\n  },\n  key: 10\n};\nconst stc8 = {\n  classMap: {\n    \"slds-spinner\": true,\n    \"slds-spinner_brand\": true,\n    \"slds-spinner_x-small\": true,\n    \"slds-input__spinner\": true\n  },\n  attrs: {\n    \"role\": \"status\"\n  },\n  key: 11\n};\nconst stc9 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 12\n};\nconst stc10 = {\n  classMap: {\n    \"slds-spinner__dot-a\": true\n  },\n  key: 13\n};\nconst stc11 = {\n  classMap: {\n    \"slds-spinner__dot-b\": true\n  },\n  key: 14\n};\nconst stc12 = {\n  \"slds-input__icon\": true,\n  \"slds-input__icon_right\": true\n};\nconst stc13 = {\n  \"slds-media\": true,\n  \"slds-listbox__option\": true,\n  \"slds-media_center\": true\n};\nconst stc14 = {\n  classMap: {\n    \"slds-listbox__item\": true\n  },\n  attrs: {\n    \"role\": \"presentation\"\n  },\n  key: 19\n};\nconst stc15 = {\n  classMap: {\n    \"slds-media\": true,\n    \"slds-listbox__option\": true,\n    \"slds-listbox__option_plain\": true,\n    \"slds-media_small\": true\n  },\n  attrs: {\n    \"role\": \"presentation\"\n  },\n  key: 20\n};\nconst stc16 = {\n  \"slds-listbox__item\": true\n};\nconst stc17 = {\n  \"role\": \"presentation\"\n};\nconst stc18 = {\n  classMap: {\n    \"slds-listbox__item\": true\n  },\n  attrs: {\n    \"role\": \"presentation\"\n  },\n  key: 24\n};\nconst stc19 = {\n  classMap: {\n    \"slds-align_absolute-center\": true,\n    \"slds-p-top_medium\": true\n  },\n  key: 25\n};\nconst stc20 = {\n  classMap: {\n    \"slds-spinner\": true,\n    \"slds-spinner_x-small\": true,\n    \"slds-spinner_inline\": true\n  },\n  attrs: {\n    \"role\": \"status\"\n  },\n  key: 26\n};\nconst stc21 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 27\n};\nconst stc22 = {\n  classMap: {\n    \"slds-spinner__dot-a\": true\n  },\n  key: 28\n};\nconst stc23 = {\n  classMap: {\n    \"slds-spinner__dot-b\": true\n  },\n  key: 29\n};\nconst stc24 = {\n  classMap: {\n    \"slds-align_absolute-center\": true\n  },\n  key: 30\n};\nconst stc25 = {\n  \"slds-inline-logo\": true\n};\nconst stc26 = [];\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {b: api_bind, c: api_custom_element, gid: api_scoped_id, h: api_element, d: api_dynamic_text, t: api_text, k: api_key, i: api_iterator, f: api_flatten} = $api;\n  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6, _m7, _m8, _m9, _m10, _m11, _m12, _m13, _m14, _m15, _m16, _m17} = $ctx;\n  return [api_element(\"div\", {\n    className: $cmp.computedDropdownTriggerClass,\n    key: 0,\n    on: {\n      \"click\": _m0 || ($ctx._m0 = api_bind($cmp.handleTriggerClick))\n    }\n  }, [api_element(\"div\", {\n    className: $cmp.computedFormElementClass,\n    attrs: stc0,\n    key: 1\n  }, [$cmp.hasInputPill ? api_custom_element(\"lightning-icon\", _lightningIcon, {\n    classMap: stc1,\n    props: {\n      \"iconName\": $cmp.inputPill.iconName,\n      \"alternativeText\": $cmp.inputPill.iconAlternativeText,\n      \"size\": \"x-small\"\n    },\n    key: 2\n  }) : null, !$cmp.isUserInputDisabled ? api_element(\"input\", {\n    className: $cmp.computedInputClass,\n    attrs: {\n      \"id\": api_scoped_id(\"combobox-input\"),\n      \"type\": \"text\",\n      \"role\": \"combobox\",\n      \"aria-expanded\": $cmp.computedAriaExpanded,\n      \"aria-haspopup\": \"listbox\",\n      \"required\": $cmp.required ? \"\" : null,\n      \"readonly\": $cmp._inputAriaReadOnly ? \"\" : null,\n      \"autocomplete\": $cmp.autocomplete,\n      \"data-value\": $cmp.computedInputValue,\n      \"name\": $cmp.name,\n      \"placeholder\": $cmp.computedPlaceholder,\n      \"maxlength\": $cmp.inputMaxlength,\n      \"disabled\": $cmp.disabled ? \"\" : null,\n      \"aria-readonly\": $cmp._inputAriaReadOnly,\n      \"aria-autocomplete\": $cmp.computedAriaAutocomplete,\n      \"aria-owns\": api_scoped_id(\"dropdown-element\"),\n      \"aria-label\": $cmp.inputLabel\n    },\n    props: {\n      \"value\": $cmp.computedInputValue\n    },\n    key: 3,\n    on: {\n      \"focus\": _m1 || ($ctx._m1 = api_bind($cmp.handleFocus)),\n      \"select\": _m2 || ($ctx._m2 = api_bind($cmp.handleInputSelect)),\n      \"change\": _m3 || ($ctx._m3 = api_bind($cmp.handleTextChange)),\n      \"input\": _m4 || ($ctx._m4 = api_bind($cmp.handleInput)),\n      \"keydown\": _m5 || ($ctx._m5 = api_bind($cmp.handleInputKeyDown)),\n      \"blur\": _m6 || ($ctx._m6 = api_bind($cmp.handleBlur))\n    }\n  }) : null, $cmp.isUserInputDisabled ? api_element(\"button\", {\n    className: $cmp.computedInputClass,\n    attrs: {\n      \"id\": api_scoped_id(\"combobox-button\"),\n      \"type\": \"button\",\n      \"aria-expanded\": $cmp.computedAriaExpanded,\n      \"aria-haspopup\": \"listbox\",\n      \"name\": $cmp.name,\n      \"data-value\": $cmp.computedInputValue,\n      \"disabled\": $cmp.disabled ? \"\" : null,\n      \"aria-label\": $cmp.computedButtonTriggerAriaLabel\n    },\n    key: 4,\n    on: {\n      \"focus\": _m7 || ($ctx._m7 = api_bind($cmp.handleFocus)),\n      \"keydown\": _m8 || ($ctx._m8 = api_bind($cmp.handleInputKeyDown)),\n      \"blur\": _m9 || ($ctx._m9 = api_bind($cmp.handleBlur))\n    }\n  }, [api_element(\"span\", stc2, [$cmp.computedInputValue ? api_text(api_dynamic_text($cmp.computedInputValue)) : null, !$cmp.computedInputValue ? api_text(api_dynamic_text($cmp.computedPlaceholder)) : null])]) : null, $cmp.hasInputPill ? api_element(\"div\", stc3, [api_element(\"button\", {\n    classMap: stc4,\n    attrs: {\n      \"type\": \"button\",\n      \"title\": $cmp.i18n.pillCloseButtonAlternativeText\n    },\n    key: 7,\n    on: {\n      \"click\": _m10 || ($ctx._m10 = api_bind($cmp.handlePillRemove))\n    }\n  }, [api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, stc5), api_element(\"span\", stc6, [api_text(api_dynamic_text($cmp.i18n.pillCloseButtonAlternativeText))])])]) : null, !$cmp.hasInputPill ? api_element(\"div\", stc7, [$cmp.showInputActivityIndicator ? api_element(\"div\", stc8, [api_element(\"span\", stc9, [api_text(api_dynamic_text($cmp.i18n.loadingText))]), api_element(\"div\", stc10), api_element(\"div\", stc11)]) : null, $cmp.inputIconName ? api_custom_element(\"lightning-icon\", _lightningIcon, {\n    classMap: stc12,\n    props: {\n      \"alternativeText\": $cmp.inputIconAlternativeText,\n      \"iconName\": $cmp.inputIconName,\n      \"size\": $cmp.inputIconSize\n    },\n    key: 15\n  }) : null]) : null]), api_element(\"div\", {\n    className: $cmp.computedDropdownClass,\n    attrs: {\n      \"id\": api_scoped_id(\"dropdown-element\"),\n      \"data-dropdown-element\": \"\",\n      \"role\": \"listbox\"\n    },\n    key: 16,\n    on: {\n      \"scroll\": _m11 || ($ctx._m11 = api_bind($cmp.handleListboxScroll)),\n      \"mousedown\": _m12 || ($ctx._m12 = api_bind($cmp.handleDropdownMouseDown)),\n      \"mouseup\": _m13 || ($ctx._m13 = api_bind($cmp.handleDropdownMouseUp)),\n      \"mouseleave\": _m14 || ($ctx._m14 = api_bind($cmp.handleDropdownMouseLeave)),\n      \"click\": _m15 || ($ctx._m15 = api_bind($cmp.handleOptionClick))\n    }\n  }, $cmp._hasDropdownOpened ? api_flatten([api_iterator($cmp._items, function (item) {\n    return [!item.items ? api_custom_element(\"lightning-base-combobox-item\", _lightningBaseComboboxItem, {\n      classMap: stc13,\n      attrs: {\n        \"data-item-id\": item.id,\n        \"data-value\": item.value\n      },\n      props: {\n        \"role\": \"option\",\n        \"item\": item,\n        \"id\": api_scoped_id(item.id),\n        \"ariaChecked\": item.checked\n      },\n      key: api_key(17, item.value),\n      on: {\n        \"mouseenter\": _m16 || ($ctx._m16 = api_bind($cmp.handleOptionMouseEnter))\n      }\n    }) : null, item.items ? api_element(\"ul\", {\n      attrs: {\n        \"role\": \"group\",\n        \"aria-label\": item.label\n      },\n      key: api_key(18, item.label)\n    }, api_flatten([item.label ? api_element(\"li\", stc14, [api_element(\"div\", stc15, [api_element(\"h3\", {\n      attrs: {\n        \"role\": \"presentation\",\n        \"title\": item.label\n      },\n      key: 21\n    }, [api_text(api_dynamic_text(item.label))])])]) : null, api_iterator(item.items, function (groupItem) {\n      return api_element(\"li\", {\n        classMap: stc16,\n        attrs: stc17,\n        key: api_key(22, groupItem.value)\n      }, [api_custom_element(\"lightning-base-combobox-item\", _lightningBaseComboboxItem, {\n        classMap: stc13,\n        attrs: {\n          \"data-item-id\": groupItem.id,\n          \"data-value\": groupItem.value\n        },\n        props: {\n          \"role\": \"option\",\n          \"item\": groupItem,\n          \"id\": api_scoped_id(groupItem.id),\n          \"ariaChecked\": groupItem.checked\n        },\n        key: 23,\n        on: {\n          \"mouseenter\": _m17 || ($ctx._m17 = api_bind($cmp.handleOptionMouseEnter))\n        }\n      })]);\n    })])) : null];\n  }), $cmp.showDropdownActivityIndicator ? api_element(\"div\", stc18, [api_element(\"div\", stc19, [api_element(\"div\", stc20, [api_element(\"span\", stc21, [api_text(api_dynamic_text($cmp.i18n.loadingText))]), api_element(\"div\", stc22), api_element(\"div\", stc23)])])]) : null, $cmp.showAttribution ? api_element(\"div\", stc24, [api_element(\"img\", {\n    classMap: stc25,\n    attrs: {\n      \"src\": $cmp.attributionLogoUrl,\n      \"alt\": $cmp.attributionLogoAssistiveText,\n      \"title\": $cmp.attributionLogoAssistiveText\n    },\n    key: 31\n  })]) : null]) : stc26)])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-baseCombobox_baseCombobox\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./baseCombobox.html\";\nimport labelAriaSelectedOptions from '@salesforce/label/LightningCombobox.ariaSelectedOptions';\nimport labelDeselectOptionKeyboard from '@salesforce/label/LightningCombobox.deselectOptionKeyboard';\nimport labelLoadingText from '@salesforce/label/LightningCombobox.loadingText';\nimport labelPillCloseButtonAlternativeText from '@salesforce/label/LightningCombobox.pillCloseButtonAlternativeText';\nimport { handleKeyDownOnInput } from './keyboard';\nimport { BaseComboboxEvents } from './baseComboboxEvents';\nimport { classSet } from 'lightning/utils';\nimport { assert, getRealDOMId, normalizeAriaAttribute, normalizeBoolean, normalizeString, synchronizeAttrs } from 'lightning/utilsPrivate'; // remove-next-line-for-c-namespace\n\nimport { AutoPosition, Direction } from 'lightning/positionLibrary';\nimport { VARIANT } from 'lightning/inputUtils';\nconst i18n = {\n  ariaSelectedOptions: labelAriaSelectedOptions,\n  deselectOptionKeyboard: labelDeselectOptionKeyboard,\n  pillCloseButtonAlternativeText: labelPillCloseButtonAlternativeText,\n  loadingText: labelLoadingText\n};\nconst SMALL_MIN_HEIGHT = '2.25rem';\nconst MEDIUM_MIN_HEIGHT = '6.75rem';\n/**\n * Breakpoint when viewport height doesn't fit 10 items in the dropdown\n * 834px is the height of 11 inch iPad in horizontal mode.\n */\n\nconst VIEWPORT_HEIGHT_SMALL = 834;\nconst ARIA_CONTROLS = 'aria-controls';\nconst ARIA_LABELLEDBY = 'aria-labelledby';\nconst ARIA_DESCRIBEDBY = 'aria-describedby';\nconst ARIA_LABEL = 'aria-label';\nconst ARIA_ACTIVEDESCENDANT = 'aria-activedescendant';\n\nclass LightningBaseCombobox extends LightningElement {\n  /**\n   * Controls auto-filling of the input. Set the attribute to pass\n   * through autocomplete values to be interpreted by the browser.\n   * By default autocomplete is off to avoid overlap of dropdowns.\n   * @type {string}\n   */\n  get autocomplete() {\n    return this._autocomplete;\n  }\n\n  set autocomplete(value) {\n    this._autocomplete = value || 'off';\n  }\n\n  constructor() {\n    super();\n    this.inputText = '';\n    this.inputIconName = 'utility:down';\n    this.inputIconSize = 'x-small';\n    this.inputIconAlternativeText = void 0;\n    this.inputMaxlength = void 0;\n    this.showInputActivityIndicator = false;\n    this.required = false;\n    this.dropdownAlignment = 'left';\n    this.placeholder = 'Select an Item';\n    this.inputLabel = void 0;\n    this.name = void 0;\n    this.inputPill = void 0;\n    this.attributionLogoUrl = void 0;\n    this.attributionLogoAssistiveText = void 0;\n    this._showDropdownActivityIndicator = false;\n    this._items = [];\n    this._disabled = false;\n    this._dropdownVisible = false;\n    this._hasDropdownOpened = false;\n    this._highlightedOptionElementId = null;\n    this._variant = void 0;\n    this._dropdownHeight = 'standard';\n    this._readonly = false;\n    this._logoLoaded = false;\n    this._inputDescribedBy = [];\n    this._inputAriaControls = void 0;\n    this._activeElementDomId = void 0;\n    this._autocomplete = 'off';\n    this._events = new BaseComboboxEvents(this);\n  }\n\n  renderedCallback() {\n    this.dispatchEvent(new CustomEvent('ready', {\n      detail: {\n        id: this.inputId,\n        name: this.name\n      }\n    }));\n    this.synchronizeA11y();\n  }\n\n  connectedCallback() {\n    this.classList.add('slds-combobox_container');\n    this._connected = true;\n    this._keyboardInterface = this.dropdownKeyboardInterface();\n  }\n\n  disconnectedCallback() {\n    this._connected = false;\n    this._listBoxElementCache = undefined;\n  }\n\n  get inputControlsElement() {\n    return this._inputAriaControls;\n  }\n\n  set inputControlsElement(el) {\n    this._inputAriaControls = el;\n    this.synchronizeA11y();\n  }\n\n  get inputDescribedByElements() {\n    return this._inputDescribedBy;\n  }\n\n  set inputDescribedByElements(elements) {\n    if (Array.isArray(elements)) {\n      this._inputDescribedBy = elements;\n    } else {\n      this._inputDescribedBy = [elements];\n    }\n\n    this.synchronizeA11y();\n  }\n\n  get inputLabelledByElement() {\n    return this._inputLabelledBy;\n  }\n\n  set inputLabelledByElement(el) {\n    this._inputLabelledBy = el;\n    this.synchronizeA11y();\n  }\n\n  get inputLabelledById() {\n    return getRealDOMId(this._inputLabelledBy);\n  }\n\n  get inputAriaControlsId() {\n    return getRealDOMId(this._inputAriaControls);\n  }\n\n  get inputId() {\n    return getRealDOMId(this.inputElement);\n  }\n\n  get computedAriaDescribedBy() {\n    const ariaValues = [];\n\n    this._inputDescribedBy.forEach(el => {\n      ariaValues.push(getRealDOMId(el));\n    });\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get dropdownHeight() {\n    return this._dropdownHeight;\n  }\n\n  set dropdownHeight(height) {\n    this._dropdownHeight = normalizeString(height, {\n      fallbackValue: 'standard',\n      validValues: ['standard', 'small']\n    });\n  }\n\n  get showDropdownActivityIndicator() {\n    return this._showDropdownActivityIndicator;\n  }\n\n  set showDropdownActivityIndicator(value) {\n    this._showDropdownActivityIndicator = normalizeBoolean(value);\n\n    if (this._connected) {\n      if (this._showDropdownActivityIndicator) {\n        if (this._shouldOpenDropDown) {\n          this.openDropdownIfNotEmpty();\n        }\n      } else if (this._dropdownVisible && this.isDropdownEmpty) {\n        this.closeDropdown();\n      }\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = normalizeBoolean(value);\n\n    if (this._disabled && this._dropdownVisible) {\n      this.closeDropdown();\n    }\n  }\n\n  get readOnly() {\n    return this._readonly;\n  }\n\n  set readOnly(value) {\n    this._readonly = normalizeBoolean(value);\n\n    if (this._readonly && this._dropdownVisible) {\n      this.closeDropdown();\n    }\n  }\n\n  get variant() {\n    return this._variant || VARIANT.STANDARD;\n  }\n\n  set variant(value) {\n    this._variant = normalizeString(value, {\n      fallbackValue: VARIANT.STANDARD,\n      validValues: [VARIANT.STANDARD, 'lookup']\n    });\n  }\n\n  get items() {\n    return this._unprocessedItems;\n  }\n\n  set items(items = []) {\n    this._unprocessedItems = items;\n    this.updateItems(items);\n\n    if (this._connected) {\n      if (this._hasDropdownOpened) {\n        // The dropdown has already been opened at least once, so process the items immediately\n        this.updateItems(items);\n\n        if (this._dropdownVisible) {\n          // The dropdown is visible but there are no items to show, close it\n          if (this.isDropdownEmpty) {\n            this.closeDropdown();\n          } else {\n            // We have new items, update highlight\n            this.highlightDefaultItem(); // Since the items have changed, the positioning should be recomputed\n            // remove-next-line-for-c-namespace\n\n            this.startDropdownAutoPositioning();\n          }\n        }\n      }\n\n      if (this._shouldOpenDropDown) {\n        this.openDropdownIfNotEmpty();\n      }\n    }\n  }\n\n  highlightInputText() {\n    if (this._connected) {\n      // Safari has issues with invoking set selection range immediately in the 'focus' handler, instead\n      // we'd be doing it in an animation frame. Remove the requestAnimationFrame once/if this is fixed\n      // in Safari\n      // eslint-disable-next-line @lwc/lwc/no-async-operation\n      requestAnimationFrame(() => {\n        const {\n          inputElement\n        } = this;\n        inputElement.setSelectionRange(0, inputElement.value.length);\n      });\n    }\n  }\n\n  get showAttribution() {\n    return this.attributionLogoUrl;\n  }\n\n  focus() {\n    if (this._connected) {\n      this.inputElement.focus();\n    }\n  }\n\n  focusAndOpenDropdownIfNotEmpty() {\n    if (this._connected) {\n      if (!this._inputHasFocus) {\n        this.focus();\n      }\n\n      this.openDropdownIfNotEmpty();\n    }\n  }\n\n  blur() {\n    if (this._connected) {\n      this.inputElement.blur();\n    }\n  }\n\n  synchronizeA11y() {\n    const input = this.inputElement;\n\n    if (!input) {\n      return;\n    }\n\n    synchronizeAttrs(input, {\n      [ARIA_LABELLEDBY]: this.inputLabelledById,\n      [ARIA_DESCRIBEDBY]: this.computedAriaDescribedBy,\n      [ARIA_ACTIVEDESCENDANT]: this._activeElementDomId,\n      [ARIA_CONTROLS]: this.computedInputControls,\n      [ARIA_LABEL]: this.isUserInputDisabled ? this.computedButtonTriggerAriaLabel : this.inputLabel\n    });\n  }\n\n  itemId(index) {\n    return this.inputId + '-' + index;\n  }\n\n  itemIndexFromId(id) {\n    // Extracts the index from an item id.\n    return parseInt(id.substring(id.lastIndexOf('-') + 1), 10);\n  }\n\n  processItem(item) {\n    const itemCopy = {}; // Supported item properties:\n    // 'type' (string): option-inline, option-card\n    // 'highlight' (boolean): Whether to highlight the item when dropdown opens\n    // 'iconName': left icon name\n    // 'iconSize': left icon size\n    // 'iconAlternativeText': assistive text for the left icon\n    // 'rightIconName': right icon name\n    // 'rightIconSize': right icon size\n    // 'rightIconAlternativeText': assistive text for the right icon\n    // 'text': text to display\n    // 'subText': sub-text to display (only option-card supports it)\n    // 'value': value associated with the option\n    // 'checked': has this been chosen by the user.  Different than selected as that is hover.\n\n    itemCopy.type = item.type;\n    itemCopy.iconName = item.iconName;\n    itemCopy.iconSize = item.iconSize;\n    itemCopy.iconAlternativeText = item.iconAlternativeText;\n    itemCopy.rightIconName = item.rightIconName;\n    itemCopy.rightIconSize = item.rightIconSize;\n    itemCopy.rightIconAlternativeText = item.rightIconAlternativeText;\n    itemCopy.text = item.text;\n    itemCopy.subText = item.subText;\n    itemCopy.value = item.value; // so that we do not get aria-checked=\"undefined\"\n\n    itemCopy.checked = item.checked || false; // extra metadata needed\n\n    itemCopy.selectable = ['option-card', 'option-inline'].indexOf(item.type) >= 0;\n\n    if (itemCopy.selectable) {\n      itemCopy.index = this._selectableItems;\n      itemCopy.id = this.itemId(itemCopy.index);\n      this._selectableItems += 1;\n\n      if (item.highlight) {\n        this._highlightedItemIndex = itemCopy.index;\n      }\n    }\n\n    return itemCopy;\n  }\n\n  get isAutocompleteEnabled() {\n    return this.autocomplete && this.autocomplete !== 'off';\n  }\n\n  get isStandardVariant() {\n    return this.variant === VARIANT.STANDARD;\n  }\n\n  get isDefaultReadOnlyTypes() {\n    return this.isStandardVariant || this.hasInputPill;\n  }\n  /**\n   * Returns true for comboboxes that never allow user input\n   * Used to determine if input or button should be rendered\n   */\n\n\n  get isUserInputDisabled() {\n    return this.isStandardVariant && !this.isAutocompleteEnabled;\n  }\n\n  get _inputAriaReadOnly() {\n    // For standard combobox, if the dropdown is open, we must make the input readonly,\n    // so the user can type and search in the dropdown list\n    // For grouped combobox, the input must remain editable because the search is done through\n    // the input.\n    if (this._dropdownVisible && this.isStandardVariant) {\n      return true;\n    }\n\n    return (// we want Autocomplete to override the \"default assumptions\"\n      // UNLESS the parent component deliberately determines it is readOnly\n      this._readonly || !this.isAutocompleteEnabled && this.isDefaultReadOnlyTypes\n    );\n  }\n\n  get computedAriaAutocomplete() {\n    if (this.hasInputPill) {\n      // no aria-autocomplete when pill is showing\n      return null;\n    }\n\n    return this._inputAriaReadOnly ? 'none' : 'list';\n  }\n\n  get computedPlaceholder() {\n    return this.hasInputPill ? this.inputPill.label : this.placeholder;\n  }\n\n  get computedInputValue() {\n    return this.hasInputPill ? this.inputPill.label : this.inputText;\n  }\n\n  get computedButtonTriggerAriaLabel() {\n    const label = this.inputLabel;\n    const value = this.computedInputValue || this.computedPlaceholder;\n\n    if (!label) {\n      return value;\n    }\n\n    return `${label}, ${value}`;\n  }\n\n  handleListboxScroll(event) {\n    // We don't want this to bubble up to the modal which due to event retargeting wouldn't be able\n    // to know what is actually being scrolled and thus may lead to the scrolling of the modal\n    event.stopPropagation();\n    const listbox = event.target;\n    const height = listbox.getBoundingClientRect().height;\n    const maxScroll = listbox.scrollHeight - height; // Account for variation between browsers when it comes to calculation of margins/padding\n\n    const buffer = 20;\n    const bottomReached = listbox.scrollTop + buffer >= maxScroll;\n\n    if (bottomReached) {\n      this._events.dispatchEndReached();\n    }\n  }\n\n  get listboxElement() {\n    if (!this._listBoxElementCache) {\n      this._listBoxElementCache = this.template.querySelector('[role=\"listbox\"]');\n    }\n\n    return this._listBoxElementCache;\n  }\n\n  get computedUniqueElementId() {\n    return this.inputId;\n  }\n\n  get computedUniqueDropdownElementId() {\n    return getRealDOMId(this.template.querySelector('[data-dropdown-element]'));\n  }\n\n  get computedInputControls() {\n    const ariaValues = [this.computedUniqueDropdownElementId];\n\n    if (this.inputControlsElement) {\n      ariaValues.push(this.inputAriaControlsId);\n    }\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get computedDropdownTriggerClass() {\n    return classSet('slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click').add({\n      'slds-is-open': this._dropdownVisible\n    }).toString();\n  }\n\n  get computedDropdownClass() {\n    const alignment = this.dropdownAlignment;\n    let dropdownLengthClass = '';\n\n    if (this._dropdownVisible) {\n      if (this.dropdownHeight === 'standard') {\n        // When viewport height is small(i.e. 11 inch iPad), there may not be enough space to fit 10 items\n        // either on top or bottom of the input. Therefore show 7 items instead.\n        if (window.innerHeight <= VIEWPORT_HEIGHT_SMALL) {\n          dropdownLengthClass = 'slds-dropdown_length-with-icon-7';\n        } else {\n          dropdownLengthClass = 'slds-dropdown_length-with-icon-10';\n        }\n      } else if (this.dropdownHeight === 'small') {\n        dropdownLengthClass = 'slds-dropdown_length-with-icon-5';\n      }\n    }\n\n    return classSet(`slds-listbox slds-listbox_vertical slds-dropdown slds-dropdown_fluid ${dropdownLengthClass}`).add({\n      'slds-dropdown_left': alignment === 'left' || alignment === 'auto',\n      'slds-dropdown_center': alignment === 'center',\n      'slds-dropdown_right': alignment === 'right',\n      'slds-dropdown_bottom': alignment === 'bottom-center',\n      'slds-dropdown_bottom slds-dropdown_right slds-dropdown_bottom-right': alignment === 'bottom-right',\n      'slds-dropdown_bottom slds-dropdown_left slds-dropdown_bottom-left': alignment === 'bottom-left'\n    }).toString();\n  }\n\n  get computedInputClass() {\n    const classes = classSet('slds-combobox__input');\n    classes.add({\n      'slds-input_faux': this.isUserInputDisabled,\n      //rendering button\n      'slds-input': !this.isUserInputDisabled,\n      //rendering input\n      'slds-is-disabled': this.disabled,\n      'slds-combobox__input-value': this.computedInputValue,\n      'slds-input-has-icon_group-right': !this.computedInputValue && this.showInputActivityIndicator\n    });\n    return classes.toString();\n  }\n\n  get _shouldOpenDropDown() {\n    // If items were empty and through a user interaction the dropdown should have opened, and if the\n    // component still has the focus we'll open it on items update instead.\n    return !this.dropdownDisabled && this._inputHasFocus && this._requestedDropdownOpen;\n  }\n\n  get dropdownDisabled() {\n    return this.readOnly || this.disabled;\n  }\n\n  handleOptionClick(event) {\n    if (event.target.hasAttribute('aria-selected')) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.selectOptionAndCloseDropdown(event.target);\n    }\n  }\n\n  handleOptionMouseEnter(event) {\n    if (event.target.hasAttribute('aria-selected')) {\n      this.highlightOption(event.target);\n    }\n  }\n\n  handleDropdownMouseLeave() {\n    this.removeHighlight(); // This is to account for when a user makes a mousedown press on the dropdown and then leaves the dropdown\n    // area, it would leave the dropdown open even though the focus would no longer be on the input\n\n    if (!this._inputHasFocus) {\n      this.closeDropdown();\n    }\n  }\n\n  handleTriggerClick(event) {\n    event.stopPropagation();\n    this.allowBlur();\n\n    if (this.dropdownDisabled) {\n      return;\n    }\n\n    if (!this.hasInputPill) {\n      // toggle dropdown only for readonly combobox, only open the dropdown otherwise\n      // if it's not already opened.\n      if (this._inputAriaReadOnly) {\n        if (this._dropdownVisible) {\n          this.closeDropdown();\n        } else {\n          this.openDropdownIfNotEmpty();\n        }\n      } else {\n        this.openDropdownIfNotEmpty();\n      }\n\n      this.inputElement.focus();\n    }\n  }\n\n  handlePillKeyDown(event) {\n    if (this.dropdownDisabled) {\n      return;\n    } // 'Del' is IE11 specific, remove once IE11 is no longer supported\n\n\n    if (event.key === 'Delete' || event.key === 'Del' || event.key === 'Backspace') {\n      this.handlePillRemove();\n    }\n  }\n\n  handleInputKeyDown(event) {\n    if (this.dropdownDisabled) {\n      return;\n    }\n\n    if (this.hasInputPill) {\n      this.handlePillKeyDown(event);\n    } else {\n      handleKeyDownOnInput({\n        event,\n        currentIndex: this.getCurrentHighlightedOptionIndex(),\n        dropdownInterface: this._keyboardInterface\n      });\n    }\n  }\n\n  handleTextChange(event) {\n    const inputValue = event.target.value;\n\n    if (this.variant === VARIANT.STANDARD) {\n      let selectedItem;\n\n      const itemByValue = this._unprocessedItems.find(item => item.value === inputValue);\n\n      selectedItem = itemByValue;\n\n      if (!itemByValue) {\n        const itemByLabel = this._unprocessedItems.find(item => item.value && item.text === inputValue);\n\n        selectedItem = itemByLabel;\n      }\n\n      if (selectedItem) {\n        this._events.dispatchSelect(selectedItem.value);\n      }\n    } else {\n      this._events.dispatchTextChange(inputValue);\n    }\n  }\n\n  handleFocus() {\n    this._inputHasFocus = true;\n\n    this._events.dispatchFocus();\n  }\n\n  handleInput(event) {\n    // Do not dispatch any events if the pill is showing, this is specifically an IE11 problem,\n    // which fires an 'input' event when the placeholder on an input is changed (which is what happens when\n    // the pill is shown). The check can be removed when IE11 is no longer supported.\n    if (!this.hasInputPill) {\n      this._events.dispatchTextInput(event.target.value);\n    }\n  }\n\n  handleBlur() {\n    this._inputHasFocus = false;\n\n    if (this._cancelBlur) {\n      return;\n    }\n\n    this.closeDropdown();\n\n    this._events.dispatchBlur();\n  }\n\n  handleDropdownMouseDown(event) {\n    const mainButton = 0;\n\n    if (event.button === mainButton) {\n      this.cancelBlur();\n    }\n  }\n\n  handleDropdownMouseUp() {\n    // We need this to make sure that if a scrollbar is being dragged with the mouse, upon release\n    // of the drag we allow blur, otherwise the dropdown would not close on blur since we'd have cancel blur\n    // set\n    this.allowBlur();\n  }\n\n  highlightOption(option) {\n    this.removeHighlight();\n\n    if (option) {\n      option.highlight();\n      this._highlightedOptionElement = option;\n      this._highlightedOptionElementId = option.getAttribute('data-item-id'); // active element is a component id getter works properly\n\n      this._activeElementDomId = option.id;\n    }\n\n    this.synchronizeA11y();\n  }\n\n  highlightOptionAndScrollIntoView(optionElement) {\n    if (this._selectableItems.length === 0 || !optionElement) {\n      return;\n    }\n\n    this.highlightOption(optionElement);\n    scrollIntoViewIfNeeded(optionElement, this.listboxElement);\n  }\n\n  removeHighlight() {\n    const option = this._highlightedOptionElement;\n\n    if (option) {\n      option.removeHighlight();\n      this._highlightedOptionElement = null;\n      this._highlightedOptionElementId = null;\n      this._activeElementDomId = null;\n    }\n  }\n\n  selectOptionAndCloseDropdown(optionElement) {\n    this.closeDropdown();\n    this.inputElement.focus();\n    const selectedValue = optionElement.getAttribute('data-value');\n\n    this._events.dispatchSelect(selectedValue);\n  }\n\n  handleInputSelect(event) {\n    event.stopPropagation();\n  }\n\n  openDropdownIfNotEmpty() {\n    if (this._dropdownVisible) {\n      // Already visible\n      return;\n    }\n\n    const noOptions = !Array.isArray(this.items) || this.items.length === 0; // Do not dispatch the open request event if there already was a request to open\n\n    if (noOptions && !this._requestedDropdownOpen) {\n      // Dispatch dropdown open request\n      this._events.dispatchDropdownOpenRequest();\n    } // Do not open if there's nothing to show in the dropdown (eg. no options and no dropdown activity indicator)\n\n\n    if (this.isDropdownEmpty) {\n      // We use this attribute to flag whether an attempt has been made via user-interaction\n      // to open the dropdown\n      this._requestedDropdownOpen = true;\n      return;\n    }\n\n    if (!this._hasDropdownOpened) {\n      if (this._unprocessedItems) {\n        this.updateItems(this._unprocessedItems);\n      }\n\n      this._hasDropdownOpened = true;\n    }\n\n    this._requestedDropdownOpen = false;\n    this._dropdownVisible = true; // remove-next-line-for-c-namespace\n\n    this.startDropdownAutoPositioning();\n    this.highlightDefaultItem();\n\n    this._events.dispatchDropdownOpen();\n  }\n\n  closeDropdown() {\n    if (!this._dropdownVisible) {\n      // Already closed\n      return;\n    } // remove-next-line-for-c-namespace\n\n\n    this.stopDropdownPositioning();\n    this.removeHighlight();\n    this._dropdownVisible = false;\n  }\n\n  findOptionElementByIndex(index) {\n    return this.template.querySelector(`[data-item-id=\"${this.itemId(index)}\"]`);\n  }\n\n  allowBlur() {\n    this._cancelBlur = false;\n  }\n\n  cancelBlur() {\n    this._cancelBlur = true;\n  }\n\n  getCurrentHighlightedOptionIndex() {\n    if (this._highlightedOptionElementId && this._highlightedOptionElementId.length > 0) {\n      return this.itemIndexFromId(this._highlightedOptionElementId);\n    }\n\n    return -1;\n  }\n\n  get inputElement() {\n    return this.template.querySelector('.slds-combobox__input');\n  } // remove-next-line-for-c-namespace\n\n\n  startDropdownAutoPositioning() {\n    if (this.dropdownAlignment !== 'auto') {\n      return;\n    }\n\n    if (!this._autoPosition) {\n      this._autoPosition = new AutoPosition(this);\n    }\n\n    this._autoPosition.start({\n      target: () => this.inputElement,\n      element: () => this.template.querySelector('div.slds-dropdown'),\n      align: {\n        horizontal: Direction.Left,\n        vertical: Direction.Top\n      },\n      targetAlign: {\n        horizontal: Direction.Left,\n        vertical: Direction.Bottom\n      },\n      autoFlip: true,\n      alignWidth: true,\n      autoShrinkHeight: true,\n      minHeight: this._selectableItems < 3 ? SMALL_MIN_HEIGHT : MEDIUM_MIN_HEIGHT\n    });\n  } // remove-next-line-for-c-namespace\n\n\n  stopDropdownPositioning() {\n    if (this._autoPosition) {\n      this._autoPosition.stop();\n    }\n  }\n\n  get hasInputPill() {\n    return this.inputPill && Object.keys(this.inputPill).length > 0;\n  }\n\n  handlePillRemove() {\n    this.inputElement.focus();\n\n    this._events.dispatchPillRemove(this.inputPill);\n  }\n\n  get computedFormElementClass() {\n    const hasIcon = this.hasInputPill && this.inputPill.iconName;\n    return classSet('slds-combobox__form-element slds-input-has-icon').add({\n      'slds-input-has-icon_right': !hasIcon,\n      'slds-input-has-icon_left-right': hasIcon\n    }).toString();\n  }\n\n  get computedAriaExpanded() {\n    return this._dropdownVisible ? 'true' : 'false';\n  }\n\n  updateItems(items) {\n    if (!items) {\n      return;\n    }\n\n    assert(Array.isArray(items), '\"items\" must be an array');\n    this._selectableItems = 0;\n    this._highlightedItemIndex = 0;\n    this._items = items.map(item => {\n      if (item.items) {\n        // This is a group\n        const groupCopy = {\n          label: item.label\n        };\n        groupCopy.items = item.items.map(groupItem => {\n          return this.processItem(groupItem);\n        });\n        return groupCopy;\n      }\n\n      return this.processItem(item);\n    });\n  }\n\n  highlightDefaultItem() {\n    this.removeHighlight(); // eslint-disable-next-line @lwc/lwc/no-async-operation\n\n    requestAnimationFrame(() => {\n      this.highlightOptionAndScrollIntoView(this.findOptionElementByIndex(this._highlightedItemIndex));\n    });\n  }\n\n  get isDropdownEmpty() {\n    // If the activity indicator is showing then it's not empty\n    return !this.showDropdownActivityIndicator && (!Array.isArray(this.items) || this.items.length === 0);\n  }\n\n  dropdownKeyboardInterface() {\n    const that = this;\n    return {\n      getTotalOptions() {\n        return that._selectableItems;\n      },\n\n      selectByIndex(index) {\n        that.selectOptionAndCloseDropdown(that.findOptionElementByIndex(index));\n      },\n\n      highlightOptionWithIndex(index) {\n        that.highlightOptionAndScrollIntoView(that.findOptionElementByIndex(index));\n      },\n\n      isInputReadOnly() {\n        return that._inputAriaReadOnly;\n      },\n\n      shouldPreventInputDeletion() {\n        return that.isAutocompleteEnabled && that.isDefaultReadOnlyTypes;\n      },\n\n      highlightOptionWithText(currentIndex, text) {\n        // This only supports a flat structure, groups are not supported\n        for (let index = currentIndex + 1; index < that._items.length; index++) {\n          const option = that._items[index];\n\n          if (option.selectable && option.text && option.text.toLowerCase().indexOf(text.toLowerCase()) === 0) {\n            that.highlightOptionAndScrollIntoView(that.findOptionElementByIndex(index));\n            return;\n          }\n        }\n\n        for (let index = 0; index < currentIndex; index++) {\n          const option = that._items[index];\n\n          if (option.selectable && option.text && option.text.toLowerCase().indexOf(text.toLowerCase()) === 0) {\n            that.highlightOptionAndScrollIntoView(that.findOptionElementByIndex(index));\n            return;\n          }\n        }\n      },\n\n      isDropdownVisible() {\n        return that._dropdownVisible;\n      },\n\n      openDropdownIfNotEmpty() {\n        that.openDropdownIfNotEmpty();\n      },\n\n      closeDropdown() {\n        that.closeDropdown();\n      }\n\n    };\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nLightningBaseCombobox.delegatesFocus = true;\n\n_registerDecorators(LightningBaseCombobox, {\n  publicProps: {\n    autocomplete: {\n      config: 3\n    },\n    inputText: {\n      config: 0\n    },\n    inputIconName: {\n      config: 0\n    },\n    inputIconSize: {\n      config: 0\n    },\n    inputIconAlternativeText: {\n      config: 0\n    },\n    inputMaxlength: {\n      config: 0\n    },\n    showInputActivityIndicator: {\n      config: 0\n    },\n    required: {\n      config: 0\n    },\n    dropdownAlignment: {\n      config: 0\n    },\n    placeholder: {\n      config: 0\n    },\n    inputLabel: {\n      config: 0\n    },\n    name: {\n      config: 0\n    },\n    inputPill: {\n      config: 0\n    },\n    attributionLogoUrl: {\n      config: 0\n    },\n    attributionLogoAssistiveText: {\n      config: 0\n    },\n    inputControlsElement: {\n      config: 3\n    },\n    inputDescribedByElements: {\n      config: 3\n    },\n    inputLabelledByElement: {\n      config: 3\n    },\n    dropdownHeight: {\n      config: 3\n    },\n    showDropdownActivityIndicator: {\n      config: 3\n    },\n    disabled: {\n      config: 3\n    },\n    readOnly: {\n      config: 3\n    },\n    variant: {\n      config: 3\n    },\n    items: {\n      config: 3\n    }\n  },\n  publicMethods: [\"highlightInputText\", \"focus\", \"focusAndOpenDropdownIfNotEmpty\", \"blur\"],\n  track: {\n    _showDropdownActivityIndicator: 1,\n    _items: 1,\n    _disabled: 1,\n    _dropdownVisible: 1,\n    _hasDropdownOpened: 1,\n    _highlightedOptionElementId: 1,\n    _variant: 1,\n    _dropdownHeight: 1,\n    _readonly: 1,\n    _logoLoaded: 1\n  },\n  fields: [\"_inputDescribedBy\", \"_inputAriaControls\", \"_activeElementDomId\", \"_autocomplete\"]\n});\n\nexport default _registerComponent(LightningBaseCombobox, {\n  tmpl: _tmpl\n});\n\nfunction scrollIntoViewIfNeeded(element, scrollingParent) {\n  const parentRect = scrollingParent.getBoundingClientRect();\n  const findMeRect = element.getBoundingClientRect();\n\n  if (findMeRect.top < parentRect.top) {\n    if (element.offsetTop + findMeRect.height < parentRect.height) {\n      // If element fits by scrolling to the top, then do that\n      scrollingParent.scrollTop = 0;\n    } else {\n      // Otherwise, top align the element\n      scrollingParent.scrollTop = element.offsetTop;\n    }\n  } else if (findMeRect.bottom > parentRect.bottom) {\n    // bottom align the element\n    scrollingParent.scrollTop += findMeRect.bottom - parentRect.bottom;\n  }\n}","export class BaseComboboxEvents {\n  constructor(baseCombobox) {\n    this.dispatchEvent = baseCombobox.dispatchEvent.bind(baseCombobox);\n  }\n\n  dispatchPillRemove(pill) {\n    this.dispatchEvent(new CustomEvent('pillremove', {\n      detail: {\n        item: pill\n      }\n    }));\n  }\n\n  dispatchEndReached() {\n    this.dispatchEvent(new CustomEvent('endreached'));\n  }\n\n  dispatchFocus() {\n    this.dispatchEvent(new CustomEvent('focus'));\n  }\n\n  dispatchBlur() {\n    this.dispatchEvent(new CustomEvent('blur'));\n  }\n\n  dispatchTextInput(text) {\n    this.dispatchEvent(new CustomEvent('textinput', {\n      detail: {\n        text\n      }\n    }));\n  }\n\n  dispatchTextChange(text) {\n    this.dispatchEvent(new CustomEvent('textchange', {\n      detail: {\n        text\n      }\n    }));\n  }\n\n  dispatchSelect(value) {\n    this.dispatchEvent(new CustomEvent('select', {\n      detail: {\n        value\n      }\n    }));\n  }\n\n  dispatchDropdownOpen() {\n    this.dispatchEvent(new CustomEvent('dropdownopen'));\n  }\n\n  dispatchDropdownOpenRequest() {\n    this.dispatchEvent(new CustomEvent('dropdownopenrequest'));\n  }\n\n}","import { runActionOnBufferedTypedCharacters } from 'lightning/utilsPrivate';\n\nfunction preventDefaultAndStopPropagation(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nfunction handleEnterKey({\n  event,\n  currentIndex,\n  dropdownInterface\n}) {\n  preventDefaultAndStopPropagation(event);\n\n  if (dropdownInterface.isDropdownVisible() && currentIndex >= 0) {\n    dropdownInterface.selectByIndex(currentIndex);\n  } else {\n    dropdownInterface.openDropdownIfNotEmpty();\n  }\n}\n\nfunction handlePageUpOrDownKey({\n  event,\n  currentIndex,\n  dropdownInterface\n}) {\n  preventDefaultAndStopPropagation(event);\n\n  if (!dropdownInterface.isDropdownVisible()) {\n    dropdownInterface.openDropdownIfNotEmpty();\n  }\n\n  const pageUpDownOptionSkipCount = 10;\n\n  if (dropdownInterface.getTotalOptions() > 0) {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    requestAnimationFrame(() => {\n      let highlightIndex = 0;\n\n      if (event.key === 'PageUp') {\n        highlightIndex = Math.max(currentIndex - pageUpDownOptionSkipCount, 0);\n      } else {\n        // Jump 10 options down\n        highlightIndex = Math.min(currentIndex + pageUpDownOptionSkipCount, dropdownInterface.getTotalOptions() - 1);\n      }\n\n      dropdownInterface.highlightOptionWithIndex(highlightIndex);\n    });\n  }\n}\n\nfunction handleHomeOrEndKey({\n  event,\n  dropdownInterface\n}) {\n  // If not a read-only input we want the default browser behaviour\n  if (!dropdownInterface.isInputReadOnly()) {\n    return;\n  }\n\n  preventDefaultAndStopPropagation(event);\n\n  if (!dropdownInterface.isDropdownVisible()) {\n    dropdownInterface.openDropdownIfNotEmpty();\n  }\n\n  if (dropdownInterface.getTotalOptions() > 0) {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    requestAnimationFrame(() => {\n      const highlightIndex = event.key === 'Home' ? 0 : dropdownInterface.getTotalOptions() - 1;\n      dropdownInterface.highlightOptionWithIndex(highlightIndex);\n    });\n  }\n}\n\nfunction handleUpOrDownKey({\n  event,\n  currentIndex,\n  dropdownInterface\n}) {\n  preventDefaultAndStopPropagation(event);\n\n  if (!dropdownInterface.isDropdownVisible()) {\n    dropdownInterface.openDropdownIfNotEmpty();\n  }\n\n  const isUpKey = event.key === 'Up' || event.key === 'ArrowUp';\n  let nextIndex;\n\n  if (currentIndex >= 0) {\n    nextIndex = isUpKey ? currentIndex - 1 : currentIndex + 1;\n\n    if (nextIndex >= dropdownInterface.getTotalOptions()) {\n      nextIndex = 0;\n    } else if (nextIndex < 0) {\n      nextIndex = dropdownInterface.getTotalOptions() - 1;\n    }\n  } else {\n    nextIndex = isUpKey ? dropdownInterface.getTotalOptions() - 1 : 0;\n  }\n\n  if (dropdownInterface.getTotalOptions() > 0) {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    requestAnimationFrame(() => {\n      dropdownInterface.highlightOptionWithIndex(nextIndex);\n    });\n  }\n}\n\nfunction handleEscapeOrTabKey({\n  event,\n  dropdownInterface\n}) {\n  if (dropdownInterface.isDropdownVisible()) {\n    event.stopPropagation();\n    dropdownInterface.closeDropdown();\n  }\n}\n\nfunction handleDeletionKeys({\n  event,\n  dropdownInterface\n}) {\n  if (dropdownInterface.shouldPreventInputDeletion()) {\n    event.preventDefault();\n  }\n}\n\nfunction handleTypedCharacters({\n  event,\n  currentIndex,\n  dropdownInterface\n}) {\n  if (event.key && event.key.length > 1) {\n    // not a printable character\n    return;\n  }\n\n  if (!dropdownInterface.isDropdownVisible()) {\n    dropdownInterface.openDropdownIfNotEmpty();\n  }\n\n  if (dropdownInterface.isInputReadOnly()) {\n    // The element should be read only, it's a work-around for IE11 as it will still make editable an input\n    // that has focus and was dynamically changed to be readonly on focus change. Remove once we no longer\n    // support IE11\n    event.preventDefault(); // eslint-disable-next-line @lwc/lwc/no-async-operation\n\n    requestAnimationFrame(() => runActionOnBufferedTypedCharacters(event, dropdownInterface.highlightOptionWithText.bind(this, currentIndex || 0)));\n  }\n}\n\nconst eventKeyToHandlerMap = {\n  Enter: handleEnterKey,\n  PageUp: handlePageUpOrDownKey,\n  PageDown: handlePageUpOrDownKey,\n  Home: handleHomeOrEndKey,\n  End: handleHomeOrEndKey,\n  Down: handleUpOrDownKey,\n  // IE11/Edge specific\n  Up: handleUpOrDownKey,\n  // IE11/Edge specific\n  ArrowUp: handleUpOrDownKey,\n  ArrowDown: handleUpOrDownKey,\n  Esc: handleEscapeOrTabKey,\n  // IE11/Edge specific\n  Escape: handleEscapeOrTabKey,\n  Tab: handleEscapeOrTabKey,\n  Backspace: handleDeletionKeys,\n  Delete: handleDeletionKeys\n};\nexport function handleKeyDownOnInput({\n  event,\n  currentIndex,\n  dropdownInterface\n}) {\n  const parameters = {\n    event,\n    currentIndex,\n    dropdownInterface\n  };\n\n  if (eventKeyToHandlerMap[event.key]) {\n    eventKeyToHandlerMap[event.key](parameters);\n  } else {\n    handleTypedCharacters(parameters);\n  }\n}","import _implicitStylesheets from \"./buttonIcon.css\";\n\nimport _implicitScopedStylesheets from \"./buttonIcon.scoped.css?scoped=true\";\n\nimport _lightningPrimitiveIcon from \"lightning/primitiveIcon\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 2\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {b: api_bind, c: api_custom_element, d: api_dynamic_text, t: api_text, h: api_element} = $api;\n  const {_m0, _m1} = $ctx;\n  return [api_element(\"button\", {\n    className: $cmp.computedButtonClass,\n    attrs: {\n      \"disabled\": $cmp.disabled ? \"\" : null,\n      \"name\": $cmp.name,\n      \"title\": $cmp.computedTitle,\n      \"accesskey\": $cmp.computedAccessKey,\n      \"type\": $cmp.normalizedType,\n      \"value\": $cmp.value,\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"aria-expanded\": $cmp.computedAriaExpanded,\n      \"aria-live\": $cmp.computedAriaLive,\n      \"aria-atomic\": $cmp.computedAriaAtomic,\n      \"aria-haspopup\": $cmp.computedAriaHasPopup\n    },\n    key: 0,\n    on: {\n      \"focus\": _m0 || ($ctx._m0 = api_bind($cmp.handleFocus)),\n      \"blur\": _m1 || ($ctx._m1 = api_bind($cmp.handleBlur))\n    }\n  }, [api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, {\n    props: {\n      \"iconName\": $cmp.iconName,\n      \"svgClass\": $cmp.computedIconClass,\n      \"variant\": \"bare\"\n    },\n    key: 1\n  }), $cmp.alternativeText ? api_element(\"span\", stc0, [api_text(api_dynamic_text($cmp.alternativeText))]) : null])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-buttonIcon_buttonIcon\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent } from \"lwc\";\nimport _tmpl from \"./buttonIcon.html\";\nimport { classSet } from 'lightning/utils';\nimport { normalizeString as normalize } from 'lightning/utilsPrivate'; // remove-next-line-for-c-namespace\n\nimport { Tooltip } from 'lightning/tooltipLibrary';\nimport LightningPrimitiveButton from 'lightning/primitiveButton';\nimport template from './buttonIcon.html';\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_VARIANT = 'border';\nconst DEFAULT_TYPE = 'button';\n/**\n * An icon-only HTML button.\n */\n\nclass LightningButtonIcon extends LightningPrimitiveButton {\n  constructor(...args) {\n    super(...args);\n    this.name = void 0;\n    this.value = void 0;\n    this.variant = DEFAULT_VARIANT;\n    this.iconName = void 0;\n    this.iconClass = void 0;\n    this.size = DEFAULT_SIZE;\n    this.type = DEFAULT_TYPE;\n    this.alternativeText = void 0;\n    this._tooltip = null;\n  }\n\n  // remove-next-line-for-c-namespace\n  set tooltip(value) {\n    if (this._tooltip) {\n      this._tooltip.value = value;\n    } else if (value) {\n      // Note that because the tooltip target is a child element it may not be present in the\n      // dom during initial rendering.\n      this._tooltip = new Tooltip(value, {\n        root: this,\n        target: () => this.template.querySelector('button')\n      });\n\n      this._tooltip.initialize();\n    }\n  } // remove-next-line-for-c-namespace\n\n  /**\n   * Text to display when the user mouses over or focuses on the button.\n   * The tooltip is auto-positioned relative to the button and screen space.\n   * @type {string}\n   * @param {string} value - The plain text string for the tooltip\n   */\n\n\n  get tooltip() {\n    return this._tooltip ? this._tooltip.value : undefined;\n  } // remove-next-line-for-c-namespace\n\n\n  // this is there because raptor currently doesnt support inheritance\n  render() {\n    return template;\n  }\n\n  get computedTitle() {\n    return this.state.title || this.alternativeText || '';\n  }\n\n  get normalizedVariant() {\n    return normalize(this.variant, {\n      fallbackValue: DEFAULT_VARIANT,\n      validValues: ['bare', 'brand', 'container', 'border', 'border-filled', 'bare-inverse', 'border-inverse']\n    });\n  }\n\n  get normalizedType() {\n    return normalize(this.type, {\n      fallbackValue: DEFAULT_TYPE,\n      validValues: ['button', 'reset', 'submit']\n    });\n  }\n\n  get normalizedSize() {\n    return normalize(this.size, {\n      fallbackValue: DEFAULT_SIZE,\n      validValues: ['xx-small', 'x-small', 'small', 'medium', 'large']\n    });\n  }\n\n  getVariantBase() {\n    return this.normalizedVariant.split('-')[0];\n  }\n\n  getVariantModifier() {\n    return this.normalizedVariant.split('-')[1] || '';\n  }\n\n  get computedButtonClass() {\n    const classes = classSet(super.computedButtonClass);\n    const {\n      normalizedSize,\n      normalizedVariant\n    } = this;\n    const isBare = this.getVariantBase(normalizedSize) === 'bare';\n    classes.add('slds-button_icon');\n\n    if (!isBare) {\n      // If the variant is not bare, then size the button instead of the icon\n      switch (normalizedSize) {\n        case 'small':\n          classes.add('slds-button_icon-small');\n          break;\n\n        case 'x-small':\n          classes.add('slds-button_icon-x-small');\n          break;\n\n        case 'xx-small':\n          classes.add('slds-button_icon-xx-small');\n          break;\n\n        case 'large':\n          // There is no `large` modifier for buttons so we should drop down one size to `medium`\n          console.warn(`<lightning-button-icon> The non-bare variants of buttonIcon do not support a size value of \"large\". Supported values include \"xx-small\", \"x-small\", \"small\", and \"medium\". Falling back to size value \"medium\".`);\n\n        /* falls through */\n\n        case 'medium': // Medium is the default size, and the default size doesn't require a size modifier\n\n        default:\n      }\n    }\n\n    return classes.add({\n      'slds-button_icon-bare': isBare,\n      'slds-button_icon-container': normalizedVariant === 'container',\n      'slds-button_icon-border': normalizedVariant === 'border',\n      'slds-button_icon-border-filled': normalizedVariant === 'border-filled',\n      'slds-button_icon-border-inverse': normalizedVariant === 'border-inverse',\n      'slds-button_icon-inverse': normalizedVariant === 'bare-inverse',\n      'slds-button_icon-brand': normalizedVariant === 'brand'\n    }).toString();\n  }\n\n  get computedIconClass() {\n    const {\n      normalizedSize,\n      normalizedVariant\n    } = this;\n    const isBare = this.getVariantBase(normalizedVariant) === 'bare';\n    const iconClass = this.iconClass || '';\n    const classes = classSet('slds-button__icon');\n    classes.add(iconClass);\n\n    if (isBare) {\n      // If the variant is bare, then size the icon instead of the button\n      switch (normalizedSize) {\n        case 'large':\n          classes.add('slds-button__icon_large');\n          break;\n\n        case 'small':\n          classes.add('slds-button__icon_small');\n          break;\n\n        case 'xx-small':\n          // There is no `xx-small` modifier for bare so we should drop down one size to `x-small`\n          console.warn(`<lightning-button-icon> The bare variant of buttonIcon does not support a size value of \"xx-small\". Supported values include \"x-small\", \"small\", \"medium\", and \"large\". The default is \"medium\".`);\n\n        /* falls through */\n\n        case 'x-small':\n          classes.add('slds-button__icon_x-small');\n          break;\n\n        case 'medium': // Medium is the default size, and the default size doesn't require a size modifier\n\n        default:\n      }\n    }\n\n    if (this.getVariantModifier(normalizedVariant) === 'inverse') {\n      classes.add('slds-button_icon-inverse');\n    }\n\n    return classes.toString();\n  }\n\n  handleFocus() {\n    this.dispatchEvent(new CustomEvent('focus'));\n  }\n\n  handleBlur() {\n    this.dispatchEvent(new CustomEvent('blur'));\n  }\n  /**\n   * Sets focus on the button.\n   */\n\n\n  focus() {\n    if (this._connected) {\n      this.template.querySelector('button').focus();\n    }\n  }\n  /**\n   * Simulates a mouse click on the button.\n   */\n\n\n  click() {\n    if (this._connected) {\n      this.template.querySelector('button').click();\n    }\n  }\n  /**\n   * Once we are connected, we fire a register event so the button-group (or other) component can register\n   * the buttons.\n   */\n\n\n  connectedCallback() {\n    this._connected = true;\n  }\n\n  renderedCallback() {\n    // initialize aria attributes in primitiveButton\n    super.renderedCallback(); // remove-next-line-for-c-namespace\n\n    if (this._tooltip && !this._tooltip.initialized) {\n      this._tooltip.initialize();\n    } // button is inherit from primitiveButton, button.css not working in this case.\n    // change host style to disable pointer event.\n\n\n    this.template.host.style.pointerEvents = this.disabled ? 'none' : '';\n  }\n\n  disconnectedCallback() {\n    this._connected = false;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nLightningButtonIcon.delegatesFocus = true;\n\n_registerDecorators(LightningButtonIcon, {\n  publicProps: {\n    name: {\n      config: 0\n    },\n    value: {\n      config: 0\n    },\n    variant: {\n      config: 0\n    },\n    iconName: {\n      config: 0\n    },\n    iconClass: {\n      config: 0\n    },\n    size: {\n      config: 0\n    },\n    type: {\n      config: 0\n    },\n    alternativeText: {\n      config: 0\n    },\n    tooltip: {\n      config: 3\n    }\n  },\n  publicMethods: [\"focus\", \"click\"],\n  fields: [\"_tooltip\"]\n});\n\nexport default _registerComponent(LightningButtonIcon, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./button.css\";\n\nimport _implicitScopedStylesheets from \"./button.scoped.css?scoped=true\";\n\nimport _lightningPrimitiveIcon from \"lightning/primitiveIcon\";\nimport {registerTemplate} from \"lwc\";\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {b: api_bind, c: api_custom_element, d: api_dynamic_text, t: api_text, h: api_element} = $api;\n  const {_m0, _m1} = $ctx;\n  return [api_element(\"button\", {\n    className: $cmp.computedButtonClass,\n    attrs: {\n      \"disabled\": $cmp.disabled ? \"\" : null,\n      \"name\": $cmp.name,\n      \"accesskey\": $cmp.computedAccessKey,\n      \"title\": $cmp.computedTitle,\n      \"type\": $cmp.normalizedType,\n      \"value\": $cmp.value,\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"aria-expanded\": $cmp.computedAriaExpanded,\n      \"aria-haspopup\": $cmp.computedAriaHasPopup,\n      \"aria-live\": $cmp.computedAriaLive,\n      \"aria-atomic\": $cmp.computedAriaAtomic\n    },\n    key: 0,\n    on: {\n      \"focus\": _m0 || ($ctx._m0 = api_bind($cmp.handleButtonFocus)),\n      \"blur\": _m1 || ($ctx._m1 = api_bind($cmp.handleButtonBlur))\n    }\n  }, [$cmp.showIconLeft ? api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, {\n    props: {\n      \"iconName\": $cmp.iconName,\n      \"svgClass\": $cmp.computedIconClass,\n      \"variant\": \"bare\"\n    },\n    key: 1\n  }) : null, api_text(api_dynamic_text($cmp.label)), $cmp.showIconRight ? api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, {\n    props: {\n      \"iconName\": $cmp.iconName,\n      \"svgClass\": $cmp.computedIconClass,\n      \"variant\": \"bare\"\n    },\n    key: 2\n  }) : null])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-button_button\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent } from \"lwc\";\nimport _tmpl from \"./button.html\";\nimport { classSet } from 'lightning/utils';\nimport { normalizeString as normalize } from 'lightning/utilsPrivate';\nimport LightningPrimitiveButton from 'lightning/primitiveButton';\nimport template from './button.html';\n/**\n * A clickable element used to perform an action.\n */\n\nclass LightningButton extends LightningPrimitiveButton {\n  constructor(...args) {\n    super(...args);\n    this.name = void 0;\n    this.value = void 0;\n    this.label = void 0;\n    this.variant = 'neutral';\n    this.iconName = void 0;\n    this.iconPosition = 'left';\n    this.type = 'button';\n    this.disableAnimation = void 0;\n    this.title = null;\n  }\n\n  render() {\n    return template;\n  }\n\n  get computedButtonClass() {\n    const classes = classSet(super.computedButtonClass);\n    return classes.add({\n      'slds-button_neutral': this.normalizedVariant === 'neutral',\n      'slds-button_brand': this.normalizedVariant === 'brand',\n      'slds-button_outline-brand': this.normalizedVariant === 'brand-outline',\n      'slds-button_destructive': this.normalizedVariant === 'destructive',\n      'slds-button_text-destructive': this.normalizedVariant === 'destructive-text',\n      'slds-button_inverse': this.normalizedVariant === 'inverse',\n      'slds-button_success': this.normalizedVariant === 'success'\n    }).toString();\n  }\n\n  get computedTitle() {\n    return this.title;\n  }\n\n  get normalizedVariant() {\n    return normalize(this.variant, {\n      fallbackValue: 'neutral',\n      validValues: ['base', 'neutral', 'brand', 'brand-outline', 'destructive', 'destructive-text', 'inverse', 'success']\n    });\n  }\n\n  get normalizedType() {\n    return normalize(this.type, {\n      fallbackValue: 'button',\n      validValues: ['button', 'reset', 'submit']\n    });\n  }\n\n  get normalizedIconPosition() {\n    return normalize(this.iconPosition, {\n      fallbackValue: 'left',\n      validValues: ['left', 'right']\n    });\n  }\n\n  get showIconLeft() {\n    return this.iconName && this.normalizedIconPosition === 'left';\n  }\n\n  get showIconRight() {\n    return this.iconName && this.normalizedIconPosition === 'right';\n  }\n\n  get computedIconClass() {\n    return classSet('slds-button__icon').add({\n      'slds-button__icon_left': this.normalizedIconPosition === 'left',\n      'slds-button__icon_right': this.normalizedIconPosition === 'right'\n    }).toString();\n  }\n\n  handleButtonFocus() {\n    this.dispatchEvent(new CustomEvent('focus'));\n  }\n\n  handleButtonBlur() {\n    this.dispatchEvent(new CustomEvent('blur'));\n  }\n  /**\n   * Sets focus on the button.\n   */\n\n\n  focus() {\n    if (this._connected) {\n      this.button.focus();\n    }\n  }\n  /**\n   * Simulates a mouse click on the button.\n   */\n\n\n  click() {\n    if (this._connected) {\n      this.button.click();\n    }\n  }\n  /**\n   * Once we are connected, we fire a register event so the button-group (or other) component can register\n   * the buttons.\n   */\n\n\n  connectedCallback() {\n    this._connected = true;\n  }\n\n  get button() {\n    return this.template.querySelector('button');\n  }\n\n  renderedCallback() {\n    // initialize aria attributes in primitiveButton\n    super.renderedCallback(); // button is inherit from primitiveButton, button.css not working in this case.\n    // change host style to disable pointer event.\n\n    this.template.host.style.pointerEvents = this.disabled ? 'none' : '';\n  }\n\n  disconnectedCallback() {\n    this._connected = false;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nLightningButton.delegatesFocus = true;\n\n_registerDecorators(LightningButton, {\n  publicProps: {\n    name: {\n      config: 0\n    },\n    value: {\n      config: 0\n    },\n    label: {\n      config: 0\n    },\n    variant: {\n      config: 0\n    },\n    iconName: {\n      config: 0\n    },\n    iconPosition: {\n      config: 0\n    },\n    type: {\n      config: 0\n    },\n    disableAnimation: {\n      config: 0\n    }\n  },\n  publicMethods: [\"focus\", \"click\"],\n  track: {\n    title: 1\n  }\n});\n\nexport default _registerComponent(LightningButton, {\n  tmpl: _tmpl\n});\nLightningButton.interopMap = {\n  exposeNativeEvent: {\n    click: true,\n    focus: true,\n    blur: true\n  }\n};","function stylesheet(token, useActualHostSelector, useNativeDirPseudoclass) {\n  var shadowSelector = token ? (\"[\" + token + \"]\") : \"\";\n  var hostSelector = token ? (\"[\" + token + \"-host]\") : \"\";\n  return (useNativeDirPseudoclass ? '' : '[dir=\"rtl\"]') + \" .slds-dropdown_left\" + (useNativeDirPseudoclass ? ':dir(rtl)' : '') + shadowSelector + \" {left: 0;right: auto;}\";\n  /*LWC compiler v2.13.0*/\n}\nexport default [stylesheet];","import _implicitStylesheets from \"./calendar.css\";\n\nimport _implicitScopedStylesheets from \"./calendar.scoped.css?scoped=true\";\n\nimport _lightningButtonIcon from \"lightning/buttonIcon\";\nimport _lightningSelect from \"lightning/select\";\nimport _lightningFocusTrap from \"lightning/focusTrap\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  \"slds-datepicker\": true,\n  \"slds-dropdown\": true,\n  \"slds-dropdown_left\": true\n};\nconst stc1 = {\n  key: 1\n};\nconst stc2 = {\n  classMap: {\n    \"slds-datepicker__filter\": true,\n    \"slds-grid\": true\n  },\n  key: 2\n};\nconst stc3 = {\n  classMap: {\n    \"slds-datepicker__filter_month\": true,\n    \"slds-grid\": true,\n    \"slds-grid_align-spread\": true,\n    \"slds-grow\": true\n  },\n  key: 3\n};\nconst stc4 = {\n  classMap: {\n    \"slds-align-middle\": true\n  },\n  key: 4\n};\nconst stc5 = {\n  \"slds-align-middle\": true\n};\nconst stc6 = {\n  classMap: {\n    \"slds-align-middle\": true\n  },\n  key: 7\n};\nconst stc7 = {\n  classMap: {\n    \"slds-shrink-none\": true\n  },\n  key: 9\n};\nconst stc8 = {\n  \"slds-datepicker__month\": true\n};\nconst stc9 = {\n  key: 12\n};\nconst stc10 = {\n  \"slds-day\": true\n};\nconst stc11 = {\n  \"tabindex\": \"-1\",\n  \"role\": \"button\"\n};\nconst stc12 = {\n  \"slds-button\": true,\n  \"slds-align_absolute-center\": true,\n  \"slds-text-link\": true\n};\nconst stc13 = {\n  \"name\": \"today\",\n  \"type\": \"button\"\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {b: api_bind, c: api_custom_element, h: api_element, gid: api_scoped_id, d: api_dynamic_text, t: api_text, k: api_key, i: api_iterator, ti: api_tab_index} = $api;\n  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6} = $ctx;\n  return [api_element(\"div\", {\n    classMap: stc0,\n    attrs: {\n      \"aria-hidden\": \"false\",\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"role\": \"dialog\",\n      \"tabindex\": \"-1\"\n    },\n    key: 0\n  }, [api_custom_element(\"lightning-focus-trap\", _lightningFocusTrap, stc1, [api_element(\"div\", stc2, [api_element(\"div\", stc3, [api_element(\"div\", stc4, [api_custom_element(\"lightning-button-icon\", _lightningButtonIcon, {\n    props: {\n      \"iconName\": \"utility:left\",\n      \"variant\": \"container\",\n      \"alternativeText\": $cmp.i18n.previousMonth\n    },\n    key: 5,\n    on: {\n      \"click\": _m0 || ($ctx._m0 = api_bind($cmp.goToPreviousMonth))\n    }\n  })]), api_element(\"h2\", {\n    classMap: stc5,\n    attrs: {\n      \"aria-atomic\": \"true\",\n      \"aria-live\": \"assertive\",\n      \"role\": \"alert\",\n      \"id\": api_scoped_id(\"month-title\"),\n      \"data-index\": $cmp.monthIndex\n    },\n    key: 6\n  }, [api_text(api_dynamic_text($cmp.computedMonthTitle))]), api_element(\"div\", stc6, [api_custom_element(\"lightning-button-icon\", _lightningButtonIcon, {\n    props: {\n      \"iconName\": \"utility:right\",\n      \"variant\": \"container\",\n      \"alternativeText\": $cmp.i18n.nextMonth\n    },\n    key: 8,\n    on: {\n      \"click\": _m1 || ($ctx._m1 = api_bind($cmp.goToNextMonth))\n    }\n  })])]), api_element(\"div\", stc7, [api_custom_element(\"lightning-select\", _lightningSelect, {\n    props: {\n      \"value\": $cmp.calendarYear,\n      \"label\": $cmp.i18n.yearSelector,\n      \"variant\": \"label-hidden\",\n      \"options\": $cmp.computedYearList\n    },\n    key: 10,\n    on: {\n      \"change\": _m2 || ($ctx._m2 = api_bind($cmp.handleYearChange)),\n      \"click\": _m3 || ($ctx._m3 = api_bind($cmp.handleYearSelectClick))\n    }\n  })])]), api_element(\"table\", {\n    classMap: stc8,\n    attrs: {\n      \"aria-labelledby\": api_scoped_id(\"month-title\"),\n      \"role\": \"grid\"\n    },\n    key: 11\n  }, [api_element(\"thead\", stc9, [api_element(\"tr\", {\n    attrs: {\n      \"id\": api_scoped_id(\"weekdays-element\")\n    },\n    key: 13\n  }, api_iterator($cmp.computedWeekdayLabels, function (weekday) {\n    return api_element(\"th\", {\n      attrs: {\n        \"id\": api_scoped_id(weekday.fullName),\n        \"scope\": \"col\"\n      },\n      key: api_key(14, weekday.fullName)\n    }, [api_element(\"abbr\", {\n      attrs: {\n        \"title\": weekday.fullName\n      },\n      key: 15\n    }, [api_text(api_dynamic_text(weekday.shortName))])]);\n  }))]), api_element(\"tbody\", {\n    key: 16,\n    on: {\n      \"keydown\": _m4 || ($ctx._m4 = api_bind($cmp.handleCalendarKeyDown))\n    }\n  }, api_iterator($cmp.computedMonth, function (week, index) {\n    return api_element(\"tr\", {\n      key: api_key(17, week.id)\n    }, api_iterator(week.days, function (day) {\n      return api_element(\"td\", {\n        className: day.className,\n        attrs: {\n          \"role\": \"gridcell\",\n          \"aria-selected\": day.isSelected,\n          \"aria-current\": day.ariaCurrent,\n          \"tabindex\": api_tab_index(day.tabIndex),\n          \"data-value\": day.dateValue\n        },\n        key: api_key(18, day.dateValue)\n      }, [api_element(\"span\", {\n        classMap: stc10,\n        attrs: stc11,\n        key: 19,\n        on: {\n          \"click\": _m5 || ($ctx._m5 = api_bind($cmp.handleDateClick))\n        }\n      }, [api_text(api_dynamic_text(day.dayInMonth))])]);\n    }));\n  }))]), api_element(\"button\", {\n    classMap: stc12,\n    attrs: stc13,\n    key: 20,\n    on: {\n      \"click\": _m6 || ($ctx._m6 = api_bind($cmp.handleTodayClick))\n    }\n  }, [api_text(api_dynamic_text($cmp.i18n.today))])])])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-calendar_calendar\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./calendar.html\";\nimport labelAriaLabelMonth from '@salesforce/label/LightningDateTimePicker.ariaLabelMonth';\nimport labelNextMonth from '@salesforce/label/LightningDateTimePicker.nextMonth';\nimport labelPreviousMonth from '@salesforce/label/LightningDateTimePicker.previousMonth';\nimport labelToday from '@salesforce/label/LightningDateTimePicker.today';\nimport labelYearSelector from '@salesforce/label/LightningDateTimePicker.yearSelector';\nimport { classSet } from 'lightning/utils';\nimport { generateUniqueId } from 'lightning/inputUtils';\nimport firstDayOfWeek from '@salesforce/i18n/firstDayOfWeek';\nimport { handleKeyDownOnCalendar } from './keyboard';\nimport salesforceLanguage from '@salesforce/i18n/lang';\nimport showJapaneseCalendar from '@salesforce/i18n/showJapaneseCalendar';\nimport { toOtherCalendar, toLocalizedDigits, getToday, isBefore, isAfter, parseDateTime, getISODateString, getNameOfWeekdays, getMonthNames } from 'lightning/internationalizationLibrary';\nimport { STANDARD_DATE_FORMAT, TIME_SEPARATOR } from 'lightning/iso8601Utils';\nconst i18n = {\n  ariaLabelMonth: labelAriaLabelMonth,\n  nextMonth: labelNextMonth,\n  previousMonth: labelPreviousMonth,\n  today: labelToday,\n  yearSelector: labelYearSelector\n};\nconst WEEKS_PER_MONTH = 6;\nconst DAYS_PER_WEEK = 7;\nconst calendarCache = {}; // cache of calendar cells for a given year/month\n// Japanese Era (https://en.wikipedia.org/wiki/Regnal_year#Japanese)\n\nconst JAPANESE_CALENDAR_YEARS = [// note: the order matters. the latest comes first.\n{\n  key: 'R',\n  year: 2019,\n  label: '\\u4ee4\\u548c'\n}, // Reiwa:   5/1/2019\n{\n  key: 'H',\n  year: 1989,\n  label: '\\u5e73\\u6210'\n}, // Heisei:  1/8/1989\n{\n  key: 'S',\n  year: 1926,\n  label: '\\u662d\\u548c'\n}, // Showa:  12/25/1926\n{\n  key: 'T',\n  year: 1912,\n  label: '\\u5927\\u6b63'\n}, // Taisho:  7/30/1912\n{\n  key: 'M',\n  year: 1868,\n  label: '\\u660e\\u6cbb'\n} // Meiji:   1/1/1868\n];\n\nclass LightningCalendar extends LightningElement {\n  get value() {\n    return this.selectedDate;\n  }\n\n  set value(newValue) {\n    // if value is an ISO string, only fetch the time part\n    const dateOnlyString = typeof newValue === 'string' ? newValue.split(TIME_SEPARATOR)[0] : newValue;\n\n    if (dateOnlyString !== this.selectedDate) {\n      this.selectedDate = dateOnlyString;\n\n      if (!this._connected) {\n        return;\n      }\n\n      const newDate = this.parseDate(dateOnlyString); // if the date is invalid, render today's date\n\n      if (!newDate) {\n        this.selectedDate = null;\n        this.renderToday();\n      } else {\n        this.selectDate(newDate);\n      }\n    }\n  }\n\n  constructor() {\n    super();\n    this.calendarYear = null;\n    this.calendarMonth = null;\n    this.min = void 0;\n    this.max = void 0;\n    this.uniqueId = generateUniqueId();\n  }\n\n  renderedCallback() {\n    this.dispatchEvent(new CustomEvent('ready'));\n  }\n\n  connectedCallback() {\n    this._connected = true;\n    this.todayDate = getToday();\n    const renderDate = this.getSelectedDate() || this.getTodaysDate();\n    this.renderCalendar(renderDate);\n    this.keyboardInterface = this.calendarKeyboardInterface();\n  }\n\n  disconnectedCallback() {\n    this._connected = false;\n  }\n  /**\n   * Sets focus on the focusable date cell in the calendar.\n   */\n\n\n  focus() {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    requestAnimationFrame(() => {\n      const dateElement = this.getFocusableDateCell();\n\n      if (dateElement) {\n        dateElement.focus();\n      }\n    });\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get computedAriaLabel() {\n    const renderedMonth = this.getCalendarDate().getMonth();\n    return i18n.ariaLabelMonth + getMonthNames()[renderedMonth].fullName;\n  }\n\n  get computedMonthTitle() {\n    const renderedMonth = this.getCalendarDate().getMonth();\n    return getMonthNames()[renderedMonth].fullName;\n  }\n\n  get computedWeekdayLabels() {\n    const nameOfWeekdays = getNameOfWeekdays();\n    const firstDay = this.getFirstDayOfWeek();\n    const computedWeekdayLabels = []; // We need to adjust the weekday labels to start from the locale's first day of week\n\n    for (let i = firstDay; i < nameOfWeekdays.length; i++) {\n      computedWeekdayLabels.push(nameOfWeekdays[i]);\n    }\n\n    for (let i = 0; i < firstDay; i++) {\n      computedWeekdayLabels.push(nameOfWeekdays[i]);\n    }\n\n    return computedWeekdayLabels;\n  }\n\n  get computedSelectElementId() {\n    return this.uniqueId + '-select';\n  }\n\n  get computedWeekdaysElementId() {\n    return this.uniqueId + '-weekdays';\n  }\n\n  get computedMonthTitleId() {\n    return this.uniqueId + '-month';\n  }\n\n  get computedYearList() {\n    const sampleDate = new Date();\n    const currentYear = sampleDate.getFullYear();\n    const minDate = this.parseDate(this.min);\n    const maxDate = this.parseDate(this.max);\n    const minYear = minDate ? minDate.getFullYear() : currentYear - 100;\n    const maxYear = maxDate ? maxDate.getFullYear() : currentYear + 100;\n    const yearList = [];\n\n    for (let year = minYear; year <= maxYear; year++) {\n      yearList.push({\n        label: this.getYearDisplayValue(sampleDate, year),\n        value: year\n      });\n    }\n\n    return yearList;\n  }\n\n  get monthIndex() {\n    return this.getCalendarDate().getMonth();\n  }\n\n  getJapaneseCalendarYear(year) {\n    const JAPANESE = 'ja';\n\n    const displayValue = (japaneseYearData, useKey) => {\n      return useKey ? japaneseYearData.key : japaneseYearData.label;\n    };\n\n    let useShortName = salesforceLanguage !== JAPANESE;\n\n    for (let i = 0; i < JAPANESE_CALENDAR_YEARS.length; i++) {\n      if (year < JAPANESE_CALENDAR_YEARS[i].year) {\n        continue;\n      }\n\n      let jpYear = displayValue(JAPANESE_CALENDAR_YEARS[i], useShortName) + (year - JAPANESE_CALENDAR_YEARS[i].year + 1);\n\n      if (year === JAPANESE_CALENDAR_YEARS[i].year && i < JAPANESE_CALENDAR_YEARS.length - 1) {\n        // transition year -- display both\n        let previousJapaneseYearData = JAPANESE_CALENDAR_YEARS[i + 1];\n        jpYear += '/' + displayValue(previousJapaneseYearData, useShortName) + (year - previousJapaneseYearData.year + 1);\n      }\n\n      return jpYear;\n    }\n\n    return null;\n  }\n\n  getYearDisplayValue(date, yearValue) {\n    date.setFullYear(yearValue);\n    let displayValue = toLocalizedDigits(String(toOtherCalendar(date).getFullYear())); // additional display value for Japanese calendar year support\n\n    if (showJapaneseCalendar) {\n      let jpYear = this.getJapaneseCalendarYear(yearValue);\n\n      if (jpYear) {\n        displayValue += ' (' + jpYear + ')';\n      }\n    }\n\n    return displayValue;\n  }\n\n  get computedMonth() {\n    if (!this._connected) {\n      return [];\n    }\n\n    this.removeCurrentlySelectedDateAttributes();\n    const selectedDate = this.getSelectedDate();\n    const renderDate = this.getCalendarDate();\n    const cacheKey = this.getCalendarCacheKey(renderDate, selectedDate);\n\n    if (cacheKey in calendarCache) {\n      return calendarCache[cacheKey];\n    }\n\n    const todayDate = this.getTodaysDate();\n    const focusableDate = this.getInitialFocusDate(todayDate, selectedDate, renderDate);\n    const calendarDates = {\n      selectedDate,\n      renderDate,\n      focusableDate,\n      todayDate,\n      minDate: this.parseDate(this.min),\n      maxDate: this.parseDate(this.max)\n    };\n    const monthCells = [];\n    const date = this.getCalendarStartDate(renderDate);\n\n    for (let week = 0; week < WEEKS_PER_MONTH; week++) {\n      const weekCells = {\n        id: week,\n        days: []\n      };\n\n      for (let weekday = 0; weekday < DAYS_PER_WEEK; weekday++) {\n        const dayCell = this.getDateCellAttributes(date, calendarDates);\n        weekCells.days.push(dayCell);\n        date.setDate(date.getDate() + 1);\n      }\n\n      monthCells.push(weekCells);\n    }\n\n    calendarCache[cacheKey] = monthCells;\n    return monthCells;\n  }\n\n  getDateCellAttributes(date, calendarDates) {\n    const isInAdjacentMonth = !this.dateInCalendar(date, calendarDates.renderDate) || !this.isBetween(date, calendarDates.minDate, calendarDates.maxDate);\n    const isSelected = this.isSame(date, calendarDates.selectedDate);\n    const isToday = this.isSame(date, calendarDates.todayDate);\n    const ariaCurrent = isToday ? 'date' : false;\n    const tabIndex = this.isSame(date, calendarDates.focusableDate) ? '0' : false;\n    const className = classSet().add({\n      'slds-is-today': isToday,\n      'slds-is-selected': isSelected,\n      'slds-day_adjacent-month': isInAdjacentMonth\n    }).toString();\n    return {\n      dayInMonth: toLocalizedDigits(String(date.getDate())),\n      dateValue: this.formatDate(date),\n      isSelected: isSelected ? 'true' : 'false',\n      className,\n      tabIndex,\n      ariaCurrent\n    };\n  }\n\n  dispatchSelectEvent() {\n    this.dispatchEvent(new CustomEvent('select', {\n      composed: true,\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        value: this.selectedDate\n      }\n    }));\n  } // Determines if the date is in the rendered month/year calendar.\n\n\n  dateInCalendar(date, calendarDate) {\n    const renderedCalendar = calendarDate || this.getCalendarDate();\n    return date.getMonth() === renderedCalendar.getMonth() && date.getFullYear() === renderedCalendar.getFullYear();\n  }\n\n  getInitialFocusDate(todayDate, selectedDate, renderedDate) {\n    if (selectedDate && this.dateInCalendar(selectedDate, renderedDate)) {\n      return selectedDate;\n    }\n\n    if (this.dateInCalendar(todayDate, renderedDate)) {\n      return todayDate;\n    }\n\n    return new Date(renderedDate.getFullYear(), renderedDate.getMonth(), 1);\n  }\n\n  getTodaysDate() {\n    if (this.todayDate) {\n      return this.parseDate(this.todayDate);\n    } // Today's date will be fetched in connectedCallback. In the meantime, use the date based on the device timezone.\n\n\n    return new Date();\n  }\n\n  getSelectedDate() {\n    return this.parseDate(this.selectedDate);\n  } // returns the month and year in the calendar\n\n\n  getCalendarDate() {\n    if (this.calendarYear) {\n      return new Date(this.calendarYear, this.calendarMonth, 1);\n    }\n\n    return this.getTodaysDate();\n  }\n\n  getCalendarStartDate(renderedDate) {\n    const firstDayOfMonth = new Date(renderedDate.getFullYear(), renderedDate.getMonth(), 1);\n    return this.getStartOfWeek(firstDayOfMonth);\n  }\n\n  getStartOfWeek(dayInWeek) {\n    const firstDay = this.getFirstDayOfWeek(); // Negative dates in JS will subtract days from the 1st of the given month\n\n    let startDay = dayInWeek.getDay();\n\n    while (startDay !== firstDay) {\n      dayInWeek.setDate(dayInWeek.getDate() - 1);\n      startDay = dayInWeek.getDay();\n    }\n\n    return dayInWeek;\n  }\n\n  getFirstDayOfWeek() {\n    return firstDayOfWeek - 1; // In Java, week days are 1 - 7\n  } // This method is called when a new value is set, or when you click the today button.\n  // In both cases, we need to check if newValue is in the currently rendered calendar\n\n\n  selectDate(newDate) {\n    if (this.dateInCalendar(newDate)) {\n      const dateElement = this.getElementByDate(this.formatDate(newDate));\n      this.selectDateInCalendar(dateElement);\n    } else {\n      this.renderCalendar(newDate);\n    }\n  } // Select a date in current calendar without the need to re-render the calendar\n\n\n  selectDateInCalendar(dateElement) {\n    this.selectedDate = dateElement.getAttribute('data-value');\n    this.removeCurrentlySelectedDateAttributes();\n    this.addSelectedDateAttributes(dateElement);\n  }\n\n  selectDateInCalendarAndDispatchSelect(dateElement) {\n    this.selectDateInCalendar(dateElement);\n    this.dispatchSelectEvent();\n  } // we should be able to control the select value with an attribute once we have a select component\n\n\n  selectYear(year) {\n    const optionElement = this.template.querySelector(`option[value='${year}']`);\n\n    if (optionElement) {\n      optionElement.selected = true;\n    }\n  }\n\n  getElementByDate(dateString) {\n    return this.template.querySelector(`td[data-value='${dateString}']`);\n  }\n\n  getFocusableDateCell() {\n    return this.template.querySelector(`td[tabIndex='0']`);\n  }\n\n  unfocusDateCell(element) {\n    if (element) {\n      element.removeAttribute('tabIndex');\n    }\n  }\n\n  focusDateCell(element) {\n    if (element) {\n      element.setAttribute('tabIndex', 0);\n      element.focus();\n    }\n  }\n\n  focusElementByDate(date) {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    requestAnimationFrame(() => {\n      const element = this.getElementByDate(this.formatDate(date));\n\n      if (element) {\n        this.unfocusDateCell(this.getFocusableDateCell());\n        this.focusDateCell(element);\n      }\n    });\n  }\n\n  renderCalendar(newDate) {\n    this.calendarMonth = newDate.getMonth();\n    this.calendarYear = newDate.getFullYear();\n    this.selectYear(newDate.getFullYear());\n  }\n\n  renderToday() {\n    const todaysDate = this.getTodaysDate();\n\n    if (this.dateInCalendar(todaysDate)) {\n      this.removeCurrentlySelectedDateAttributes();\n      this.unfocusDateCell(this.getFocusableDateCell());\n      const todayElement = this.getElementByDate(this.todayDate);\n      todayElement.setAttribute('tabIndex', 0);\n    } else {\n      this.renderCalendar(todaysDate);\n    }\n  }\n\n  removeCurrentlySelectedDateAttributes() {\n    const currentlySelectedElement = this.template.querySelector(`td[class*='slds-is-selected']`);\n\n    if (currentlySelectedElement) {\n      currentlySelectedElement.classList.remove('slds-is-selected');\n      currentlySelectedElement.setAttribute('aria-selected', 'false');\n    }\n\n    this.unfocusDateCell(this.getFocusableDateCell());\n  }\n\n  addSelectedDateAttributes(dateElement) {\n    this.focusDateCell(dateElement);\n    dateElement.classList.add('slds-is-selected');\n    dateElement.setAttribute('aria-selected', 'true');\n  }\n\n  handleCalendarKeyDown(event) {\n    const dateString = event.target.getAttribute('data-value');\n    handleKeyDownOnCalendar(event, this.parseDate(dateString), this.keyboardInterface);\n  }\n\n  handleDateClick(event) {\n    event.stopPropagation();\n    const tdElement = event.target.parentElement;\n    this.selectDateInCalendarAndDispatchSelect(tdElement);\n  }\n\n  handleTodayClick(event) {\n    event.stopPropagation();\n    this.selectedDate = this.todayDate;\n    this.selectDate(this.getTodaysDate());\n    this.dispatchSelectEvent();\n  }\n\n  handleYearSelectClick(event) {\n    event.stopPropagation();\n  }\n\n  handleYearChange(event) {\n    event.stopPropagation();\n    const newYearValue = event.target.value;\n\n    if (this.calendarYear !== newYearValue) {\n      this.calendarYear = newYearValue;\n    }\n  }\n\n  goToNextMonth(event) {\n    event.stopPropagation();\n    const calendarDate = this.getCalendarDate();\n    calendarDate.setMonth(calendarDate.getMonth() + 1);\n    this.renderCalendar(calendarDate);\n  }\n\n  goToPreviousMonth(event) {\n    event.stopPropagation();\n    const calendarDate = this.getCalendarDate();\n    calendarDate.setMonth(calendarDate.getMonth() - 1);\n    this.renderCalendar(calendarDate);\n  }\n\n  calendarKeyboardInterface() {\n    const that = this;\n    return {\n      focusDate(newDate) {\n        if (!that.dateInCalendar(newDate)) {\n          that.renderCalendar(newDate);\n        }\n\n        that.focusElementByDate(newDate);\n      },\n\n      getStartOfWeek(dayInWeek) {\n        return that.getStartOfWeek(dayInWeek);\n      },\n\n      selectDate(dateElement) {\n        that.selectDateInCalendarAndDispatchSelect(dateElement);\n      }\n\n    };\n  }\n\n  formatDate(date) {\n    return getISODateString(date);\n  }\n\n  parseDate(dateString) {\n    return parseDateTime(dateString, STANDARD_DATE_FORMAT, true);\n  }\n\n  isSame(date1, date2) {\n    if (!date1 || !date2) {\n      return false;\n    }\n\n    return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate() // getDate returns the day in month whereas getDay returns the weekday number\n    ;\n  }\n\n  isBetween(date, date1, date2) {\n    let isBeforeEndDate = true;\n    let isAfterStartDate = true;\n\n    if (date2) {\n      isBeforeEndDate = isBefore(date, date2, 'day') || this.isSame(date, date2);\n    }\n\n    if (date1) {\n      isAfterStartDate = isAfter(date, date1, 'day') || this.isSame(date, date1);\n    }\n\n    return isBeforeEndDate && isAfterStartDate;\n  }\n\n  getCalendarCacheKey(renderDate, selectedDate) {\n    let key = renderDate.getFullYear() + '-' + renderDate.getMonth(); // Having the key include min/max seems enough for now.\n    // We're not going to complicate things by checking if renderDate falls before/after the min/max.\n\n    key += this.min ? 'min' + this.min : '';\n    key += this.max ? 'max' + this.max : '';\n\n    if (selectedDate && this.dateInCalendar(selectedDate, renderDate)) {\n      key += '_' + selectedDate.getDate();\n    }\n\n    return key;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningCalendar, {\n  publicProps: {\n    min: {\n      config: 0\n    },\n    max: {\n      config: 0\n    },\n    value: {\n      config: 3\n    }\n  },\n  publicMethods: [\"focus\"],\n  track: {\n    calendarYear: 1,\n    calendarMonth: 1\n  }\n});\n\nexport default _registerComponent(LightningCalendar, {\n  tmpl: _tmpl\n});","import { normalizeKeyValue } from 'lightning/utilsPrivate';\nexport function handleKeyDownOnCalendar(event, date, calendarInterface) {\n  const tdElement = event.target;\n  const keyValue = normalizeKeyValue(event.key);\n\n  switch (keyValue) {\n    case 'ArrowUp':\n      preventDefaultAndStopPropagation(event);\n      date.setDate(date.getDate() - 7);\n      calendarInterface.focusDate(date);\n      break;\n\n    case 'ArrowDown':\n      preventDefaultAndStopPropagation(event);\n      date.setDate(date.getDate() + 7);\n      calendarInterface.focusDate(date);\n      break;\n\n    case 'ArrowRight':\n      preventDefaultAndStopPropagation(event);\n      date.setDate(date.getDate() + 1);\n      calendarInterface.focusDate(date);\n      break;\n\n    case 'ArrowLeft':\n      preventDefaultAndStopPropagation(event);\n      date.setDate(date.getDate() - 1);\n      calendarInterface.focusDate(date);\n      break;\n\n    case 'Enter':\n    case ' ':\n      preventDefaultAndStopPropagation(event);\n      calendarInterface.selectDate(tdElement);\n      break;\n\n    case 'PageUp':\n      preventDefaultAndStopPropagation(event);\n\n      if (event.altKey) {\n        date.setFullYear(date.getFullYear() - 1);\n      } else {\n        date.setMonth(date.getMonth() - 1);\n      }\n\n      calendarInterface.focusDate(date);\n      break;\n\n    case 'PageDown':\n      preventDefaultAndStopPropagation(event);\n\n      if (event.altKey) {\n        date.setFullYear(date.getFullYear() + 1);\n      } else {\n        date.setMonth(date.getMonth() + 1);\n      }\n\n      calendarInterface.focusDate(date);\n      break;\n\n    case 'Home':\n      {\n        preventDefaultAndStopPropagation(event);\n        const startOfWeek = calendarInterface.getStartOfWeek(date);\n        calendarInterface.focusDate(startOfWeek);\n        break;\n      }\n\n    case 'End':\n      {\n        preventDefaultAndStopPropagation(event);\n        const endOfWeek = calendarInterface.getStartOfWeek(date);\n        endOfWeek.setDate(endOfWeek.getDate() + 6);\n        calendarInterface.focusDate(endOfWeek);\n        break;\n      }\n\n    default:\n  }\n}\n\nfunction preventDefaultAndStopPropagation(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}","import _implicitStylesheets from \"./colorPickerCustom.css\";\n\nimport _implicitScopedStylesheets from \"./colorPickerCustom.scoped.css?scoped=true\";\n\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-color-picker__custom\": true\n  },\n  key: 0\n};\nconst stc1 = {\n  \"slds-assistive-text\": true\n};\nconst stc2 = {\n  \"slds-m-bottom_small\": true\n};\nconst stc3 = {\n  \"data-id\": \"color-gradient\"\n};\nconst stc4 = {\n  \"slds-color-picker__range-indicator\": true\n};\nconst stc5 = [[\"position\", \"absolute\", false], [\"display\", \"inline\", false]];\nconst stc6 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 5\n};\nconst stc7 = {\n  classMap: {\n    \"slds-color-picker__hue-and-preview\": true\n  },\n  key: 6\n};\nconst stc8 = {\n  \"slds-color-picker__hue-slider\": true\n};\nconst stc9 = {\n  \"slds-swatch\": true\n};\nconst stc10 = {\n  \"data-id\": \"color-preview\"\n};\nconst stc11 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  attrs: {\n    \"aria-hidden\": \"true\"\n  },\n  key: 10\n};\nconst stc12 = {\n  classMap: {\n    \"slds-color-picker__custom-inputs\": true\n  },\n  key: 11\n};\nconst stc13 = {\n  classMap: {\n    \"slds-form-element\": true,\n    \"slds-color-picker__input-custom-hex\": true\n  },\n  key: 12\n};\nconst stc14 = {\n  \"slds-form-element__label\": true\n};\nconst stc15 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 14\n};\nconst stc16 = {\n  \"slds-input\": true\n};\nconst stc17 = {\n  classMap: {\n    \"slds-form-element\": true\n  },\n  key: 16\n};\nconst stc18 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 19\n};\nconst stc19 = {\n  classMap: {\n    \"slds-form-element\": true\n  },\n  key: 21\n};\nconst stc20 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 24\n};\nconst stc21 = {\n  classMap: {\n    \"slds-form-element\": true\n  },\n  key: 26\n};\nconst stc22 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 29\n};\nconst stc23 = {\n  classMap: {\n    \"slds-form-element__help\": true\n  },\n  attrs: {\n    \"aria-live\": \"assertive\"\n  },\n  key: 31\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {gid: api_scoped_id, d: api_dynamic_text, t: api_text, h: api_element, b: api_bind} = $api;\n  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6, _m7, _m8, _m9} = $ctx;\n  return [api_element(\"div\", stc0, [api_element(\"p\", {\n    classMap: stc1,\n    attrs: {\n      \"id\": api_scoped_id(\"color-picker-instructions\")\n    },\n    key: 1\n  }, [api_text(api_dynamic_text($cmp.i18n.colorPickerInstructions))]), api_element(\"div\", {\n    classMap: stc2,\n    style: $cmp.gradientStyle,\n    attrs: stc3,\n    key: 2,\n    on: {\n      \"mousedown\": _m0 || ($ctx._m0 = api_bind($cmp.handleMouseDown))\n    }\n  }, [api_element(\"canvas\", {\n    attrs: {\n      \"width\": $cmp.canvasRect.x,\n      \"height\": $cmp.canvasRect.y\n    },\n    key: 3\n  }), api_element(\"a\", {\n    classMap: stc4,\n    styleDecls: stc5,\n    attrs: {\n      \"data-id\": \"color-anchor\",\n      \"href\": \"javascript:void(0)\",\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\",\n      \"aria-describedby\": api_scoped_id(\"color-picker-instructions\")\n    },\n    key: 4,\n    on: {\n      \"mousedrag\": _m1 || ($ctx._m1 = api_bind($cmp.handlePreventDefault)),\n      \"mousedown\": _m2 || ($ctx._m2 = api_bind($cmp.handlePreventDefault)),\n      \"keydown\": _m3 || ($ctx._m3 = api_bind($cmp.handleKeydown))\n    }\n  }, [api_element(\"span\", stc6, [api_text(api_dynamic_text($cmp.computedSaturationAndBrightness))])])]), api_element(\"div\", stc7, [api_element(\"label\", {\n    classMap: stc1,\n    attrs: {\n      \"for\": api_scoped_id(\"rainbow\")\n    },\n    key: 7\n  }, [api_text(api_dynamic_text($cmp.i18n.hueInput))]), api_element(\"input\", {\n    classMap: stc8,\n    attrs: {\n      \"data-id\": \"hue-slider\",\n      \"type\": \"range\",\n      \"min\": \"0\",\n      \"max\": \"360\",\n      \"id\": api_scoped_id(\"rainbow\")\n    },\n    props: {\n      \"value\": $cmp._hueValue\n    },\n    key: 8,\n    on: {\n      \"mousedown\": _m4 || ($ctx._m4 = api_bind($cmp.handleDrag)),\n      \"change\": _m5 || ($ctx._m5 = api_bind($cmp.onChange))\n    }\n  }), api_element(\"span\", {\n    classMap: stc9,\n    style: $cmp.thumbnailStyle,\n    attrs: stc10,\n    key: 9\n  }, [api_element(\"span\", stc11, [api_text(api_dynamic_text($cmp._hex))])])]), api_element(\"div\", stc12, [api_element(\"div\", stc13, [api_element(\"label\", {\n    classMap: stc14,\n    attrs: {\n      \"for\": api_scoped_id(\"input\")\n    },\n    key: 13\n  }, [api_text(api_dynamic_text($cmp.i18n.hexLabel))]), api_element(\"div\", stc15, [api_element(\"input\", {\n    classMap: stc16,\n    attrs: {\n      \"data-primary-input\": \"\",\n      \"type\": \"text\",\n      \"id\": api_scoped_id(\"input\"),\n      \"minlength\": \"4\",\n      \"maxlength\": \"7\",\n      \"pattern\": \"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\",\n      \"placeholder\": \"#FFFFFF\"\n    },\n    props: {\n      \"value\": $cmp._hex\n    },\n    key: 15,\n    on: {\n      \"change\": _m6 || ($ctx._m6 = api_bind($cmp.handleHexChange))\n    }\n  })])]), api_element(\"div\", stc17, [api_element(\"label\", {\n    classMap: stc14,\n    attrs: {\n      \"for\": api_scoped_id(\"red\")\n    },\n    key: 17\n  }, [api_element(\"abbr\", {\n    attrs: {\n      \"title\": $cmp.i18n.redAbbr\n    },\n    key: 18\n  }, [api_text(api_dynamic_text($cmp.i18n.rInput))])]), api_element(\"div\", stc18, [api_element(\"input\", {\n    classMap: stc16,\n    attrs: {\n      \"type\": \"text\",\n      \"id\": api_scoped_id(\"red\"),\n      \"data-color-name\": \"red\",\n      \"placeholder\": \"255\"\n    },\n    props: {\n      \"value\": $cmp._rgb.red\n    },\n    key: 20,\n    on: {\n      \"change\": _m7 || ($ctx._m7 = api_bind($cmp.handleRgbChange))\n    }\n  })])]), api_element(\"div\", stc19, [api_element(\"label\", {\n    classMap: stc14,\n    attrs: {\n      \"for\": api_scoped_id(\"green\")\n    },\n    key: 22\n  }, [api_element(\"abbr\", {\n    attrs: {\n      \"title\": $cmp.i18n.greenAbbr\n    },\n    key: 23\n  }, [api_text(api_dynamic_text($cmp.i18n.gInput))])]), api_element(\"div\", stc20, [api_element(\"input\", {\n    classMap: stc16,\n    attrs: {\n      \"type\": \"text\",\n      \"id\": api_scoped_id(\"green\"),\n      \"data-color-name\": \"green\",\n      \"placeholder\": \"255\"\n    },\n    props: {\n      \"value\": $cmp._rgb.green\n    },\n    key: 25,\n    on: {\n      \"change\": _m8 || ($ctx._m8 = api_bind($cmp.handleRgbChange))\n    }\n  })])]), api_element(\"div\", stc21, [api_element(\"label\", {\n    classMap: stc14,\n    attrs: {\n      \"for\": api_scoped_id(\"blue\")\n    },\n    key: 27\n  }, [api_element(\"abbr\", {\n    attrs: {\n      \"title\": $cmp.i18n.blueAbbr\n    },\n    key: 28\n  }, [api_text(api_dynamic_text($cmp.i18n.bInput))])]), api_element(\"div\", stc22, [api_element(\"input\", {\n    classMap: stc16,\n    attrs: {\n      \"type\": \"text\",\n      \"id\": api_scoped_id(\"blue\"),\n      \"data-color-name\": \"blue\",\n      \"placeholder\": \"255\"\n    },\n    props: {\n      \"value\": $cmp._rgb.blue\n    },\n    key: 30,\n    on: {\n      \"change\": _m9 || ($ctx._m9 = api_bind($cmp.handleRgbChange))\n    }\n  })])])]), $cmp._errorMessage ? api_element(\"div\", stc23, [api_text(api_dynamic_text($cmp._errorMessage))]) : null])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-colorPickerCustom_colorPickerCustom\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./colorPickerCustom.html\";\nimport labelBInput from '@salesforce/label/LightningColorPicker.bInput';\nimport labelBlueAbbr from '@salesforce/label/LightningColorPicker.blueAbbr';\nimport labelColorPickerInstructions from '@salesforce/label/LightningColorPicker.colorPickerInstructions';\nimport labelErrorMessage from '@salesforce/label/LightningColorPicker.errorMessage';\nimport labelGInput from '@salesforce/label/LightningColorPicker.gInput';\nimport labelGreenAbbr from '@salesforce/label/LightningColorPicker.greenAbbr';\nimport labelHexLabel from '@salesforce/label/LightningColorPicker.hexLabel';\nimport labelHueInput from '@salesforce/label/LightningColorPicker.hueInput';\nimport labelRInput from '@salesforce/label/LightningColorPicker.rInput';\nimport labelRedAbbr from '@salesforce/label/LightningColorPicker.redAbbr';\nimport formFactorPropertyName from '@salesforce/client/formFactor';\nimport { keyCodes } from 'lightning/utilsPrivate';\nimport { generateUniqueId, getErrorMessage } from 'lightning/inputUtils';\nimport { fullHexValue, hexToRgb, rgbToHex, rgbToHsl, rgbToPosition, rgbToHsv } from './colorUtil';\nconst i18n = {\n  bInput: labelBInput,\n  blueAbbr: labelBlueAbbr,\n  colorPickerInstructions: labelColorPickerInstructions,\n  errorMessage: labelErrorMessage,\n  gInput: labelGInput,\n  greenAbbr: labelGreenAbbr,\n  hexLabel: labelHexLabel,\n  hueInput: labelHueInput,\n  rInput: labelRInput,\n  redAbbr: labelRedAbbr\n};\nconst CANVAS = {\n  x: 198,\n  y: 80\n};\n\nclass LightningColorPickerCustom extends LightningElement {\n  constructor() {\n    super();\n    this._hueValue = null;\n    this._rgb = {\n      red: '86',\n      green: '121',\n      blue: '192'\n    };\n    this._hex = '#5679C0';\n    this._errorMessage = null;\n    this._currentColor = null;\n    this._initialized = false;\n    this.uniqueId = generateUniqueId();\n  }\n\n  renderedCallback() {\n    if (!this._initialized) {\n      // eslint-disable-next-line @lwc/lwc/no-async-operation\n      requestAnimationFrame(() => {\n        // (*1*)\n        if (formFactorPropertyName !== 'Large') {\n          /**\n           * We need to wait for one more animation frame and invoke .focus()\n           * in iOS. This is because the positionLibray.js initially sets the position\n           * of this color-picker element to \"top: 0px\" and then later repositions it asynchronously\n           * it the next animation frames. The first (*1*) rAF callback is fired between\n           * setting \"top: 0px\" and then later repositioning it. Calling .focus() in this callback\n           * triggers a re-paint step and the page is scrolled to the top due to \"top: 0px\" being\n           * present in the styles. To avoid this, we can delay the next re-paint after color-picker\n           * is repositioned correctly by positionLibrary.js. Hence we wait for next animation frame\n           * and then call .focus() to trigger the next re-paint after the color-picker is repositioned correctly\n           * which was initially positioned with \"top: 0px\" by positionLibrary.js\n           */\n          // eslint-disable-next-line @lwc/lwc/no-async-operation\n          requestAnimationFrame(() => this.focus());\n        } else {\n          this.focus();\n        }\n      });\n      this.gradient();\n      this.handleUpdateAnchor();\n      this._initialized = true;\n    }\n  }\n\n  get currentColor() {\n    return this._currentColor;\n  }\n\n  set currentColor(value) {\n    const fullHex = fullHexValue(value);\n    this._currentColor = value;\n    this._hex = fullHex;\n    this._rgb = hexToRgb(fullHex);\n  }\n\n  focus() {\n    this.anchorElement.focus();\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get thumbnailStyle() {\n    return `background: ${this._hex || 'hsl(220, 46%, 55%)'};`;\n  }\n\n  get gradientStyle() {\n    return `background: ${this._hex || 'rgb(0, 85, 255)'}; position: relative;`;\n  }\n\n  get canvasRect() {\n    return CANVAS;\n  }\n\n  get anchorElement() {\n    return this.template.querySelector('*[data-id=\"color-anchor\"]');\n  }\n\n  get thumbnailElement() {\n    return this.template.querySelector('*[data-id=\"color-preview\"]');\n  }\n\n  get gradientElement() {\n    return this.template.querySelector('*[data-id=\"color-gradient\"]');\n  }\n\n  get computedSaturationAndBrightness() {\n    const rgb = this._rgb;\n    const saturation = rgbToHsv(rgb).saturation || 0;\n    const brightness = rgbToHsv(rgb).brightness || 0;\n    return `Saturation: ${saturation.toFixed()}%. Brightness: ${brightness.toFixed()}%.`;\n  }\n\n  handlePreventDefault(event) {\n    event.preventDefault();\n  }\n\n  selectColor(event) {\n    this.dispatchEvent( // eslint-disable-next-line lightning-global/no-custom-event-bubbling\n    new CustomEvent('updatecolor', {\n      bubbles: true,\n      composed: true,\n      cancelable: true,\n      detail: {\n        color: event.target.innerText\n      }\n    }));\n  }\n\n  handleMouseDown(event) {\n    event.preventDefault();\n    this.onMouseDrag(event, true);\n  }\n\n  handleDrag(event) {\n    this.onMouseDrag(event, false);\n  }\n\n  onChange() {\n    this.rainbowCursor();\n  }\n\n  parseAndLimit(value) {\n    let out = value;\n\n    if (!value || parseInt(value, 10) < 0 || isNaN(value)) {\n      out = 0;\n    } else if (parseInt(value, 10) > 255) {\n      out = 255;\n    }\n\n    return out;\n  }\n\n  handleRgbChange(event) {\n    const target = event.currentTarget;\n    const value = this.parseAndLimit(target.value); // Fix for no rerender on second bad value attempt\n\n    target.value = value;\n    const color = target.getAttribute('data-color-name');\n\n    if (color === 'red') {\n      this._rgb.red = value;\n    } else if (color === 'green') {\n      this._rgb.green = value;\n    } else if (color === 'blue') {\n      this._rgb.blue = value;\n    }\n\n    const rgb = this._rgb;\n    const hue = rgbToHsl(rgb).hue;\n    const position = this.rgbToPosition(rgb);\n    const selectedColor = `#${rgbToHex(rgb)}`;\n    this.updateRainbow(hue);\n    this.setCanvasColor(hue);\n    this.setCanvasCursor(position.x, position.y);\n    this.updateSelectedColor(selectedColor);\n  }\n\n  handleHexChange(event) {\n    const isInputValid = event.srcElement.validity.valid;\n\n    if (isInputValid) {\n      const selectedColor = fullHexValue(event.target.value);\n      this.classList.remove('slds-has-error');\n      this._errorMessage = null;\n      const rgb = hexToRgb(selectedColor);\n      this._rgb = rgb;\n      const hue = rgbToHsl(rgb).hue;\n      const position = this.rgbToPosition(rgb);\n      this.updateRainbow(hue);\n      this.setCanvasColor(hue);\n      this.setCanvasCursor(position.x, position.y);\n      this.updateSelectedColor(selectedColor);\n    } else {\n      event.srcElement.classList.add('slds-has-error');\n      this._errorMessage = getErrorMessage(event.srcElement.validity, {\n        patternMismatch: this.i18n.errorMessage\n      });\n    }\n  }\n\n  updateSelectedColor(selectedColor) {\n    this.template.querySelector(`[data-primary-input]`).classList.remove('slds-has-error');\n    this._errorMessage = null;\n    this._hex = selectedColor;\n    this.dispatchEvent( // eslint-disable-next-line lightning-global/no-custom-event-bubbling\n    new CustomEvent('updateselectedcolor', {\n      bubbles: true,\n      composed: true,\n      cancelable: true,\n      detail: {\n        color: selectedColor\n      }\n    }));\n  }\n\n  onMouseDrag(event, isGradientCursor) {\n    const that = this;\n    let drag = false;\n\n    if (isGradientCursor) {\n      this.getColorFromGradient(event);\n    } else {\n      this.rainbowCursor();\n    }\n\n    if (this._mousedown && this._mousemove && this._mouseup) {\n      return;\n    }\n\n    that._mousedown = function () {\n      drag = true;\n      this._cursorActive = true;\n    };\n\n    that._mouseup = function () {\n      drag = false;\n      this._cursorActive = false;\n      window.removeEventListener('mousedown', that._mousedown);\n      window.removeEventListener('mouseup', that._mouseup);\n      window.removeEventListener('mousemove', that._mousemove);\n      that._mousedown = null;\n      that._mouseup = null;\n      that._mousemove = null;\n    };\n\n    that._mousemove = function (evt) {\n      if (drag && isGradientCursor) {\n        that.getColorFromGradient(evt);\n      } else if (drag) {\n        that.rainbowCursor();\n      }\n    };\n\n    window.addEventListener('mousedown', that._mousedown);\n    window.addEventListener('mouseup', that._mouseup);\n    window.addEventListener('mousemove', that._mousemove);\n  }\n\n  gradient() {\n    const hue = rgbToHsl(this._rgb).hue;\n    this.canvasContext();\n    this.setCanvasColor(hue);\n    this.updateRainbow(hue);\n  }\n\n  getColorFromGradient(event) {\n    let cursorPosition;\n\n    if (event.type === 'keydown' && event.key !== 'Tab') {\n      cursorPosition = this.gradientCursorPositionFromKeydown(event);\n    } else if (event.type === 'mousedown' || event.type === 'mousemove') {\n      cursorPosition = this.gradientCursorPosition(event);\n    } else {\n      return;\n    }\n\n    const x = cursorPosition.x;\n    const y = cursorPosition.y; // Get the current HUE value and update the canvas & cursor\n\n    this.setCanvasColor(this._hueValue); // set color from gradient\n\n    this.setRGBValues(x, y);\n  }\n\n  rainbowCursor() {\n    const rainbow = this.template.querySelector('*[data-id=\"hue-slider\"]');\n    const position = this._cachePosition || this.rgbToPosition(this._rgb);\n    this.setCanvasColor(rainbow.value);\n    this.setRGBValues(position.x, position.y);\n    this.updateRainbow(rainbow.value);\n  }\n\n  updateRainbow(hue) {\n    this._hueValue = hue;\n  }\n\n  handleUpdateAnchor() {\n    const position = this._cachePosition || this.rgbToPosition(this._rgb);\n    const anchor = this.anchorElement;\n    const offset = anchor.offsetWidth / 2;\n    const x = position.x - offset + 5;\n    const y = position.y - offset - 5;\n    const xPercent = x / this._canvas.width * 100;\n    const yPercent = y / this._canvas.height * 100;\n    anchor.style.left = `${xPercent}%`;\n    anchor.style.top = `${yPercent}%`;\n  }\n\n  gradientCursorPosition(event) {\n    const canvas = this._canvas;\n    const gradientCanvas = canvas.getBoundingClientRect();\n    let x = event.clientX - gradientCanvas.left;\n    let y = event.clientY - gradientCanvas.top;\n\n    if (x > gradientCanvas.width) {\n      x = gradientCanvas.width - 1;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n\n    if (y > gradientCanvas.height) {\n      y = gradientCanvas.height;\n    }\n\n    if (y < 0) {\n      y = 0;\n    }\n    /*\n     * Caching the position x & y in the component so that we can use it when moving the rainbow slider\n     * instead of calculating the position of x & y each time.\n     */\n\n\n    this._cachePosition = {\n      x,\n      y\n    };\n    return {\n      x,\n      y\n    };\n  }\n\n  gradientCursorPositionFromKeydown(event) {\n    event.preventDefault();\n    const canvas = this._canvas;\n    const gradientCanvas = canvas.getBoundingClientRect();\n    const keyCode = event.keyCode;\n    let x, y;\n\n    if (!this._cachePosition) {\n      this._cachePosition = this.rgbToPosition(this._rgb);\n    }\n\n    const positionMap = {};\n    positionMap[keyCodes.left] = {\n      x: -1,\n      y: 0\n    };\n    positionMap[keyCodes.up] = {\n      x: 0,\n      y: -1\n    };\n    positionMap[keyCodes.right] = {\n      x: +1,\n      y: 0\n    };\n    positionMap[keyCodes.down] = {\n      x: 0,\n      y: +1\n    };\n    const transform = positionMap[keyCode] ? positionMap[keyCode] : {\n      x: 0,\n      y: 0\n    };\n    x = this._cachePosition.x + transform.x;\n    y = this._cachePosition.y + transform.y;\n\n    if (x > gradientCanvas.width) {\n      x = gradientCanvas.width - 1;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n\n    if (y > gradientCanvas.height) {\n      y = gradientCanvas.height;\n    }\n\n    if (y < 0) {\n      y = 0;\n    }\n    /*\n     * Caching the position x & y in the component so that we can use it when moving the rainbow slider\n     * instead of calculating the position of x & y each time.\n     */\n\n\n    this._cachePosition = {\n      x,\n      y\n    };\n    return {\n      x,\n      y\n    };\n  }\n\n  setRGBValues(x, y) {\n    const ctx = this._canvasCtx;\n    const imageData = ctx.getImageData(x, y, 1, 1).data;\n    const rgb = {\n      red: imageData[0],\n      green: imageData[1],\n      blue: imageData[2]\n    };\n    const color = `#${rgbToHex(rgb)}`;\n    this._rgb = rgb;\n    this.updateSelectedColor(color);\n    this.handleUpdateAnchor();\n  }\n\n  setCanvasColor(hue) {\n    const ctx = this._canvasCtx; // don't map the gradient onto extreme left and right to make extremes have their max values\n\n    const white = ctx.createLinearGradient(1, 0, this.canvasRect.x - 1, 0);\n    white.addColorStop(0, 'rgb(255,255,255)');\n    white.addColorStop(1, 'hsl(' + hue + ', 100%, 50%)');\n    ctx.fillStyle = white;\n    ctx.fillRect(0, 0, this.canvasRect.x, this.canvasRect.y); // starting y is the first line to avoid blending the black into the hue, thus\n    // making extreme values unselectable\n\n    const black = ctx.createLinearGradient(0, 1, 0, this.canvasRect.y);\n    black.addColorStop(0, 'rgba(0,0,0,0)');\n    black.addColorStop(1, 'rgb(0,0,0)');\n    ctx.fillStyle = black;\n    ctx.fillRect(0, 0, this.canvasRect.x, this.canvasRect.y);\n  }\n\n  setCanvasCursor(x, y) {\n    const position = {\n      x,\n      y\n    };\n    const anchor = this.anchorElement;\n    const offset = anchor.offsetWidth / 2;\n    x = position.x - offset + 5;\n    y = position.y - offset - 5;\n    const xPercent = x / this._canvas.width * 100;\n    const yPercent = y / this._canvas.height * 100;\n    anchor.style.left = `${xPercent}%`;\n    anchor.style.top = `${yPercent}%`;\n  }\n\n  canvasContext() {\n    this._canvas = this.template.querySelector('canvas');\n    this._canvasCtx = this._canvas.getContext('2d');\n    this._cursorActive = false;\n  }\n\n  handleKeydown(event) {\n    this.getColorFromGradient(event);\n  }\n\n  rgbToPosition(rgb) {\n    return rgbToPosition(rgb, this.canvasRect);\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningColorPickerCustom, {\n  publicProps: {\n    currentColor: {\n      config: 3\n    }\n  },\n  publicMethods: [\"focus\"],\n  track: {\n    _hueValue: 1,\n    _rgb: 1,\n    _hex: 1,\n    _errorMessage: 1,\n    _currentColor: 1\n  },\n  fields: [\"_initialized\"]\n});\n\nexport default _registerComponent(LightningColorPickerCustom, {\n  tmpl: _tmpl\n});","export function fullHexValue(hex) {\n  if (Array.isArray(hex) && hex.length > 0) {\n    hex = hex[0];\n  }\n\n  if (hex && hex.length <= 6 && hex.charAt(0) !== '#') {\n    hex = '#' + hex;\n  }\n\n  const isInputValid = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(hex);\n\n  if (!isInputValid) {\n    hex = '#000000';\n  } // Converting 3 digit hex color to 6 digit hex color\n\n\n  if (hex.length === 4) {\n    hex = '#' + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2) + hex.charAt(3) + hex.charAt(3);\n  }\n\n  return hex;\n}\nexport function hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(fullHexValue(hex));\n\n  if (!result) {\n    return null;\n  }\n\n  return {\n    red: parseInt(result[1], 16),\n    green: parseInt(result[2], 16),\n    blue: parseInt(result[3], 16)\n  };\n}\nexport function rgbToHex(rgb) {\n  const r = rgb.red;\n  const g = rgb.green;\n  const b = rgb.blue;\n  const bin = r << 16 | g << 8 | b;\n  return function (hex) {\n    return new Array(7 - hex.length).join('0') + hex;\n  }(bin.toString(16).toUpperCase());\n}\nexport function rgbToHsl(rgb) {\n  const r1 = rgb.red / 255;\n  const g1 = rgb.green / 255;\n  const b1 = rgb.blue / 255;\n  const maxColor = Math.max(r1, g1, b1);\n  const minColor = Math.min(r1, g1, b1); // Calculate L:\n\n  let L = (maxColor + minColor) / 2;\n  let S = 0;\n  let H = 0;\n\n  if (maxColor !== minColor) {\n    // Calculate S:\n    if (L < 0.5) {\n      S = (maxColor - minColor) / (maxColor + minColor);\n    } else {\n      S = (maxColor - minColor) / (2.0 - maxColor - minColor);\n    } // Calculate H:\n\n\n    if (r1 === maxColor) {\n      const x = g1 - b1,\n            y = maxColor - minColor;\n      H = x / y;\n    } else if (g1 === maxColor) {\n      const x = b1 - r1,\n            y = maxColor - minColor,\n            z = x / y;\n      H = 2.0 + z;\n    } else {\n      const x = r1 - g1,\n            y = maxColor - minColor,\n            z = x / y;\n      H = 4.0 + z;\n    }\n  }\n\n  L *= 100;\n  S *= 100;\n  H *= 60;\n\n  if (H < 0) {\n    H += 360;\n  }\n\n  const result = {\n    hue: H,\n    saturation: S,\n    lightness: L\n  };\n  return result;\n}\nexport function rgbToPosition(rgb, canvas) {\n  const hsv = rgbToHsv(rgb);\n  const saturation = hsv.saturation / 100,\n        brightness = hsv.brightness / 100;\n  const x = canvas.x * saturation;\n  const y = canvas.y * (1 - brightness);\n  return {\n    x,\n    y\n  };\n}\nexport function rgbToHsv(rgb) {\n  const r = rgb.red / 255;\n  const g = rgb.green / 255;\n  const b = rgb.blue / 255;\n  const max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n  const d = max - min,\n        s = max === 0 ? 0 : d / max,\n        v = max;\n  let h, x, y;\n\n  if (max === min) {\n    h = 0;\n  } else {\n    switch (max) {\n      case r:\n        x = g - b;\n        y = x / d;\n        h = y + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        x = b - r;\n        y = x / d;\n        h = y + 2;\n        break;\n\n      case b:\n        x = r - g;\n        y = x / d;\n        h = y + 4;\n        break;\n\n      default:\n        break;\n    }\n\n    h /= 6;\n  }\n\n  const result = {\n    hue: h * 360,\n    saturation: s * 100,\n    brightness: v * 100\n  };\n  return result;\n}","import _implicitStylesheets from \"./colorPickerPanel.css\";\n\nimport _implicitScopedStylesheets from \"./colorPickerPanel.scoped.css?scoped=true\";\n\nimport _lightningColorPickerCustom from \"lightning/colorPickerCustom\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  \"slds-popover\": true,\n  \"slds-color-picker__selector\": true,\n  \"slds-show\": true,\n  \"slds-is-absolute\": true\n};\nconst stc1 = {\n  \"slds-popover__body\": true\n};\nconst stc2 = {\n  classMap: {\n    \"slds-popover__footer\": true\n  },\n  key: 3\n};\nconst stc3 = {\n  classMap: {\n    \"slds-color-picker__selector-footer\": true\n  },\n  key: 4\n};\nconst stc4 = {\n  \"slds-button\": true,\n  \"slds-button_neutral\": true\n};\nconst stc5 = {\n  \"name\": \"cancel\"\n};\nconst stc6 = {\n  \"slds-button\": true,\n  \"slds-button_brand\": true\n};\nconst stc7 = {\n  \"name\": \"done\"\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {gid: api_scoped_id, b: api_bind, c: api_custom_element, h: api_element, d: api_dynamic_text, t: api_text} = $api;\n  const {_m0, _m1, _m2, _m3} = $ctx;\n  return [api_element(\"section\", {\n    classMap: stc0,\n    attrs: {\n      \"role\": \"dialog\",\n      \"aria-label\": \"Choose a color\",\n      \"aria-describedby\": api_scoped_id(\"dialog-body-id\")\n    },\n    key: 0,\n    on: {\n      \"updateselectedcolor\": _m0 || ($ctx._m0 = api_bind($cmp.handleUpdateSelectedColor)),\n      \"keydown\": _m1 || ($ctx._m1 = api_bind($cmp.handleKeydown))\n    }\n  }, [api_element(\"div\", {\n    classMap: stc1,\n    attrs: {\n      \"id\": api_scoped_id(\"dialog-body-id\")\n    },\n    key: 1\n  }, [api_custom_element(\"lightning-color-picker-custom\", _lightningColorPickerCustom, {\n    props: {\n      \"currentColor\": $cmp.currentColor\n    },\n    key: 2\n  })]), api_element(\"footer\", stc2, [api_element(\"div\", stc3, [api_element(\"button\", {\n    classMap: stc4,\n    attrs: stc5,\n    key: 5,\n    on: {\n      \"click\": _m2 || ($ctx._m2 = api_bind($cmp.handleCancelClick))\n    }\n  }, [api_text(api_dynamic_text($cmp.i18n.cancelButton))]), api_element(\"button\", {\n    classMap: stc6,\n    attrs: stc7,\n    key: 6,\n    on: {\n      \"click\": _m3 || ($ctx._m3 = api_bind($cmp.handleDoneClick))\n    }\n  }, [api_text(api_dynamic_text($cmp.i18n.doneButton))])])])])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-colorPickerPanel_colorPickerPanel\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./colorPickerPanel.html\";\nimport labelCancelButton from '@salesforce/label/LightningColorPicker.cancelButton';\nimport labelCustomTab from '@salesforce/label/LightningColorPickerPanel.customTab';\nimport labelDefaultTab from '@salesforce/label/LightningColorPickerPanel.defaultTab';\nimport labelDoneButton from '@salesforce/label/LightningColorPicker.doneButton';\nimport { classSet } from 'lightning/utils';\nimport { keyCodes } from 'lightning/utilsPrivate';\nconst i18n = {\n  cancelButton: labelCancelButton,\n  customTab: labelCustomTab,\n  defaultTab: labelDefaultTab,\n  doneButton: labelDoneButton\n};\nconst DEFAULT_COLOR = '#000000';\n\nclass LightningColorPickerPanel extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this.currentColor = void 0;\n    this._isCustomTabActive = false;\n    this._selectedColor = null;\n  }\n\n  connectedCallback() {\n    this._selectedColor = this.currentColor || DEFAULT_COLOR;\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get computedClassDefault() {\n    return classSet({\n      'slds-tabs_default__item': true,\n      'slds-is-active': !this._isCustomTabActive\n    }).toString();\n  }\n\n  get computedClassCustom() {\n    return classSet({\n      'slds-tabs_default__item': true,\n      'slds-is-active': this._isCustomTabActive\n    }).toString();\n  }\n\n  get ariaSelectedDefault() {\n    return !this._isCustomTabActive.toString();\n  }\n\n  get ariaSelectedCustom() {\n    return this._isCustomTabActive.toString();\n  }\n\n  handleTabChange(event) {\n    event.preventDefault();\n    const tabElement = event.currentTarget;\n\n    if (tabElement.classList.contains('slds-is-active')) {\n      return;\n    }\n\n    this._isCustomTabActive = tabElement.title !== i18n.defaultTab;\n  }\n\n  handleUpdateSelectedColor(event) {\n    this._selectedColor = event.detail.color;\n  }\n\n  dispatchUpdateColorEventWithColor(color) {\n    this.dispatchEvent( // eslint-disable-next-line lightning-global/no-custom-event-bubbling\n    new CustomEvent('updatecolor', {\n      composed: true,\n      bubbles: true,\n      detail: {\n        color\n      }\n    }));\n  }\n\n  handleDoneClick() {\n    this.dispatchUpdateColorEventWithColor(this._selectedColor);\n  }\n\n  handleCancelClick() {\n    this.dispatchUpdateColorEventWithColor(this.currentColor);\n  }\n\n  handleKeydown(event) {\n    if (event.keyCode === keyCodes.escape) {\n      event.preventDefault();\n      this.dispatchUpdateColorEventWithColor(this.currentColor);\n    } else if (event.shiftKey && event.keyCode === keyCodes.tab && event.srcElement.dataset.id === 'color-anchor') {\n      event.preventDefault();\n      this.template.querySelector('button[name=\"done\"]').focus();\n    } else if (!event.shiftKey && event.keyCode === keyCodes.tab && event.srcElement.name === 'done') {\n      event.preventDefault();\n      this.template.querySelector('lightning-color-picker-custom').focus();\n    }\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningColorPickerPanel, {\n  publicProps: {\n    currentColor: {\n      config: 0\n    }\n  },\n  track: {\n    _isCustomTabActive: 1,\n    _selectedColor: 1\n  }\n});\n\nexport default _registerComponent(LightningColorPickerPanel, {\n  tmpl: _tmpl\n});","import { getDefaultConfig } from './defaultConfig'; // Closure to hold the APIs if and when available\n\nlet configProvided = false;\nconst {\n  assign,\n  freeze\n} = Object;\nlet PROVIDED_IMPL = getDefaultConfig();\n\nfunction resolveServiceApiProps(serviceAPI = {}) {\n  const serviceApiMap = {\n    getPathPrefix: serviceAPI.getPathPrefix,\n    getToken: serviceAPI.getToken,\n    getLocalizationService: serviceAPI.getLocalizationService,\n    iconSvgTemplates: serviceAPI.iconSvgTemplates,\n    getOneConfig: serviceAPI.getInitializer && serviceAPI.getInitializer('oneConfig')\n  };\n  return Object.keys(serviceApiMap).reduce((seed, prop) => {\n    if (serviceApiMap[prop] !== undefined) {\n      seed[prop] = serviceApiMap[prop];\n    }\n\n    return seed;\n  }, {});\n}\n\nexport default function configProviderService(serviceAPI) {\n  if (!configProvided) {\n    PROVIDED_IMPL = freeze(assign({}, PROVIDED_IMPL, resolveServiceApiProps(serviceAPI)));\n    configProvided = true;\n  } else {\n    throw new Error('ConfigProvider can only be set once at initilization time');\n  }\n\n  return {\n    name: 'lightning-config-provider'\n  };\n}\nexport function getPathPrefix() {\n  return PROVIDED_IMPL && PROVIDED_IMPL.getPathPrefix && PROVIDED_IMPL.getPathPrefix() || '';\n}\nexport function getToken(name) {\n  return PROVIDED_IMPL && PROVIDED_IMPL.getToken && PROVIDED_IMPL.getToken(name);\n}\nexport function getLocalizationService() {\n  return PROVIDED_IMPL && PROVIDED_IMPL.getLocalizationService && PROVIDED_IMPL.getLocalizationService();\n}\nexport function getIconSvgTemplates() {\n  return PROVIDED_IMPL && PROVIDED_IMPL.iconSvgTemplates;\n}\nexport function getOneConfig() {\n  return PROVIDED_IMPL && PROVIDED_IMPL.getOneConfig || {\n    densitySetting: ''\n  };\n}","import localizationService from './defaultLocalizationConfig';\n\nfunction getConfigFromAura($A) {\n  return {\n    getLocalizationService() {\n      return $A.localizationService;\n    },\n\n    getPathPrefix() {\n      return $A.getContext().getPathPrefix();\n    },\n\n    getToken(name) {\n      return $A.getToken(name);\n    }\n\n  };\n}\n\nfunction createStandAloneConfig() {\n  return {\n    getLocalizationService() {\n      return localizationService;\n    },\n\n    getPathPrefix() {\n      return ''; // @sfdc.playground path-prefix DO-NOT-REMOVE-COMMENT\n    },\n\n    getToken() {\n      return undefined; // @sfdc.playground token DO-NOT-REMOVE-COMMENT\n    },\n\n    getOneConfig() {\n      return {\n        densitySetting: ''\n      };\n    }\n\n  };\n}\n\nexport function getDefaultConfig() {\n  return window.$A !== undefined && window.$A.localizationService ? getConfigFromAura(window.$A) : createStandAloneConfig();\n}","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent } from \"lwc\";\nimport _tmpl from \"./defaultDurationConfig.html\";\n// inspired by the duration logic in moment.js (extremely simplified) https://github.com/moment/moment\n// Only using this in defaultConfig when we're outside of an aura context.\n// Reasons for this are because the Intl api currently doesn't match the existing text formats:\n// e.g. format(1, 'day') returns 'in 1 day' or 'tomorrow' (numeric=always/auto) in chrome, the existing moment implementation returns 'in a day'\n// Intl.RelativeTimeFormat is also only supported by a handful of browsers (as of 220):\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat#Browser_compatibility\n// The following two labels will be used even on browsers that support Intl.RelativeTimeFormat\nimport labelSecondsLater from '@salesforce/label/Duration.secondsLater';\nimport labelSecondsAgo from '@salesforce/label/Duration.secondsAgo';\nimport { formatLabel } from 'lightning/utils'; // These labels will only be used as fallback in browsers that do not support Intl.RelativeTimeFormat\n\nconst fallbackFutureLabel = 'in {0} {1}'; // e.g. in 1 minute\n\nconst fallbackPastLabel = '{0} {1} ago'; // e.g. 1 minute ago\n\nconst fallbackPluralSuffix = 's'; // plural suffix for the units, e.g. in 10 minutes\n// The threshold values come from moment.js\n\nconst units = {\n  SECONDS: {\n    name: 'second',\n    threshold: 45\n  },\n  // a few seconds to minute\n  MINUTES: {\n    name: 'minute',\n    threshold: 45\n  },\n  // minutes to hour\n  HOURS: {\n    name: 'hour',\n    threshold: 22\n  },\n  // hours to day\n  DAYS: {\n    name: 'day',\n    threshold: 26\n  },\n  // days to month\n  MONTHS: {\n    name: 'month',\n    threshold: 11\n  },\n  // months to year\n  YEARS: {\n    name: 'year'\n  }\n};\nconst SECOND_TO_MILLISECONDS = 1000;\nconst MINUTE_TO_MILLISECONDS = 6e4; // 60 * SECOND_TO_MILLISECONDS;\n\nconst HOUR_TO_MILLISECONDS = 36e5; // 60 * MINUTE_TO_MILLISECONDS\n\nconst DAY_TO_MILLISECONDS = 864e5; // 24 * HOUR_TO_MILLISECONDS;\n\nclass Duration {\n  constructor(milliseconds) {\n    this.milliseconds = 0;\n\n    if (typeof milliseconds !== 'number') {\n      this.isValid = false; // eslint-disable-next-line no-console\n\n      console.warn(`The value of milliseconds passed into Duration must be of type number,\n                but we are getting the ${typeof milliseconds} value \"${milliseconds}\" instead.\n                `);\n      return;\n    }\n\n    this.isValid = true;\n    this.milliseconds = milliseconds;\n  }\n\n  humanize(locale) {\n    if (!this.isValid) {\n      return '';\n    }\n\n    const unit = findBestUnitMatch(this);\n\n    if (unit === units.SECONDS) {\n      const isLater = this.milliseconds > 0;\n      return isLater ? labelSecondsLater : labelSecondsAgo;\n    }\n\n    return format(locale, this.asIn(unit), unit.name);\n  }\n\n  asIn(unit) {\n    switch (unit) {\n      case units.SECONDS:\n        return Math.round(this.milliseconds / SECOND_TO_MILLISECONDS);\n\n      case units.MINUTES:\n        return Math.round(this.milliseconds / MINUTE_TO_MILLISECONDS);\n\n      case units.HOURS:\n        return Math.round(this.milliseconds / HOUR_TO_MILLISECONDS);\n\n      case units.DAYS:\n        return Math.round(this.milliseconds / DAY_TO_MILLISECONDS);\n\n      case units.MONTHS:\n        return Math.round(daysToMonth(this.milliseconds / DAY_TO_MILLISECONDS));\n\n      case units.YEARS:\n      default:\n        return Math.round(daysToMonth(this.milliseconds / DAY_TO_MILLISECONDS) / 12);\n    }\n  }\n\n}\n\n_registerDecorators(Duration, {\n  fields: [\"milliseconds\"]\n});\n\nexport default _registerComponent(Duration, {\n  tmpl: _tmpl\n});\n\nfunction daysToMonth(days) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  const daysToMonthRatio = 4800 / 146097;\n  return days * daysToMonthRatio;\n}\n\nfunction findBestUnitMatch(duration) {\n  // Traversing the object keys in order from Seconds to Years\n  // http://exploringjs.com/es6/ch_oop-besides-classes.html#_traversal-order-of-properties\n  const match = Object.keys(units).find(key => {\n    const unit = units[key]; // Year is the max and doesn't have a threshold\n\n    return unit === units.YEARS || Math.abs(duration.asIn(unit)) < unit.threshold;\n  });\n  return units[match];\n}\n\nfunction format(locale, value, unit) {\n  if ('Intl' in window && Intl.RelativeTimeFormat) {\n    const formatter = new Intl.RelativeTimeFormat(locale, {\n      style: 'long',\n      numeric: 'always'\n    });\n    return formatter.format(value, unit);\n  }\n\n  return fallbackFormatter(value, unit);\n}\n\nfunction fallbackFormatter(value, unit) {\n  // eslint-disable-next-line no-console\n  console.warn(`The current environment does not support formatters for relative time.`);\n  const absoluteValue = Math.abs(value);\n  const unitString = absoluteValue !== 1 ? unit + fallbackPluralSuffix : unit;\n  const label = value > 0 ? fallbackFutureLabel : fallbackPastLabel;\n  return formatLabel(label, absoluteValue, unitString);\n}","// default implementation of localization service for en-US locale. This covers the current usage of the localizationService in the code base.\n// This should be removed when the framework team moves auraLocalizationService to a separate module\nimport { isValidISOTimeString, isValidISODateTimeString, removeTimeZoneSuffix, STANDARD_TIME_FORMAT, STANDARD_DATE_FORMAT, TIME_SEPARATOR } from 'lightning/iso8601Utils';\nimport Duration from './defaultDurationConfig';\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst DATE_FORMAT = {\n  short: 'M/d/yyyy',\n  medium: 'MMM d, yyyy',\n  long: 'MMMM d, yyyy'\n};\nconst TIME_FORMAT = {\n  short: 'h:mm a',\n  medium: 'h:mm:ss a',\n  long: 'h:mm:ss a'\n}; // The parseTime method normalizes the time format so that minor deviations are accepted\n\nconst TIME_FORMAT_SIMPLE = {\n  short: 'h:m a',\n  medium: 'h:m:s a',\n  long: 'h:m:s a'\n}; // Only works with dates and iso strings\n// formats the date object by ignoring the timezone offset\n// e.g. assume date is Mar 11 2019 00:00:00 GMT+1100:\n// formatDate(date, 'YYYY-MM-DD') -> 2019-03-11\n\nfunction formatDate(value, format) {\n  let isUTC = false;\n  let dateString = value;\n\n  if (typeof value === 'string') {\n    dateString = value.split(TIME_SEPARATOR)[0];\n    isUTC = true;\n  }\n\n  return formatDateInternal(dateString, format, isUTC);\n} // Only works with date objects.\n// formats the date object according to UTC.\n// e.g. assume date is Mar 11 2019 00:00:00 GMT+1100:\n// formatDateUTC(date, 'YYYY-MM-DD') -> 2019-03-10\n\n\nfunction formatDateUTC(value, format) {\n  return formatDateInternal(value, format, true);\n} // Only works with a date object\n\n\nfunction formatTime(date, format) {\n  if (!isDate(date)) {\n    return new Date('');\n  }\n\n  const hours = (date.getHours() + 11) % 12 + 1;\n  const suffix = date.getHours() >= 12 ? 'PM' : 'AM';\n\n  switch (format) {\n    case STANDARD_TIME_FORMAT:\n      // 16:12:32.000\n      return `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}.${doublePad(date.getMilliseconds())}`;\n\n    case TIME_FORMAT.short:\n      // 4:12 PM;\n      return `${hours}:${pad(date.getMinutes())} ${suffix}`;\n\n    case TIME_FORMAT.medium:\n    case TIME_FORMAT.long:\n    default:\n      // 4:12:32 PM;\n      return `${hours}:${pad(date.getMinutes())}:${pad(date.getSeconds())} ${suffix}`;\n  }\n} // Only works with a date object\n// formats the date object according to UTC.\n// e.g. assume date is Mar 11 2019 00:00:00 GMT+1100:\n// formatDateTimeUTC(date) -> 2019-03-10  1:00:00 PM\n\n\nfunction formatDateTimeUTC(value) {\n  if (!isDate(value)) {\n    return new Date('');\n  }\n\n  const date = new Date(value.getTime());\n  return `${formatDateUTC(date)}, ${formatTime(addTimezoneOffset(date))}`;\n} // parses ISO8601 date/time strings. Currently only used to parse ISO time strings without a TZD. Some examples:\n// 20:00:00.000             -> Feb 26 2019 20:00:00 GMT-0500\n// 2019-03-11               -> Mar 11 2019 00:00:00 GMT-0400\n// 2019-03-11T00:00:00.000Z -> Mar 10 2019 20:00:00 GMT-0400\n\n\nfunction parseDateTimeISO8601(value) {\n  let isoString = null;\n  let shouldAddOffset = true;\n\n  if (isValidISOTimeString(value)) {\n    isoString = `${getTodayInISO()}T${addTimezoneSuffix(value)}`;\n  } else if (isValidISODateTimeString(value)) {\n    if (value.indexOf(TIME_SEPARATOR) > 0) {\n      isoString = addTimezoneSuffix(value);\n      shouldAddOffset = false;\n    } else {\n      isoString = `${value}T00:00:00.000Z`;\n    }\n  }\n\n  if (isoString) {\n    // Browsers differ on how they treat iso strings without a timezone offset (local vs utc time)\n    const parsedDate = new Date(isoString);\n\n    if (shouldAddOffset) {\n      addTimezoneOffset(parsedDate);\n    }\n\n    return parsedDate;\n  }\n\n  return null;\n} // called by the datepicker and calendar for parsing iso and formatted date strings\n// called by the timepicker to parse the formatted time string\n\n\nfunction parseDateTime(value, format) {\n  if (format === STANDARD_DATE_FORMAT && isValidISODateTimeString(value)) {\n    return parseDateTimeISO8601(value);\n  }\n\n  if (Object.values(DATE_FORMAT).includes(format)) {\n    return parseFormattedDate(value, format);\n  }\n\n  if (Object.values(TIME_FORMAT_SIMPLE).includes(format)) {\n    return parseFormattedTime(value);\n  }\n\n  return null;\n} // The input to this method is always an ISO string with timezone offset.\n\n\nfunction parseDateTimeUTC(value) {\n  return parseDateTimeISO8601(addTimezoneSuffix(value));\n}\n\nfunction isBefore(date1, date2, unit) {\n  const normalizedDate1 = getDate(date1);\n  const normalizedDate2 = getDate(date2);\n\n  if (!normalizedDate1 || !normalizedDate2) {\n    return false;\n  }\n\n  return startOf(normalizedDate1, unit).getTime() < startOf(normalizedDate2, unit).getTime();\n} // unit can be millisecond, minute, day\n\n\nfunction isAfter(date1, date2, unit) {\n  const normalizedDate1 = getDate(date1);\n  const normalizedDate2 = getDate(date2);\n\n  if (!normalizedDate1 || !normalizedDate2) {\n    return false;\n  }\n\n  return startOf(normalizedDate1, unit).getTime() > startOf(normalizedDate2, unit).getTime();\n} // We're not doing timezone conversion in the default config. Only converting from UTC to system timezone\n\n\nfunction UTCToWallTime(date, timezone, callback) {\n  const utcDate = new Date(date.getTime());\n  callback(subtractTimezoneOffset(utcDate));\n} // We're not doing timezone conversion in the default config. Only converting from system timezone to UTC\n\n\nfunction WallTimeToUTC(date, timezone, callback) {\n  const localDate = new Date(date.getTime());\n  callback(addTimezoneOffset(localDate));\n} // We're assuming en-US locale so we don't need translation between calendar systems\n\n\nfunction translateToOtherCalendar(date) {\n  return date;\n} // We're assuming en-US locale so we don't need translation between calendar systems\n\n\nfunction translateFromOtherCalendar(date) {\n  return date;\n} // We're assuming en-US locale so we don't need translation of digits\n\n\nfunction translateToLocalizedDigits(input) {\n  return input;\n} // We're assuming en-US locale so we don't need translation of digits\n\n\nfunction translateFromLocalizedDigits(input) {\n  return input;\n} // This is called from the numberFormat library when the value exceeds the safe length.\n// We currently rely on aura to format large numbers\n\n\nfunction getNumberFormat() {\n  return {\n    format: value => {\n      // eslint-disable-next-line no-console\n      console.warn(`The current environment does not support large numbers and the original value of ${value} will be returned.`);\n      return value;\n    }\n  };\n} // relativeDateTime (currently the only user of duration) uses unit=\"minutes\"\n// The default implementation here assumes the unit is always minutes.\n\n\nfunction duration(minutes) {\n  return new Duration(minutes * 60 * 1000);\n}\n\nfunction displayDuration(value) {\n  return value.humanize('en');\n} // parses a time string formatted in en-US locale i.e. h:mm:ss a\n\n\nfunction parseFormattedTime(value) {\n  // for time strings it's easier to just split on :.\\s\n  const values = value.trim().split(/[:.\\s*]/); // at least two parts i.e. 12 PM, and at most 5 parts i.e. 12:34:21.432 PM\n\n  const length = values.length;\n\n  if (!values || length < 2 || length > 5) {\n    return null;\n  }\n\n  const ampm = values[length - 1];\n  const isBeforeNoon = ampm.toLowerCase() === 'am';\n  const isAfternoon = ampm.toLowerCase() === 'pm'; // remove ampm\n\n  values.splice(-1, 1);\n  const allNumbers = values.every(item => !isNaN(item));\n\n  if (!isAfternoon && !isBeforeNoon || !allNumbers) {\n    return null;\n  }\n\n  const hours = values[0];\n  const hour24 = pad(isAfternoon ? hours % 12 + 12 : hours % 12);\n  const minutes = length >= 3 && values[1] || '0';\n  const seconds = length >= 4 && values[2] || '0';\n  const milliseconds = length === 5 && values[3] || '0';\n  const newDate = new Date(getTodayInISO());\n  newDate.setHours(hour24, minutes, seconds, milliseconds);\n  return isDate(newDate) ? newDate : null;\n} // parses a date string formatted in en-US locale, i.e. MMM d, yyyy\n\n\nfunction parseFormattedDate(value, format) {\n  // default to medium style pattern\n  let pattern = /^([a-zA-Z]{3})\\s*(\\d{1,2}),\\s*(\\d{4})$/;\n\n  switch (format) {\n    case DATE_FORMAT.short:\n      pattern = /^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/;\n      break;\n\n    case DATE_FORMAT.long:\n      pattern = /^([a-zA-Z]+)\\s*(\\d{1,2}),\\s*(\\d{4})$/;\n      break;\n\n    default:\n  } // matches[1]: month, matches[2]: day, matches[3]: year\n\n\n  const match = pattern.exec(value.trim());\n\n  if (!match) {\n    return null;\n  }\n\n  let month = match[1];\n  const day = match[2];\n  const year = match[3]; // for long and medium style formats, we need to find the month index\n\n  if (format !== DATE_FORMAT.short) {\n    month = MONTH_NAMES.findIndex(item => item.toLowerCase().includes(month.toLowerCase())); // the actual month for the ISO string is 1 more than the index\n\n    month += 1;\n  }\n\n  const isoValue = `${year}-${pad(month)}-${pad(day)}`;\n  const newDate = new Date(`${isoValue}T00:00:00.000Z`);\n  return isDate(newDate) ? addTimezoneOffset(newDate) : null;\n}\n\nfunction formatDateInternal(value, format, isUTC) {\n  const date = getDate(value);\n\n  if (!date) {\n    // return Invalid Date\n    return new Date('');\n  }\n\n  if (isUTC && isDate(value)) {\n    // if value is an ISO string, we already add the timezone offset when parsing the date string.\n    addTimezoneOffset(date);\n  }\n\n  switch (format) {\n    case STANDARD_DATE_FORMAT:\n      return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\n\n    case DATE_FORMAT.short:\n      return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n\n    case DATE_FORMAT.long:\n      return `${MONTH_NAMES[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n\n    case DATE_FORMAT.medium:\n    default:\n      {\n        const shortMonthName = MONTH_NAMES[date.getMonth()].substring(0, 3);\n        return `${shortMonthName} ${date.getDate()}, ${date.getFullYear()}`;\n      }\n  }\n} // unit can be 'day' or 'minute', otherwise will default to milliseconds. These are the only units that are currently used in the codebase.\n\n\nfunction startOf(date, unit) {\n  switch (unit) {\n    case 'day':\n      date.setHours(0);\n      date.setMinutes(0);\n    // falls through\n\n    case 'minute':\n      date.setSeconds(0);\n      date.setMilliseconds(0);\n      break;\n\n    default:\n  }\n\n  return date;\n}\n\nfunction isDate(value) {\n  return Object.prototype.toString.call(value) === '[object Date]' && !isNaN(value.getTime());\n}\n\nfunction addTimezoneSuffix(value) {\n  // first remove TZD if the string has one, and then add Z\n  return removeTimeZoneSuffix(value) + 'Z';\n}\n\nfunction addTimezoneOffset(date) {\n  date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n  return date;\n}\n\nfunction subtractTimezoneOffset(date) {\n  date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n  return date;\n}\n\nfunction getDate(value) {\n  if (!value) {\n    return null;\n  }\n\n  if (isDate(value)) {\n    return new Date(value.getTime());\n  }\n\n  if (isFinite(value) && (typeof value === 'number' || typeof value === 'string')) {\n    return new Date(parseInt(value, 10));\n  }\n\n  if (typeof value === 'string') {\n    return parseDateTimeISO8601(value);\n  }\n\n  return null;\n}\n\nfunction getTodayInISO() {\n  return new Date().toISOString().split('T')[0];\n}\n\nfunction pad(n) {\n  return Number(n) < 10 ? '0' + n : n;\n}\n\nfunction doublePad(n) {\n  return Number(n) < 10 ? '00' + n : Number(n) < 100 ? '0' + n : n;\n}\n\nexport default {\n  formatDate,\n  formatDateUTC,\n  formatTime,\n  formatDateTimeUTC,\n  parseDateTimeISO8601,\n  parseDateTime,\n  parseDateTimeUTC,\n  isBefore,\n  isAfter,\n  UTCToWallTime,\n  WallTimeToUTC,\n  translateToOtherCalendar,\n  translateFromOtherCalendar,\n  translateToLocalizedDigits,\n  translateFromLocalizedDigits,\n  getNumberFormat,\n  duration,\n  displayDuration\n};","import _implicitStylesheets from \"./datepicker.css\";\n\nimport _implicitScopedStylesheets from \"./datepicker.scoped.css?scoped=true\";\n\nimport _lightningHelptext from \"lightning/helptext\";\nimport _lightningButtonIcon from \"lightning/buttonIcon\";\nimport _lightningCalendar from \"lightning/calendar\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-dropdown-trigger\": true,\n    \"slds-dropdown-trigger_click\": true,\n    \"slds-size_1-of-1\": true\n  },\n  attrs: {\n    \"role\": \"group\"\n  },\n  key: 0\n};\nconst stc1 = {\n  \"slds-required\": true\n};\nconst stc2 = {\n  \"slds-assistive-text\": true\n};\nconst stc3 = {\n  classMap: {\n    \"slds-form-element__control\": true,\n    \"slds-input-has-icon\": true,\n    \"slds-input-has-icon_right\": true\n  },\n  key: 5\n};\nconst stc4 = {\n  \"slds-input\": true\n};\nconst stc5 = {\n  \"slds-input__icon\": true,\n  \"slds-input__icon_right\": true\n};\nconst stc6 = {\n  \"slds-form-element__help\": true\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {gid: api_scoped_id, t: api_text, h: api_element, d: api_dynamic_text, c: api_custom_element, b: api_bind} = $api;\n  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6, _m7, _m8, _m9, _m10, _m11, _m12, _m13, _m14} = $ctx;\n  return [api_element(\"div\", stc0, [!$cmp.hasExternalLabel ? api_element(\"label\", {\n    className: $cmp.computedLabelClass,\n    attrs: {\n      \"for\": api_scoped_id(\"input\")\n    },\n    key: 1\n  }, [$cmp.required ? api_element(\"abbr\", {\n    classMap: stc1,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 2\n  }, [api_text(\"*\")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element(\"lightning-helptext\", _lightningHelptext, {\n    props: {\n      \"content\": $cmp.fieldLevelHelp\n    },\n    key: 3\n  }) : null : null, $cmp.isRangeMessageVisible ? api_element(\"span\", {\n    classMap: stc2,\n    attrs: {\n      \"id\": api_scoped_id(\"range-message\"),\n      \"data-range-message\": \"\"\n    },\n    key: 4\n  }, [api_text(api_dynamic_text($cmp.rangeMessage))]) : null, api_element(\"div\", stc3, [api_element(\"input\", {\n    classMap: stc4,\n    attrs: {\n      \"type\": \"text\",\n      \"id\": api_scoped_id(\"input\"),\n      \"name\": $cmp.name,\n      \"placeholder\": $cmp.placeholder,\n      \"aria-label\": $cmp.ariaLabel,\n      \"required\": $cmp.required ? \"\" : null,\n      \"readonly\": $cmp.readOnly ? \"\" : null,\n      \"disabled\": $cmp.disabled ? \"\" : null,\n      \"autocomplete\": $cmp.autocomplete\n    },\n    props: {\n      \"value\": $cmp.displayValue\n    },\n    key: 6,\n    on: {\n      \"input\": _m0 || ($ctx._m0 = api_bind($cmp.handleInput)),\n      \"change\": _m1 || ($ctx._m1 = api_bind($cmp.handleInputChange)),\n      \"focusin\": _m2 || ($ctx._m2 = api_bind($cmp.onFocusIn)),\n      \"focusout\": _m3 || ($ctx._m3 = api_bind($cmp.handleInputBlur)),\n      \"keydown\": _m4 || ($ctx._m4 = api_bind($cmp.handleInputKeydown)),\n      \"click\": _m5 || ($ctx._m5 = api_bind($cmp.handleInputClick))\n    }\n  }), api_custom_element(\"lightning-button-icon\", _lightningButtonIcon, {\n    classMap: stc5,\n    props: {\n      \"iconName\": \"utility:event\",\n      \"variant\": \"bare\",\n      \"disabled\": $cmp.computedIconDisabledState,\n      \"title\": $cmp.computedSelectDateLabel,\n      \"alternativeText\": $cmp.computedSelectDateLabel\n    },\n    key: 7,\n    on: {\n      \"click\": _m6 || ($ctx._m6 = api_bind($cmp.handleDatePickerIconClick)),\n      \"keydown\": _m7 || ($ctx._m7 = api_bind($cmp.handleDatePickerIconKeyDown)),\n      \"focusin\": _m8 || ($ctx._m8 = api_bind($cmp.onFocusIn)),\n      \"focusout\": _m9 || ($ctx._m9 = api_bind($cmp.onFocusOut))\n    }\n  }), $cmp.isCalendarVisible ? api_custom_element(\"lightning-calendar\", _lightningCalendar, {\n    props: {\n      \"value\": $cmp.value,\n      \"min\": $cmp.min,\n      \"max\": $cmp.max\n    },\n    key: 8,\n    on: {\n      \"select\": _m10 || ($ctx._m10 = api_bind($cmp.handleDateSelect)),\n      \"ready\": _m11 || ($ctx._m11 = api_bind($cmp.startPositioning)),\n      \"keydown\": _m12 || ($ctx._m12 = api_bind($cmp.handleCalendarKeyDown)),\n      \"focusin\": _m13 || ($ctx._m13 = api_bind($cmp.onFocusIn)),\n      \"focusout\": _m14 || ($ctx._m14 = api_bind($cmp.onFocusOut))\n    }\n  }) : null])]), $cmp.errorMessage ? api_element(\"div\", {\n    classMap: stc6,\n    attrs: {\n      \"id\": api_scoped_id(\"error-message\"),\n      \"data-error-message\": \"\",\n      \"aria-live\": \"assertive\"\n    },\n    key: 9\n  }, [api_text(api_dynamic_text($cmp.errorMessage))]) : null];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-datepicker_datepicker\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./datepicker.html\";\nimport labelInvalidDate from '@salesforce/label/LightningDateTimePicker.invalidDate';\nimport labelRangeOverflow from '@salesforce/label/LightningDateTimePicker.rangeOverflow';\nimport labelRangeUnderflow from '@salesforce/label/LightningDateTimePicker.rangeUnderflow';\nimport labelMinRangeMessage from '@salesforce/label/LightningDateTimePicker.minRangeMessage';\nimport labelMaxRangeMessage from '@salesforce/label/LightningDateTimePicker.maxRangeMessage';\nimport labelMinAndMaxRangeMessage from '@salesforce/label/LightningDateTimePicker.minAndMaxRangeMessage';\nimport labelRequired from '@salesforce/label/LightningControl.required';\nimport labelSelectDateFor from '@salesforce/label/LightningDateTimePicker.selectDateFor';\nimport shortDateFormat from '@salesforce/i18n/dateTime.shortDateFormat';\nimport mediumDateFormat from '@salesforce/i18n/dateTime.mediumDateFormat';\nimport longDateFormat from '@salesforce/i18n/dateTime.longDateFormat';\nimport { parseDateTime, normalizeISODate, normalizeFormattedDate } from 'lightning/internationalizationLibrary';\nimport { STANDARD_DATE_FORMAT } from 'lightning/iso8601Utils';\nimport { startPositioning, stopPositioning, Direction } from 'lightning/positionLibrary';\nimport { classSet, formatLabel } from 'lightning/utils';\nimport { normalizeBoolean, normalizeAriaAttribute, normalizeString, synchronizeAttrs, getRealDOMId, isIE11 } from 'lightning/utilsPrivate';\nimport { generateUniqueId, normalizeVariant, VARIANT } from 'lightning/inputUtils';\nimport { handleKeyDownOnDatePickerIcon, handleBasicKeyDownBehaviour } from './keyboard';\nconst i18n = {\n  invalidDate: labelInvalidDate,\n  rangeOverflow: labelRangeOverflow,\n  rangeUnderflow: labelRangeUnderflow,\n  minRangeMessage: labelMinRangeMessage,\n  maxRangeMessage: labelMaxRangeMessage,\n  minAndMaxRangeMessage: labelMinAndMaxRangeMessage,\n  required: labelRequired,\n  selectDateFor: labelSelectDateFor\n};\nconst ARIA_CONTROLS = 'aria-controls';\nconst ARIA_LABEL = 'aria-label';\nconst ARIA_LABELLEDBY = 'aria-labelledby';\nconst ARIA_DESCRIBEDBY = 'aria-describedby';\nconst DATE_STYLE = {\n  SHORT: 'short',\n  MEDIUM: 'medium',\n  LONG: 'long'\n};\n\nclass LightningDatePicker extends LightningElement {\n  /**\n   * Controls auto-filling of the input. Set the attribute to pass\n   * through autocomplete values to be interpreted by the browser.\n   * By default autocomplete is off to avoid overlap of dropdown.\n   * @type {string}\n   */\n  get min() {\n    return this._min;\n  }\n\n  set min(value) {\n    // W-7702418: We previously always set the raw value and should continue to do so unless\n    // normalization of the given value is possible.\n    this._min = value;\n    this._displayMin = value;\n    const normalizedDate = normalizeISODate(value, this.dateFormat);\n\n    if (normalizedDate.isoValue) {\n      this._min = normalizedDate.isoValue;\n      this._displayMin = normalizedDate.displayValue;\n    }\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  set max(value) {\n    // W-7702418: We previously always set the raw value and should continue to do so unless\n    // normalization of the given value is possible.\n    this._max = value;\n    this._displayMax = value;\n    const normalizedDate = normalizeISODate(value, this.dateFormat);\n\n    if (normalizedDate.isoValue) {\n      this._max = normalizedDate.isoValue;\n      this._displayMax = normalizedDate.displayValue;\n    }\n  }\n\n  get messageWhenBadInput() {\n    return this._messageWhenBadInput || formatLabel(this.i18n.invalidDate, this.dateFormat);\n  }\n\n  set messageWhenBadInput(message) {\n    this._messageWhenBadInput = message;\n  }\n\n  get messageWhenRangeOverflow() {\n    return this._messageWhenRangeOverflow || formatLabel(this.i18n.rangeOverflow, this._displayMax);\n  }\n\n  set messageWhenRangeOverflow(message) {\n    this._messageWhenRangeOverflow = message;\n  }\n\n  get messageWhenRangeUnderflow() {\n    return this._messageWhenRangeUnderflow || formatLabel(this.i18n.rangeUnderflow, this._displayMin);\n  }\n\n  set messageWhenRangeUnderflow(message) {\n    this._messageWhenRangeUnderflow = message;\n  } // setter is required to properly trigger update\n\n\n  get ariaLabel() {\n    return this._ariaLabel;\n  }\n\n  set ariaLabel(val) {\n    this._ariaLabel = val;\n    this.synchronizeA11y();\n  }\n\n  set ariaLabelledByElement(el) {\n    this._ariaLabelledBy = el;\n    this.synchronizeA11y();\n  }\n\n  get ariaLabelledByElement() {\n    return this._ariaLabelledBy;\n  }\n\n  set ariaControlsElement(el) {\n    this._ariaControls = el;\n    this.synchronizeA11y();\n  }\n\n  get ariaControlsElement() {\n    return this._ariaControls;\n  }\n\n  set ariaDescribedByElements(el) {\n    if (Array.isArray(el)) {\n      this._ariaDescribedBy = el;\n    } else {\n      this._ariaDescribedBy = [el];\n    }\n\n    this.synchronizeA11y();\n  }\n\n  get ariaDescribedByElements() {\n    return this._ariaDescribedBy;\n  }\n\n  get ariaLabelledbyId() {\n    return getRealDOMId(this._ariaLabelledBy);\n  }\n\n  get ariaControlsId() {\n    return getRealDOMId(this.ariaControlsElement);\n  }\n\n  synchronizeA11y() {\n    const input = this.template.querySelector('input');\n\n    if (!input) {\n      return;\n    }\n\n    synchronizeAttrs(input, {\n      [ARIA_LABELLEDBY]: this.ariaLabelledbyId,\n      [ARIA_DESCRIBEDBY]: this.computedAriaDescribedby,\n      [ARIA_CONTROLS]: this.ariaControlsId,\n      [ARIA_LABEL]: this._ariaLabel\n    }); // Set aria-describedby on the calendar button that opens the calendar dialog\n    // to inform user of date validity (min/max). Same is done for input.\n\n    const calendarButton = this.template.querySelector('lightning-button-icon');\n    calendarButton.ariaDescribedBy = this.computedDatepickerButtonAriaDescribedby;\n  }\n\n  renderedCallback() {\n    this.synchronizeA11y();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(newValue) {\n    const normalizedDate = normalizeISODate(newValue, this.dateFormat);\n    this._value = normalizedDate.isoValue;\n    this._displayValue = normalizedDate.displayValue;\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = normalizeBoolean(value);\n  }\n\n  get readOnly() {\n    return this._readonly;\n  }\n\n  set readOnly(value) {\n    this._readonly = normalizeBoolean(value);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  set required(value) {\n    this._required = normalizeBoolean(value);\n  }\n\n  set fieldLevelHelp(value) {\n    this._fieldLevelHelp = value;\n  }\n\n  get fieldLevelHelp() {\n    return this._fieldLevelHelp;\n  }\n\n  get variant() {\n    return this._variant || VARIANT.STANDARD;\n  }\n\n  set variant(value) {\n    this._variant = normalizeVariant(value);\n  }\n\n  focus() {\n    if (this.connected) {\n      this.inputElement.focus();\n    }\n  }\n\n  blur() {\n    if (this.connected) {\n      this.inputElement.blur();\n    }\n  }\n\n  showHelpMessage(message) {\n    if (!message) {\n      this.classList.remove('slds-has-error');\n      this._errorMessage = '';\n    } else {\n      this.classList.add('slds-has-error');\n      this._errorMessage = message;\n    }\n  }\n\n  hasBadInput() {\n    return !!this._displayValue && this._value === null;\n  }\n\n  get dateStyle() {\n    return this._dateStyle;\n  }\n\n  set dateStyle(value) {\n    this._dateStyle = normalizeString(value, {\n      fallbackValue: DATE_STYLE.MEDIUM,\n      validValues: [DATE_STYLE.SHORT, DATE_STYLE.MEDIUM, DATE_STYLE.LONG]\n    });\n    this.dateFormat = this.getDateFormatFromStyle(this._dateStyle);\n    const normalizedDate = normalizeISODate(this._value, this.dateFormat);\n    this._displayValue = normalizedDate.displayValue;\n  }\n\n  constructor() {\n    super();\n    this._disabled = false;\n    this._readonly = false;\n    this._required = false;\n    this._value = null;\n    this._calendarVisible = false;\n    this._displayValue = null;\n    this._errorMessage = '';\n    this._fieldLevelHelp = void 0;\n    this._variant = void 0;\n    this._min = void 0;\n    this._max = void 0;\n    this._displayMin = void 0;\n    this._displayMax = void 0;\n    this.label = void 0;\n    this.name = void 0;\n    this.placeholder = void 0;\n    this.autocomplete = 'off';\n    this.messageWhenValueMissing = void 0;\n    this._ariaLabelledBy = void 0;\n    this._ariaControls = void 0;\n    this._ariaDescribedBy = [];\n    this.uniqueId = generateUniqueId();\n  }\n\n  connectedCallback() {\n    this.connected = true;\n    this.keyboardInterface = this.datepickerKeyboardInterface();\n  }\n\n  disconnectedCallback() {\n    this.connected = false;\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get isLabelHidden() {\n    return this.variant === VARIANT.LABEL_HIDDEN;\n  }\n\n  get computedLabelClass() {\n    return classSet('slds-form-element__label').add({\n      'slds-assistive-text': this.isLabelHidden\n    }).toString();\n  }\n\n  get computedUniqueErrorMessageElementId() {\n    const el = this.template.querySelector('[data-error-message]');\n    return getRealDOMId(el);\n  }\n\n  get computedUniqueRangeMessageElementId() {\n    const el = this.template.querySelector('[data-range-message]');\n    return getRealDOMId(el);\n  }\n\n  get isRangeMessageVisible() {\n    return this.min || this.max;\n  }\n\n  get isCalendarVisible() {\n    return this._calendarVisible;\n  }\n\n  get displayValue() {\n    return this._displayValue;\n  }\n\n  get errorMessage() {\n    return this._errorMessage;\n  }\n\n  get computedIconDisabledState() {\n    return this.disabled || this.readOnly;\n  }\n\n  get computedAriaDescribedby() {\n    const ariaValues = [];\n\n    if (this.errorMessage) {\n      ariaValues.push(this.computedUniqueErrorMessageElementId);\n    } // To inform user of valid date ranges that are set via min/max attributes\n\n\n    if (this.isRangeMessageVisible) {\n      ariaValues.push(this.computedUniqueRangeMessageElementId);\n    }\n\n    this._ariaDescribedBy.forEach(item => {\n      const id = getRealDOMId(item);\n\n      if (id) {\n        ariaValues.push(id);\n      }\n    });\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get computedDatepickerButtonAriaDescribedby() {\n    if (this.isRangeMessageVisible) {\n      return this.computedUniqueRangeMessageElementId;\n    }\n\n    return '';\n  }\n\n  get computedSelectDateLabel() {\n    return formatLabel(this.i18n.selectDateFor, this.label);\n  }\n\n  get rangeMessage() {\n    if (this.min && !this.max) {\n      // If only min is set\n      return formatLabel(this.i18n.minRangeMessage, this._displayMin);\n    } else if (this.max && !this.min) {\n      // If only max is set\n      return formatLabel(this.i18n.maxRangeMessage, this._displayMax);\n    } else if (this.min && this.max) {\n      // If both min and max are set\n      return formatLabel(this.i18n.minAndMaxRangeMessage, this._displayMin, this._displayMax);\n    }\n\n    return '';\n  }\n\n  handleInputChange(event) {\n    event.stopPropagation(); // keeping the display value in sync with the element's value\n\n    this._displayValue = event.currentTarget.value;\n    this._value = this.parseFormattedDate(this._displayValue);\n    this.dispatchChangeEvent();\n  }\n\n  handleInput() {\n    // keeping the display value in sync with the element's value\n    this._displayValue = this.inputElement.value; // IE11 fires an input event along with the click event when the element has a placeholder.\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/101220/\n    // remove this block when we stop support for IE11\n\n    if (isIE11 && this.placeholder !== undefined) {\n      return;\n    } // Making sure that the focus remains on the input and we're not triggering leave\n\n\n    this.hideCalendarAndFocusTrigger();\n  }\n\n  handleInputBlur() {\n    if (this._value !== null) {\n      const normalizedDate = normalizeISODate(this._value, this.dateFormat);\n      this._displayValue = normalizedDate.displayValue;\n    }\n\n    this.onFocusOut();\n  }\n\n  handleInputClick(event) {\n    if (this.readOnly) {\n      return;\n    }\n\n    this.calendarTrigger = event.target;\n    this.showCalendar();\n  }\n  /**\n   * When the element gains focus this function is called.\n   */\n\n\n  onFocusIn() {\n    if (this._pendingFocusOut) {\n      this._pendingFocusOut = false;\n    }\n\n    if (!this._focused) {\n      this.dispatchEvent(new CustomEvent('focus'));\n    }\n\n    this._focused = true;\n  }\n  /**\n   * When the element looses its focus this function is called.\n   */\n\n\n  onFocusOut() {\n    // This assumes that a focusin will be dispatched after a focusout\n    this._pendingFocusOut = true; // eslint-disable-next-line @lwc/lwc/no-async-operation\n\n    requestAnimationFrame(() => {\n      if (this._pendingFocusOut) {\n        this._focused = false;\n        this.hideCalendar();\n        this.dispatchEvent(new CustomEvent('blur'));\n      }\n    });\n  }\n\n  handleDatePickerIconClick(event) {\n    if (this.readOnly || this.disabled) {\n      return;\n    }\n\n    this.calendarTrigger = event.target;\n    this.showAndFocusCalendar();\n  }\n\n  handleInputKeydown(event) {\n    this.calendarTrigger = event.target;\n    handleBasicKeyDownBehaviour(event, this.keyboardInterface);\n  }\n\n  handleDatePickerIconKeyDown(event) {\n    this.calendarTrigger = event.target;\n    handleKeyDownOnDatePickerIcon(event, this.keyboardInterface);\n  }\n\n  handleCalendarKeyDown(event) {\n    handleBasicKeyDownBehaviour(event, this.keyboardInterface);\n  }\n\n  handleDateSelect(event) {\n    event.stopPropagation();\n    this._value = event.detail.value;\n    this._displayValue = normalizeISODate(this._value, this.dateFormat).displayValue;\n    this.hideCalendarAndFocusTrigger();\n    this.dispatchChangeEvent();\n  }\n\n  showAndFocusCalendar() {\n    this.showCalendar(); // eslint-disable-next-line @lwc/lwc/no-async-operation\n\n    requestAnimationFrame(() => {\n      this.focusCalendar();\n    });\n  }\n\n  hideCalendarAndFocusTrigger() {\n    this.hideCalendar();\n\n    if (this.calendarTrigger) {\n      this.calendarTrigger.focus();\n    }\n  }\n\n  focusCalendar() {\n    const calendar = this.template.querySelector('lightning-calendar');\n\n    if (calendar) {\n      calendar.focus();\n    }\n  }\n\n  startPositioning() {\n    if (!this._relationship) {\n      this._relationship = startPositioning(this, {\n        target: () => this.template.querySelector('input'),\n        element: () => this.template.querySelector('lightning-calendar').shadowRoot.querySelector('div'),\n        align: {\n          horizontal: Direction.Right,\n          vertical: Direction.Top\n        },\n        targetAlign: {\n          horizontal: Direction.Right,\n          vertical: Direction.Bottom\n        },\n        autoFlip: true,\n        // Auto flip direction if not have enough space\n        leftAsBoundary: true // horizontal flip uses target left as boundary\n\n      });\n    } else {\n      this._relationship.reposition();\n    }\n  }\n\n  stopPositioning() {\n    if (this._relationship) {\n      stopPositioning(this._relationship);\n      this._relationship = null;\n    }\n  }\n\n  showCalendar() {\n    if (!this.isCalendarVisible) {\n      this.rootElement.classList.add('slds-is-open');\n      this._calendarVisible = true;\n    }\n  }\n\n  hideCalendar() {\n    if (this.isCalendarVisible) {\n      this.rootElement.classList.remove('slds-is-open');\n      this.stopPositioning();\n      this._calendarVisible = false;\n    }\n  }\n\n  get rootElement() {\n    return this.template.querySelector('div');\n  }\n\n  get inputElement() {\n    return this.template.querySelector('input');\n  }\n\n  get dateFormat() {\n    if (!this._dateFormat) {\n      this._dateFormat = this.getDateFormatFromStyle();\n    }\n\n    return this._dateFormat;\n  }\n\n  set dateFormat(value) {\n    this._dateFormat = value;\n  }\n\n  getDateFormatFromStyle(dateStyle) {\n    let dateFormat;\n\n    switch (dateStyle) {\n      case DATE_STYLE.SHORT:\n        dateFormat = shortDateFormat;\n        break;\n\n      case DATE_STYLE.LONG:\n        dateFormat = longDateFormat;\n        break;\n\n      default:\n        dateFormat = mediumDateFormat;\n        break;\n    }\n\n    return dateFormat;\n  }\n\n  dispatchChangeEvent() {\n    this.dispatchEvent(new CustomEvent('change', {\n      composed: true,\n      bubbles: true,\n      detail: {\n        value: this._value\n      }\n    }));\n  }\n\n  datepickerKeyboardInterface() {\n    const that = this;\n    return {\n      showCalendar() {\n        that.showAndFocusCalendar();\n      },\n\n      hideCalendar() {\n        that.hideCalendarAndFocusTrigger();\n      },\n\n      isCalendarVisible() {\n        return that.isCalendarVisible;\n      }\n\n    };\n  }\n\n  parse(dateString) {\n    // We cannot use parseDateTimeISO8601 here because that method does not have a strict flag. If the value is not an ISO string, that method will parse using the native Date()\n    // Alternatively we could call isValidISODateTimeString and then parseDateTimeISO8601.\n    return parseDateTime(dateString, STANDARD_DATE_FORMAT, true);\n  }\n\n  get allowedDateFormats() {\n    // We should prioritize the long, because a long date matched with the medium format. An issue in aura?\n    // Ex: September 8, 2017 when be parsed with the medium format, returns a valid iso date.\n    return [longDateFormat, mediumDateFormat, shortDateFormat];\n  }\n  /**\n   * Parses the input date and sets the dateFormat used to parse the displayValue\n   * if it is a valid Date.\n   *\n   * @param {String} displayValue - The input date.\n   * @return {null | string} - A normalized formatted date if displayValue is valid. null otherwise.\n   */\n\n\n  parseFormattedDate(displayValue) {\n    const allowedFormats = this.allowedDateFormats;\n    const n = allowedFormats.length;\n    let i = 0,\n        value = null;\n\n    do {\n      value = normalizeFormattedDate(displayValue, allowedFormats[i]);\n      i++;\n    } while (value === null && i < n);\n\n    return value;\n  }\n\n  get hasExternalLabel() {\n    return this.variant === VARIANT.LABEL_HIDDEN && this.ariaLabelledByElement && this.ariaLabelledByElement.length;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nLightningDatePicker.delegatesFocus = true;\n\n_registerDecorators(LightningDatePicker, {\n  publicProps: {\n    label: {\n      config: 0\n    },\n    name: {\n      config: 0\n    },\n    placeholder: {\n      config: 0\n    },\n    autocomplete: {\n      config: 0\n    },\n    messageWhenValueMissing: {\n      config: 0\n    },\n    min: {\n      config: 3\n    },\n    max: {\n      config: 3\n    },\n    messageWhenBadInput: {\n      config: 3\n    },\n    messageWhenRangeOverflow: {\n      config: 3\n    },\n    messageWhenRangeUnderflow: {\n      config: 3\n    },\n    ariaLabel: {\n      config: 3\n    },\n    ariaLabelledByElement: {\n      config: 3\n    },\n    ariaControlsElement: {\n      config: 3\n    },\n    ariaDescribedByElements: {\n      config: 3\n    },\n    value: {\n      config: 3\n    },\n    disabled: {\n      config: 3\n    },\n    readOnly: {\n      config: 3\n    },\n    required: {\n      config: 3\n    },\n    fieldLevelHelp: {\n      config: 3\n    },\n    variant: {\n      config: 3\n    },\n    dateStyle: {\n      config: 3\n    }\n  },\n  publicMethods: [\"focus\", \"blur\", \"showHelpMessage\", \"hasBadInput\"],\n  track: {\n    _disabled: 1,\n    _readonly: 1,\n    _required: 1,\n    _value: 1,\n    _calendarVisible: 1,\n    _displayValue: 1,\n    _errorMessage: 1,\n    _fieldLevelHelp: 1,\n    _variant: 1\n  },\n  fields: [\"_min\", \"_max\", \"_displayMin\", \"_displayMax\", \"_ariaLabelledBy\", \"_ariaControls\", \"_ariaDescribedBy\"]\n});\n\nexport default _registerComponent(LightningDatePicker, {\n  tmpl: _tmpl\n});","import { normalizeKeyValue } from 'lightning/utilsPrivate';\nexport function handleKeyDownOnDatePickerIcon(event, datepickerInterface) {\n  switch (normalizeKeyValue(event.key)) {\n    case 'Enter':\n    case ' ':\n      preventDefaultAndStopPropagation(event);\n      datepickerInterface.showCalendar();\n      break;\n\n    case 'Escape':\n      preventDefaultAndStopPropagation(event);\n      datepickerInterface.hideCalendar();\n      break;\n\n    default:\n  }\n}\nexport function handleBasicKeyDownBehaviour(event, datepickerInterface) {\n  if (!datepickerInterface.isCalendarVisible()) {\n    return;\n  }\n\n  if (normalizeKeyValue(event.key) === 'Escape') {\n    preventDefaultAndStopPropagation(event);\n    datepickerInterface.hideCalendar();\n  }\n}\n\nfunction preventDefaultAndStopPropagation(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}","import _implicitStylesheets from \"./datetimepicker.css\";\n\nimport _implicitScopedStylesheets from \"./datetimepicker.scoped.css?scoped=true\";\n\nimport _lightningHelptext from \"lightning/helptext\";\nimport _lightningDatepicker from \"lightning/datepicker\";\nimport _lightningTimepicker from \"lightning/timepicker\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-form\": true\n  },\n  attrs: {\n    \"tabindex\": \"-1\"\n  },\n  key: 0\n};\nconst stc1 = {\n  classMap: {\n    \"slds-form-element\": true,\n    \"slds-form-element_compound\": true\n  },\n  key: 1\n};\nconst stc2 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 4\n};\nconst stc3 = {\n  classMap: {\n    \"slds-form-element__group\": true\n  },\n  key: 5\n};\nconst stc4 = {\n  classMap: {\n    \"slds-form-element__row\": true\n  },\n  key: 6\n};\nconst stc5 = {\n  \"slds-form-element\": true\n};\nconst stc6 = {\n  \"slds-form-element__help\": true\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {d: api_dynamic_text, t: api_text, h: api_element, c: api_custom_element, b: api_bind, gid: api_scoped_id} = $api;\n  const {_m0, _m1, _m2, _m3, _m4, _m5} = $ctx;\n  return [api_element(\"div\", stc0, [api_element(\"fieldset\", stc1, [!$cmp.hasExternalLabel ? api_element(\"legend\", {\n    className: $cmp.computedLabelClass,\n    key: 2\n  }, [api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element(\"lightning-helptext\", _lightningHelptext, {\n    props: {\n      \"content\": $cmp.fieldLevelHelp\n    },\n    key: 3\n  }) : null : null, api_element(\"div\", stc2, [api_element(\"div\", stc3, [api_element(\"div\", stc4, [api_custom_element(\"lightning-datepicker\", _lightningDatepicker, {\n    classMap: stc5,\n    props: {\n      \"autocomplete\": $cmp.autocomplete,\n      \"min\": $cmp.dateMin,\n      \"max\": $cmp.dateMax,\n      \"label\": $cmp.i18n.date,\n      \"name\": $cmp.name,\n      \"variant\": $cmp.variant,\n      \"placeholder\": $cmp.placeholder,\n      \"readOnly\": $cmp.readOnly,\n      \"disabled\": $cmp.disabled,\n      \"dateStyle\": $cmp.dateStyle,\n      \"required\": $cmp.required\n    },\n    key: 7,\n    on: {\n      \"focus\": _m0 || ($ctx._m0 = api_bind($cmp.handleDatepickerFocus)),\n      \"blur\": _m1 || ($ctx._m1 = api_bind($cmp.handleDatepickerBlur)),\n      \"change\": _m2 || ($ctx._m2 = api_bind($cmp.handleDateChange))\n    }\n  }), api_custom_element(\"lightning-timepicker\", _lightningTimepicker, {\n    classMap: stc5,\n    props: {\n      \"autocomplete\": $cmp.autocomplete,\n      \"label\": $cmp.i18n.time,\n      \"name\": $cmp.name,\n      \"variant\": $cmp.variant,\n      \"timeStyle\": $cmp.timeStyle,\n      \"placeholder\": $cmp.placeholder,\n      \"readOnly\": $cmp.readOnly,\n      \"required\": $cmp.required,\n      \"disabled\": $cmp.disabled\n    },\n    key: 8,\n    on: {\n      \"focus\": _m3 || ($ctx._m3 = api_bind($cmp.handleTimepickerFocus)),\n      \"blur\": _m4 || ($ctx._m4 = api_bind($cmp.handleTimepickerBlur)),\n      \"change\": _m5 || ($ctx._m5 = api_bind($cmp.handleTimeChange))\n    }\n  })])])]), $cmp.customErrorMessage ? api_element(\"div\", {\n    classMap: stc6,\n    attrs: {\n      \"data-error-message\": \"\",\n      \"id\": api_scoped_id(\"errormessage\"),\n      \"aria-live\": \"assertive\"\n    },\n    key: 9\n  }, [api_text(api_dynamic_text($cmp.customErrorMessage))]) : null])])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-datetimepicker_datetimepicker\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./datetimepicker.html\";\nimport labelDate from '@salesforce/label/LightningDateTimePicker.dateLabel';\nimport labelRangeOverflow from '@salesforce/label/LightningDateTimePicker.rangeOverflow';\nimport labelRangeUnderflow from '@salesforce/label/LightningDateTimePicker.rangeUnderflow';\nimport labelTime from '@salesforce/label/LightningDateTimePicker.timeLabel';\nimport { classSet, formatLabel } from 'lightning/utils';\nimport { normalizeBoolean, normalizeAriaAttribute, synchronizeAttrs, getRealDOMId } from 'lightning/utilsPrivate';\nimport { getCurrentTime, normalizeISODateTime, normalizeFormattedDateTime } from 'lightning/internationalizationLibrary';\nimport { TIME_SEPARATOR } from 'lightning/iso8601Utils';\nimport { generateUniqueId, InteractingState, normalizeVariant, VARIANT } from 'lightning/inputUtils';\nconst i18n = {\n  date: labelDate,\n  rangeOverflow: labelRangeOverflow,\n  rangeUnderflow: labelRangeUnderflow,\n  time: labelTime\n};\n\nclass LightningDateTimePicker extends LightningElement {\n  /**\n   * Controls auto-filling of the input. Set the attribute to pass\n   * through autocomplete values to be interpreted by the browser.\n   * By default autocomplete is off to avoid overlap of dropdowns.\n   * @type {string}\n   */\n  // getters and setters necessary to trigger sync\n  set timeAriaControls(val) {\n    this._timeAriaControls = val;\n    this.synchronizeA11y();\n  }\n\n  get timeAriaControls() {\n    return this._timeAriaControls;\n  }\n\n  set timeAriaLabelledBy(val) {\n    this._timeAriaLabelledBy = val;\n    this.synchronizeA11y();\n  }\n\n  get timeAriaLabelledBy() {\n    return this._timeAriaLabelledBy;\n  }\n\n  set timeAriaDescribedBy(val) {\n    this._timeAriaDescribedBy = val;\n    this.synchronizeA11y();\n  }\n\n  get timeAriaDescribedBy() {\n    return this._timeAriaDescribedBy;\n  }\n\n  get messageWhenBadInput() {\n    if (this._messageWhenBadInput) {\n      return this._messageWhenBadInput;\n    } else if (this.hasBadDateInput) {\n      return this.getDatepicker().messageWhenBadInput;\n    } else if (this.hasBadTimeInput) {\n      return this.getTimepicker().messageWhenBadInput;\n    }\n\n    return null;\n  }\n\n  set messageWhenBadInput(message) {\n    this._messageWhenBadInput = message;\n  }\n\n  get messageWhenRangeOverflow() {\n    return this._messageWhenRangeOverflow || formatLabel(i18n.rangeOverflow, this.formattedMax);\n  }\n\n  set messageWhenRangeOverflow(message) {\n    this._messageWhenRangeOverflow = message;\n  }\n\n  get messageWhenRangeUnderflow() {\n    return this._messageWhenRangeUnderflow || formatLabel(i18n.rangeUnderflow, this.formattedMin);\n  }\n\n  set messageWhenRangeUnderflow(message) {\n    this._messageWhenRangeUnderflow = message;\n  }\n\n  get max() {\n    return this.maxValue;\n  }\n\n  set max(newValue) {\n    this.maxValue = newValue;\n    this.calculateFormattedMaxValue();\n  }\n\n  get min() {\n    return this.minValue;\n  }\n\n  set min(newValue) {\n    this.minValue = newValue;\n    this.calculateFormattedMinValue();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(newValue) {\n    if (this.connected) {\n      this.setDateAndTimeValues(newValue);\n    } else {\n      // we set the values in connectedCallback to make sure timezone is available.\n      this._initialValue = newValue;\n    }\n  }\n\n  get timezone() {\n    return this._timezone;\n  }\n\n  set timezone(newValue) {\n    this._timezone = newValue;\n\n    if (this.connected) {\n      this.updateValuesForTimezone();\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = normalizeBoolean(value);\n  }\n\n  get readOnly() {\n    return this._readonly;\n  }\n\n  set readOnly(value) {\n    this._readonly = normalizeBoolean(value);\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  set required(value) {\n    this._required = normalizeBoolean(value);\n  }\n\n  set fieldLevelHelp(value) {\n    this._fieldLevelHelp = value;\n  }\n\n  get fieldLevelHelp() {\n    return this._fieldLevelHelp;\n  }\n\n  get variant() {\n    return this._variant || VARIANT.STANDARD;\n  }\n\n  set variant(value) {\n    this._variant = normalizeVariant(value);\n  }\n  /**\n   * Sets focus on the date input element.\n   */\n\n\n  focus() {\n    if (this.connected) {\n      this.getDatepicker().focus();\n    }\n  }\n  /**\n   * Removes keyboard focus from the input elements.\n   */\n\n\n  blur() {\n    if (this.connected) {\n      this.getDatepicker().blur();\n      this.getTimepicker().blur();\n    }\n  }\n\n  hasBadInput() {\n    return this.connected && (this.hasBadDateInput || this.hasBadTimeInput);\n  }\n\n  get hasBadDateInput() {\n    return this.getDatepicker().hasBadInput();\n  }\n\n  get hasBadTimeInput() {\n    const timeBadInput = this.getTimepicker().hasBadInput();\n    const timeMissing = this.required && this._dateValue && !this._timeValue;\n    return timeMissing || timeBadInput;\n  }\n\n  showHelpMessage(message) {\n    if (!this.connected) {\n      return;\n    }\n\n    if (!message) {\n      this.clearHelpMessage();\n      return;\n    }\n\n    if (this.hasBadDateInput && !this._messageWhenBadInput) {\n      this.clearHelpMessage();\n      this.getDatepicker().showHelpMessage(message);\n      return;\n    }\n\n    if (this.hasBadTimeInput && !this._messageWhenBadInput) {\n      this.clearHelpMessage();\n      this.getTimepicker().showHelpMessage(message);\n      return;\n    }\n\n    this.classList.add('slds-has-error');\n    this._customErrorMessage = message;\n  }\n\n  clearHelpMessage() {\n    this.classList.remove('slds-has-error');\n    this._customErrorMessage = '';\n    this.getDatepicker().showHelpMessage('');\n    this.getTimepicker().showHelpMessage('');\n  }\n\n  get isLabelHidden() {\n    return this.variant === VARIANT.LABEL_HIDDEN;\n  }\n\n  get computedLabelClass() {\n    return classSet('slds-form-element__legend slds-form-element__label').add({\n      'slds-assistive-text': this.isLabelHidden\n    }).toString();\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get customErrorMessage() {\n    return this._customErrorMessage;\n  }\n\n  get dateMin() {\n    return this._dateMin;\n  }\n\n  get dateMax() {\n    return this._dateMax;\n  }\n\n  get errorMessageElementId() {\n    return getRealDOMId(this.template.querySelector('[data-error-message]'));\n  }\n\n  get computedDateAriaDescribedBy() {\n    const ariaValues = [];\n\n    if (this.customErrorMessage) {\n      ariaValues.push(this.errorMessageElementId);\n    }\n\n    if (this.dateAriaDescribedBy) {\n      ariaValues.push(this.dateAriaDescribedBy);\n    }\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get computedTimeAriaDescribedBy() {\n    const ariaValues = [];\n\n    if (this.customErrorMessage) {\n      ariaValues.push(this.errorMessageElementId);\n    }\n\n    if (this.timeAriaDescribedBy) {\n      ariaValues.push(this.timeAriaDescribedBy);\n    }\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get hasExternalLabel() {\n    return this.variant === VARIANT.LABEL_HIDDEN && this.timeAriaLabelledBy && this.timeAriaLabelledBy.length && this.dateAriaLabelledBy && this.dateAriaLabelledBy.length;\n  }\n\n  constructor() {\n    super();\n    this._disabled = false;\n    this._readonly = false;\n    this._required = false;\n    this._fieldLevelHelp = void 0;\n    this._variant = void 0;\n    this._value = null;\n    this._timezone = null;\n    this._customErrorMessage = '';\n    this._dateMin = void 0;\n    this._dateMax = void 0;\n    this.label = void 0;\n    this.name = void 0;\n    this.placeholder = '';\n    this.dateStyle = void 0;\n    this.timeStyle = void 0;\n    this.timeAriaLabel = void 0;\n    this.autocomplete = 'off';\n    this.dateAriaControls = void 0;\n    this.dateAriaLabel = void 0;\n    this.dateAriaLabelledBy = void 0;\n    this.dateAriaDescribedBy = void 0;\n    this.messageWhenValueMissing = void 0;\n    this.uniqueId = generateUniqueId();\n  }\n\n  synchronizeA11y() {\n    const datepicker = this.template.querySelector('lightning-datepicker');\n    const timepicker = this.template.querySelector('lightning-timepicker');\n\n    if (datepicker) {\n      synchronizeAttrs(datepicker, {\n        ariaLabelledByElement: this.dateAriaLabelledBy,\n        ariaDescribedByElements: this.computedDateAriaDescribedBy,\n        ariaControlsElement: this.dateAriaControls,\n        'aria-label': this.dateAriaLabel\n      });\n    }\n\n    if (timepicker) {\n      synchronizeAttrs(timepicker, {\n        ariaLabelledByElement: this.timeAriaLabelledBy,\n        ariaDescribedByElements: this.computedTimeAriaDescribedBy,\n        ariaControlsElement: this.timeAriaControls,\n        'aria-label': this.timeAriaLabel\n      });\n    }\n  }\n\n  connectedCallback() {\n    this.connected = true; // we set the initial values here in order to make sure timezone is available.\n\n    this.updateValuesForTimezone(this._initialValue);\n    this.interactingState = new InteractingState({\n      debounceInteraction: true\n    });\n    this.interactingState.onenter(() => {\n      this.dispatchEvent(new CustomEvent('focus'));\n    });\n    this.interactingState.onleave(() => {\n      this.dispatchEvent(new CustomEvent('blur'));\n    });\n  }\n\n  renderedCallback() {\n    this.synchronizeA11y();\n  }\n\n  disconnectedCallback() {\n    this.connected = false;\n  }\n\n  getTimepicker() {\n    return this.template.querySelector('lightning-timepicker');\n  }\n\n  getDatepicker() {\n    return this.template.querySelector('lightning-datepicker');\n  }\n\n  handleDatepickerFocus() {\n    this._dateFocus = true;\n    this.interactingState.enter();\n  }\n\n  handleTimepickerFocus() {\n    this._timeFocus = true;\n    this.interactingState.enter();\n  }\n\n  handleDatepickerBlur() {\n    this._dateFocus = false; // timepicker fires focus before datepicker fires blur\n\n    if (!this._timeFocus) {\n      this.interactingState.leave();\n    }\n  }\n\n  handleTimepickerBlur() {\n    this._timeFocus = false; // datepicker fires focus before timepicker fires blur\n\n    if (!this._dateFocus) {\n      this.interactingState.leave();\n    }\n  }\n\n  handleDateChange(event) {\n    event.stopPropagation();\n\n    if (!event.detail) {\n      return;\n    }\n\n    this._dateValue = event.detail.value;\n\n    if (this._dateValue) {\n      this._timeValue = this._timeValue || getCurrentTime(this.timezone);\n      this.setTimepickerValue(this._timeValue);\n    }\n\n    this.updateValue();\n  }\n\n  handleTimeChange(event) {\n    event.stopPropagation();\n\n    if (!event.detail) {\n      return;\n    }\n\n    this._timeValue = event.detail.value;\n    this.updateValue();\n  }\n\n  updateValue() {\n    const dateValue = this._dateValue;\n    const timeValue = this._timeValue;\n\n    if (dateValue && timeValue) {\n      const dateTimeString = dateValue + TIME_SEPARATOR + timeValue;\n      this._value = normalizeFormattedDateTime(dateTimeString, this.timezone);\n      this.dispatchChangeEvent();\n    } else if (!dateValue) {\n      this._value = null;\n      this.dispatchChangeEvent();\n    }\n  }\n\n  dispatchChangeEvent() {\n    this.dispatchEvent(new CustomEvent('change', {\n      composed: true,\n      bubbles: true,\n      detail: {\n        value: this._value\n      }\n    }));\n  }\n\n  updateValuesForTimezone(datetimeValue) {\n    this.setDateAndTimeValues(datetimeValue || this._value);\n    this.calculateFormattedMinValue();\n    this.calculateFormattedMaxValue();\n  }\n\n  setDateAndTimeValues(value) {\n    const normalizedValue = normalizeISODateTime(value, this.timezone).isoValue;\n    const isDateOnly = normalizedValue && value.indexOf(TIME_SEPARATOR) < 0;\n\n    if (isDateOnly) {\n      this._dateValue = value;\n      this._value = this._dateValue;\n      this.setDatepickerValue(value);\n      return;\n    }\n\n    const dateAndTime = this.separateDateTime(normalizedValue);\n    this._dateValue = dateAndTime && dateAndTime[0];\n    this._timeValue = dateAndTime && dateAndTime[1];\n    this._value = value;\n    this.setDatepickerValue(this._dateValue);\n    this.setTimepickerValue(this._timeValue);\n  }\n\n  setDatepickerValue(value) {\n    const datepicker = this.getDatepicker();\n\n    if (datepicker) {\n      datepicker.value = value;\n    }\n  }\n\n  setTimepickerValue(value) {\n    const timepicker = this.getTimepicker();\n\n    if (timepicker) {\n      timepicker.value = value;\n    }\n  }\n\n  calculateFormattedMinValue() {\n    if (!this.min) {\n      return;\n    }\n\n    const normalizedDate = normalizeISODateTime(this.min, this.timezone);\n    this._dateMin = this.separateDateTime(normalizedDate.isoValue)[0];\n    this.formattedMin = normalizedDate.displayValue;\n  }\n\n  calculateFormattedMaxValue() {\n    if (!this.max) {\n      return;\n    }\n\n    const normalizedDate = normalizeISODateTime(this.max, this.timezone);\n    this._dateMax = this.separateDateTime(normalizedDate.isoValue)[0];\n    this.formattedMax = normalizedDate.displayValue;\n  }\n\n  separateDateTime(isoString) {\n    return typeof isoString === 'string' ? isoString.split(TIME_SEPARATOR) : null;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nLightningDateTimePicker.delegatesFocus = true;\n\n_registerDecorators(LightningDateTimePicker, {\n  publicProps: {\n    label: {\n      config: 0\n    },\n    name: {\n      config: 0\n    },\n    placeholder: {\n      config: 0\n    },\n    dateStyle: {\n      config: 0\n    },\n    timeStyle: {\n      config: 0\n    },\n    timeAriaLabel: {\n      config: 0\n    },\n    autocomplete: {\n      config: 0\n    },\n    timeAriaControls: {\n      config: 3\n    },\n    timeAriaLabelledBy: {\n      config: 3\n    },\n    timeAriaDescribedBy: {\n      config: 3\n    },\n    dateAriaControls: {\n      config: 0\n    },\n    dateAriaLabel: {\n      config: 0\n    },\n    dateAriaLabelledBy: {\n      config: 0\n    },\n    dateAriaDescribedBy: {\n      config: 0\n    },\n    messageWhenValueMissing: {\n      config: 0\n    },\n    messageWhenBadInput: {\n      config: 3\n    },\n    messageWhenRangeOverflow: {\n      config: 3\n    },\n    messageWhenRangeUnderflow: {\n      config: 3\n    },\n    max: {\n      config: 3\n    },\n    min: {\n      config: 3\n    },\n    value: {\n      config: 3\n    },\n    timezone: {\n      config: 3\n    },\n    disabled: {\n      config: 3\n    },\n    readOnly: {\n      config: 3\n    },\n    required: {\n      config: 3\n    },\n    fieldLevelHelp: {\n      config: 3\n    },\n    variant: {\n      config: 3\n    }\n  },\n  publicMethods: [\"focus\", \"blur\", \"hasBadInput\", \"showHelpMessage\"],\n  track: {\n    _disabled: 1,\n    _readonly: 1,\n    _required: 1,\n    _fieldLevelHelp: 1,\n    _variant: 1,\n    _value: 1,\n    _timezone: 1,\n    _customErrorMessage: 1,\n    _dateMin: 1,\n    _dateMax: 1\n  }\n});\n\nexport default _registerComponent(LightningDateTimePicker, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./focusTrap.css\";\n\nimport _implicitScopedStylesheets from \"./focusTrap.scoped.css?scoped=true\";\n\nimport {registerTemplate} from \"lwc\";\nconst stc0 = [];\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {ti: api_tab_index, b: api_bind, h: api_element, s: api_slot} = $api;\n  const {_m0, _m1, _m2, _m3} = $ctx;\n  return [api_element(\"div\", {\n    attrs: {\n      \"tabindex\": api_tab_index($cmp._bookendTabIndex),\n      \"data-start\": \"\"\n    },\n    key: 0,\n    on: {\n      \"focus\": _m0 || ($ctx._m0 = api_bind($cmp._focusLastElement))\n    }\n  }), api_slot(\"\", {\n    key: 1,\n    on: {\n      \"focusin\": _m1 || ($ctx._m1 = api_bind($cmp._handleFocusIn)),\n      \"focusout\": _m2 || ($ctx._m2 = api_bind($cmp._handleFocusOut))\n    }\n  }, stc0, $slotset), api_element(\"div\", {\n    attrs: {\n      \"tabindex\": api_tab_index($cmp._bookendTabIndex),\n      \"data-end\": \"\"\n    },\n    key: 2,\n    on: {\n      \"focus\": _m3 || ($ctx._m3 = api_bind($cmp._focusFirstElement))\n    }\n  })];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.slots = [\"\"];\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-focusTrap_focusTrap\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./focusTrap.html\";\nimport { findAllTabbableElements } from 'lightning/focusUtils';\n\nclass FocusTrap extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this._startNode = void 0;\n    this._endNode = void 0;\n    this._focused = false;\n    this._initialized = false;\n    this._pendingFocusOut = false;\n  }\n\n  renderedCallback() {\n    if (!this._initialized) {\n      this._initialized = true;\n      this._startNode = this.template.querySelector('[data-start]');\n      this._endNode = this.template.querySelector('[data-end]');\n    }\n  }\n  /**\n   * Focuses the first focusable element in the focus trap.\n   */\n\n\n  focus() {\n    if (!this._focused) {\n      // We could potentially add support for focusing the element that has 'autofocus' attribute on it,\n      // and if none, then focus on the first element\n      this._focusFirstElement();\n    }\n  }\n\n  get _bookendTabIndex() {\n    return this._focused ? '0' : '-1';\n  }\n\n  _handleFocusIn() {\n    if (this._pendingFocusOut) {\n      this._pendingFocusOut = false;\n    }\n\n    this._focused = true;\n  }\n\n  _handleFocusOut() {\n    // This assumes that a focusin will be dispatched after a focusout\n    this._pendingFocusOut = true; // eslint-disable-next-line @lwc/lwc/no-async-operation\n\n    requestAnimationFrame(() => {\n      if (this._pendingFocusOut) {\n        this._focused = false;\n      }\n    });\n  }\n  /**\n   * Focuses on the specified element location.\n   * @param {String} elementLocation Could be 'first or 'last'.\n   */\n\n\n  _moveFocusTo(elementLocation) {\n    const focusableElements = this._getFocusableElements();\n\n    if (focusableElements.length > 0) {\n      let node;\n\n      if (elementLocation === 'last') {\n        node = focusableElements[focusableElements.length - 1];\n      } else if (elementLocation === 'first') {\n        node = focusableElements[0];\n      }\n\n      node.focus();\n    }\n  }\n  /**\n   * Focuses the last focusable element in the focus trap.\n   */\n\n\n  _focusFirstElement() {\n    this._moveFocusTo('first');\n  }\n  /**\n   * Focuses the last focusable element in the focus trap.\n   */\n\n\n  _focusLastElement() {\n    this._moveFocusTo('last');\n  }\n  /**\n   * Returns a list of the focusable children found within the element.\n   */\n\n\n  _getFocusableElements() {\n    return findAllTabbableElements(this.template.querySelector('slot'));\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(FocusTrap, {\n  publicMethods: [\"focus\"],\n  fields: [\"_startNode\", \"_endNode\", \"_focused\", \"_initialized\", \"_pendingFocusOut\"]\n});\n\nexport default _registerComponent(FocusTrap, {\n  tmpl: _tmpl\n});","import { BUBBLE_PREFIX } from 'lightning/tooltipLibrary';\nconst IGNORE_AUTOFOCUS = 'ignore-autofocus';\n/**\n *\n * Returns all tabbable elements within a containing element. Tabbable elements are:\n * a visible/non-disabled element that has a tabIndex of 0 and is not within a custom\n * element with tabindex attribute of “-1\" on it.\n *\n * @param {Element} container The element to search for tabbable element.\n * @returns {Array} Tabbable elements.\n */\n\nexport function findAllTabbableElements(container) {\n  const result = [];\n  traverseActiveTreeRecursively(container, element => {\n    // Remove the try/catch once https://github.com/salesforce/lwc/issues/1421 is fixed\n    try {\n      if (isTabbable({\n        element,\n        rootContainer: container\n      })) {\n        result.push(element);\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  });\n  return result;\n}\nconst FOCUSABLE_NODES = /^input$|^select$|^textarea$|^a$|^button$/;\n/**\n * Returns all focusable nodes within a containing element. Focusable nodes are\n * those which have a focus() method specified in the object definition spec:\n * https://www.w3.org/TR/DOM-Level-2-HTML/html.html\n *\n * Exception: button - Browsers today allow setting focus programmatically\n * on button elements + autofocus attribute present on HTMLButtonElement\n *\n * @param {Element} container The element to search for focusable nodes.\n * @returns {Array} Focusable elements.\n */\n\nexport function findAllFocusableNodes(container) {\n  const result = [];\n  traverseActiveTreeRecursively(container, element => {\n    if (FOCUSABLE_NODES.test(element.tagName.toLowerCase())) {\n      result.push(element);\n    }\n  });\n  return result;\n}\n/**\n * Finds the element that currently has focus, even when the element is part of a shadow root or iframe.\n *\n * @returns {Element} Element that has focus.\n */\n\nexport function getElementWithFocus() {\n  let currentFocusedElement = document.activeElement;\n\n  while (currentFocusedElement) {\n    if (currentFocusedElement.shadowRoot) {\n      let nextFocusedElement = currentFocusedElement.shadowRoot.activeElement;\n\n      if (nextFocusedElement) {\n        currentFocusedElement = nextFocusedElement;\n      } else {\n        return currentFocusedElement;\n      }\n    } else if (currentFocusedElement.contentDocument) {\n      let nextFocusedElement = currentFocusedElement.contentDocument.activeElement;\n\n      if (nextFocusedElement) {\n        currentFocusedElement = nextFocusedElement;\n      } else {\n        return currentFocusedElement;\n      }\n    } else {\n      return currentFocusedElement;\n    }\n  }\n\n  return undefined;\n}\n/**\n * Recursively traverse an active tree and run callback on each non-inert node element.\n *\n * @param {Node} node The starting node to recursively traverse.\n * @param {Function} callback Function to call on each node element.\n */\n\nfunction traverseActiveTreeRecursively(node, callback) {\n  if (!node) {\n    return;\n  }\n\n  if (node.nodeType === Node.ELEMENT_NODE) {\n    // inert is only supported by Chrome for now (behind a flag)\n    if (node.hasAttribute('inert')) {\n      return;\n    }\n\n    if (isIframe(node)) {\n      if (isIframeOfSameOrigin(node)) {\n        // for a same-origin iframe, we don't want to include the\n        // iframe itself in the list, since we can see any of the\n        // frames focusable children. So, skip calling callback on\n        // the iframe node, and proceed to traverse it's children.\n        traverseActiveTreeRecursively(node.contentDocument, callback);\n      } else {\n        // a non same-origin iframe is totally opaque, so include the\n        // iframe in the results, but do no try to traverse into the\n        // iframes children\n        if (callback) {\n          callback(node);\n        }\n      }\n\n      return;\n    }\n\n    if (callback) {\n      callback(node);\n    } // If the element has a shadow root, traverse that\n\n\n    if (node.shadowRoot) {\n      traverseActiveTreeRecursively(node.shadowRoot, callback);\n      return;\n    } // if it's a slot element, get all assigned nodes and traverse them\n\n\n    if (node.localName === 'slot') {\n      const slottedNodes = node.assignedNodes({\n        flatten: true\n      });\n\n      for (let i = 0; i < slottedNodes.length; i++) {\n        traverseActiveTreeRecursively(slottedNodes[i], callback);\n      }\n\n      return;\n    }\n  }\n\n  let child = node.firstChild;\n\n  while (child !== null) {\n    traverseActiveTreeRecursively(child, callback);\n    child = child.nextSibling;\n  }\n} // returns true if iframe is same origin, and therefore, can focus its internal elements\n\n\nfunction isIframe(node) {\n  return node.tagName === 'IFRAME' || node instanceof HTMLIFrameElement;\n}\n\nfunction isIframeOfSameOrigin(iframe) {\n  // if we can access contentDocument (is not null) on the iframe, then it is of same origin\n  return !!iframe.contentDocument;\n}\n\nconst ELEMENTS_WITH_DISABLED_ATTRIBUTE = ['button', 'select', 'textarea', 'input']; // https://html.spec.whatwg.org/multipage/interaction.html#dom-tabindex\n\nconst ELEMENTS_WITH_TABINDEX_ZERO_BY_DEFAULT = ['a', 'select', 'textarea', 'input', 'button', 'iframe', 'object', 'area', 'frame'];\n\nfunction isTabbable({\n  element,\n  rootContainer\n}) {\n  const elementLocalName = element.localName;\n\n  if (elementLocalName === 'input' && elementLocalName.type === 'hidden') {\n    return false;\n  }\n\n  const tabIndexAttribute = element.getAttribute('tabindex');\n\n  if (tabIndexAttribute === '-1') {\n    return false;\n  }\n\n  if (element.disabled && ELEMENTS_WITH_DISABLED_ATTRIBUTE.includes(element.localName)) {\n    return false;\n  } // Either the attribute was set directly to '0' or it's an element that has tabIndex zero by default\n\n\n  const hasTabIndexZero = tabIndexAttribute === '0' || element.tabIndex === 0 && ELEMENTS_WITH_TABINDEX_ZERO_BY_DEFAULT.includes(element.localName);\n  return hasTabIndexZero && isElementVisible(element) && isParentCustomElementTabbable({\n    element,\n    rootContainer\n  });\n}\n/**\n * Test if element has role='tooltip'\n * @param {Element} Element that has focus.\n * @returns {boolean} element has role='tooltip'\n */\n\n\nconst elemHasRoleTooltip = elem => {\n  return elem.getAttribute('role') === 'tooltip';\n};\n/**\n * Test if the element has class='ignore-autofocus'\n * @param {Element} Element that has focus.\n * @returns {boolean} element has class='ignore-autofocus'\n */\n\n\nconst elemHasIgnoreAutofocus = elem => {\n  return elem.classList.contains(IGNORE_AUTOFOCUS);\n};\n/**\n * Test if element has unique properties of <lightning-helptext>\n * @param {Element} Element that needs to be tested\n * @returns {boolean} element matches criteria of <lightning-helptext>\n */\n\n\nconst elemIsHelpTextComponent = elem => {\n  // properties of <lightning-helptext>\n  const tagNameIsButton = elem.tagName.toLowerCase() === 'button';\n  const ariaDescValue = elem.getAttribute('aria-describedby'); // ie11 doesn't support .startsWith()\n\n  const ariaValueMatchesPrefix = ariaDescValue ? String(ariaDescValue).indexOf(BUBBLE_PREFIX) === 0 : false;\n  return tagNameIsButton && ariaValueMatchesPrefix;\n};\n/**\n * Verify element doesn't have tooltip properties by running tooltip tests\n * Primary use in autofocus feature of LighningModal\n * @param {Element} Element to verify is not a tooltip\n * @returns {boolean} element is not a tooltip\n */\n\n\nconst elemIsNotTooltip = elem => {\n  if (!elem) {\n    return false;\n  } // evaluate whether element has properties of a tooltip\n  // if any tooltip test is true, the element is a tooltip\n\n\n  const elemIsTooltip = [// array of tooltip tests\n  elemHasRoleTooltip(elem), elemIsHelpTextComponent(elem), elemHasIgnoreAutofocus(elem)].some(val => val === true);\n  return !elemIsTooltip;\n};\n/**\n *\n * Returns tabbable elements, filtered to remove any tooltips\n * @param {Array} elemsArray Array of elements to filter tooltips from\n * @returns {Array} Filtered tabbable elements with no tooltips\n */\n\n\nexport function filterTooltips(elemsArray) {\n  // reference SLDS tooltip patterns && global focus in\n  // modalBase focusFirstElement() -> used to autofocus first element\n  // https://www.lightningdesignsystem.com/accessibility/patterns/tooltip/\n  return elemsArray && Array.isArray(elemsArray) && elemsArray.length > 0 ? elemsArray.filter(elemIsNotTooltip) : [];\n}\n\nfunction isElementVisible(element) {\n  const {\n    width,\n    height\n  } = element.getBoundingClientRect();\n  const nonZeroSize = width > 0 || height > 0;\n  return nonZeroSize && getComputedStyle(element).visibility !== 'hidden';\n}\n\nfunction isParentCustomElementTabbable({\n  element,\n  rootContainer\n}) {\n  const parentRoot = rootContainer.getRootNode();\n  const ownerDocument = element.ownerDocument;\n  let root = element.getRootNode();\n\n  while (root !== parentRoot && root !== ownerDocument) {\n    const host = root.host;\n\n    if (host.getAttribute('tabindex') === '-1') {\n      return false;\n    }\n\n    root = host && host.getRootNode();\n  }\n\n  return true;\n}","import _implicitStylesheets from \"./helptext.css\";\n\nimport _implicitScopedStylesheets from \"./helptext.scoped.css?scoped=true\";\n\nimport _lightningPrimitiveIcon from \"lightning/primitiveIcon\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-form-element__icon\": true\n  },\n  key: 0\n};\nconst stc1 = {\n  \"type\": \"button\"\n};\nconst stc2 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 3\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {c: api_custom_element, d: api_dynamic_text, t: api_text, h: api_element} = $api;\n  return [api_element(\"div\", stc0, [api_element(\"button\", {\n    className: $cmp.computedButtonClass,\n    attrs: stc1,\n    key: 1\n  }, [api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, {\n    props: {\n      \"svgClass\": \"slds-button__icon\",\n      \"iconName\": $cmp.iconName,\n      \"variant\": \"bare\"\n    },\n    key: 2\n  }), api_element(\"span\", stc2, [api_text(api_dynamic_text($cmp.alternativeText))])])])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-helptext_helptext\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./helptext.html\";\nimport labelButtonAlternativeText from '@salesforce/label/LightningHelptext.buttonAlternativeText';\nimport { isValidName } from 'lightning/iconUtils';\nimport { normalizeString } from 'lightning/utilsPrivate';\nimport { classSet } from 'lightning/utils';\nimport { Tooltip, TooltipType } from 'lightning/tooltipLibrary';\nconst DEFAULT_BUTTON_ALT_TEXT = labelButtonAlternativeText;\nconst DEFAULT_ICON_NAME = 'utility:info';\nconst DEFAULT_ICON_VARIANT = 'bare';\n/**\n * An icon with a text popover used for tooltips.\n */\n\nclass LightningHelptext extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      iconName: DEFAULT_ICON_NAME,\n      iconVariant: DEFAULT_ICON_VARIANT,\n      alternativeText: DEFAULT_BUTTON_ALT_TEXT\n    };\n    this._tooltip = null;\n  }\n\n  /**\n   * Text to be shown in the popover.\n   * @type {string}\n   * @param {string} value - The plain text string for the tooltip\n   */\n  get content() {\n    return this._tooltip ? this._tooltip.value : undefined;\n  }\n\n  set content(value) {\n    if (this._tooltip) {\n      this._tooltip.value = value;\n    } else if (value) {\n      // Note that because the tooltip target is a child element it may not be present in the\n      // dom during initial rendering.\n      this._tooltip = new Tooltip(value, {\n        root: this,\n        target: () => this.template.querySelector('button'),\n        type: TooltipType.Toggle\n      });\n\n      this._tooltip.initialize();\n    }\n  }\n\n  set iconName(value) {\n    this.state.iconName = value;\n  }\n  /**\n   * The Lightning Design System name of the icon used as the visible element.\n   * Names are written in the format 'utility:info' where 'utility' is the category,\n   * and 'info' is the specific icon to be displayed.\n   * The default is 'utility:info'.\n   * @type {string}\n   * @param {string} value the icon name to use\n   * @default utility:info\n   */\n\n\n  get iconName() {\n    if (isValidName(this.state.iconName)) {\n      return this.state.iconName;\n    }\n\n    return DEFAULT_ICON_NAME;\n  }\n\n  set iconVariant(value) {\n    this.state.iconVariant = value;\n  }\n  /**\n   * Changes the appearance of the icon.\n   * Accepted variants include inverse, warning, error.\n   * @type {string}\n   * @param {string} value the icon variant to use\n   * @default bare\n   */\n\n\n  get iconVariant() {\n    // NOTE: Leaving a note here because I just wasted a bunch of time\n    // investigating why both 'bare' and 'inverse' are supported in\n    // lightning-primitive-icon. lightning-icon also has a deprecated\n    // 'bare', but that one is synonymous to 'inverse'. This 'bare' means\n    // that no classes should be applied. So this component needs to\n    // support both 'bare' and 'inverse' while lightning-icon only needs to\n    // support 'inverse'.\n    return normalizeString(this.state.iconVariant, {\n      fallbackValue: DEFAULT_ICON_VARIANT,\n      validValues: ['bare', 'error', 'inverse', 'warning']\n    });\n  }\n  /**\n   * The assistive text for the button icon. The default is \"Help\".\n   * Screen readers announce the assistive text and help text content as {alternativeText} button {content}.\n   * If not set, screen readers announce \"Help button {content}\".\n   * The text should describe the function of the icon, for example, \"Show help text\".\n   *\n   * @type {string}\n   * @param {string} value The assistive text to set\n   * @default Help\n   */\n\n\n  get alternativeText() {\n    return this.state.alternativeText;\n  }\n\n  set alternativeText(value) {\n    // typeof 'string' check prevents <lightning-helptext alternative-text>\n    //   from setting 'true' as the a11y help text\n    // lwc treats above alternative-text as: true (typeof 'boolean')\n    //   we want to prevent 'true' or empty string as a11y text, instead default to 'Help'\n    if (value && typeof value === 'string' && value.trim() !== '') {\n      this.state.alternativeText = value;\n    } else {\n      // warn why they can't unset the value\n      // eslint-disable-next-line no-console\n      console.warn(`<lightning-helptext> Invalid alternativeText value: ${value}`);\n    }\n  }\n  /**\n   * Sets focus on the button.\n   */\n\n\n  focus() {\n    this.template.querySelector('button').focus();\n  }\n\n  disconnectedCallback() {\n    // W-6441609 helptext maybe destroyed first, and tooltip won't receive events to hide.\n    if (this._tooltip && !this._tooltip.initialized) {\n      this._tooltip.hide();\n    }\n\n    this._tooltip = null;\n  }\n\n  renderedCallback() {\n    if (this._tooltip && !this._tooltip.initialized) {\n      this._tooltip.initialize();\n    }\n  } // Get the classes to be applied to button based on the icon variant\n\n\n  get computedButtonClass() {\n    const classes = classSet('slds-button slds-button_icon');\n\n    switch (this.iconVariant) {\n      case 'error':\n        classes.add('slds-button_icon-error');\n        break;\n\n      case 'warning':\n        classes.add('slds-button_icon-warning');\n        break;\n\n      case 'inverse':\n        classes.add('slds-button_icon-inverse');\n        break;\n\n      case 'bare':\n        break;\n\n      default:\n    }\n\n    return classes.toString();\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningHelptext, {\n  publicProps: {\n    content: {\n      config: 3\n    },\n    iconName: {\n      config: 3\n    },\n    iconVariant: {\n      config: 3\n    },\n    alternativeText: {\n      config: 3\n    }\n  },\n  publicMethods: [\"focus\"],\n  track: {\n    state: 1\n  },\n  fields: [\"_tooltip\"]\n});\n\nexport default _registerComponent(LightningHelptext, {\n  tmpl: _tmpl\n});","// Taken from https://git.soma.salesforce.com/aura/lightning-global/blob/999dc35f948246181510df6e56f45ad4955032c2/src/main/components/lightning/SVGLibrary/stamper.js#L38-L60\nexport default function fetchSvg(url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.send();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          resolve(xhr.responseText);\n        } else {\n          reject(xhr);\n        }\n      }\n    };\n  });\n}","import { getPathPrefix, getToken } from 'lightning/configProvider';\nimport isIframeInEdge from './isIframeInEdge';\nconst validNameRe = /^([a-zA-Z]+):([a-zA-Z]\\w*)$/;\nconst underscoreRe = /_/g;\nlet pathPrefix;\nconst tokenNameMap = Object.assign(Object.create(null), {\n  action: 'lightning.actionSprite',\n  custom: 'lightning.customSprite',\n  doctype: 'lightning.doctypeSprite',\n  standard: 'lightning.standardSprite',\n  utility: 'lightning.utilitySprite'\n});\nconst tokenNameMapRtl = Object.assign(Object.create(null), {\n  action: 'lightning.actionSpriteRtl',\n  custom: 'lightning.customSpriteRtl',\n  doctype: 'lightning.doctypeSpriteRtl',\n  standard: 'lightning.standardSpriteRtl',\n  utility: 'lightning.utilitySpriteRtl'\n});\nconst defaultTokenValueMap = Object.assign(Object.create(null), {\n  'lightning.actionSprite': '/assets/icons/action-sprite/svg/symbols.svg',\n  'lightning.actionSpriteRtl': '/assets/icons/action-sprite/svg/symbols.svg',\n  'lightning.customSprite': '/assets/icons/custom-sprite/svg/symbols.svg',\n  'lightning.customSpriteRtl': '/assets/icons/custom-sprite/svg/symbols.svg',\n  'lightning.doctypeSprite': '/assets/icons/doctype-sprite/svg/symbols.svg',\n  'lightning.doctypeSpriteRtl': '/assets/icons/doctype-sprite/svg/symbols.svg',\n  'lightning.standardSprite': '/assets/icons/standard-sprite/svg/symbols.svg',\n  'lightning.standardSpriteRtl': '/assets/icons/standard-sprite/svg/symbols.svg',\n  'lightning.utilitySprite': '/assets/icons/utility-sprite/svg/symbols.svg',\n  'lightning.utilitySpriteRtl': '/assets/icons/utility-sprite/svg/symbols.svg'\n});\n\nconst getDefaultBaseIconPath = (category, nameMap) => defaultTokenValueMap[nameMap[category]];\n\nconst getBaseIconPath = (category, direction) => {\n  const nameMap = direction === 'rtl' ? tokenNameMapRtl : tokenNameMap;\n  return getToken(nameMap[category]) || getDefaultBaseIconPath(category, nameMap);\n};\n\nconst getMatchAtIndex = index => iconName => {\n  const result = validNameRe.exec(iconName);\n  return result ? result[index] : '';\n};\n\nconst getCategory = getMatchAtIndex(1);\nconst getName = getMatchAtIndex(2);\nexport { getCategory, getName };\nexport const isValidName = iconName => validNameRe.test(iconName);\nexport const getIconPath = (iconName, direction = 'ltr') => {\n  pathPrefix = pathPrefix !== undefined ? pathPrefix : getPathPrefix();\n\n  if (isValidName(iconName)) {\n    const baseIconPath = getBaseIconPath(getCategory(iconName), direction);\n\n    if (baseIconPath) {\n      // This check was introduced the following MS-Edge issue:\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9655192/\n      // If and when this get fixed, we can safely remove this block of code.\n      if (isIframeInEdge) {\n        // protocol => 'https:' or 'http:'\n        // host => hostname + port\n        const origin = `${window.location.protocol}//${window.location.host}`;\n        return `${origin}${pathPrefix}${baseIconPath}#${getName(iconName)}`;\n      }\n\n      return `${pathPrefix}${baseIconPath}#${getName(iconName)}`;\n    }\n  }\n\n  return '';\n};\nexport const computeSldsClass = iconName => {\n  if (isValidName(iconName)) {\n    const category = getCategory(iconName);\n    const name = getName(iconName).replace(underscoreRe, '-');\n    return `slds-icon-${category}-${name}`;\n  }\n\n  return '';\n};\nexport { polyfill } from './polyfill';","import _tmpl from \"./isIframeInEdge.html\";\nimport { registerComponent as _registerComponent } from \"lwc\";\n// Taken from https://github.com/jonathantneal/svg4everybody/pull/139\n// Remove this iframe-in-edge check once the following is resolved https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8323875/\nconst isEdgeUA = /\\bEdge\\/.(\\d+)\\b/.test(navigator.userAgent);\nconst inIframe = window.top !== window.self;\nconst isIframeInEdge = isEdgeUA && inIframe;\nexport default _registerComponent(isIframeInEdge, {\n  tmpl: _tmpl\n});","/**\nThis polyfill injects SVG sprites into the document for clients that don't\nfully support SVG. We do this globally at the document level for performance\nreasons. This causes us to lose namespacing of IDs across sprites. For example,\nif both #image from utility sprite and #image from doctype sprite need to be\nrendered on the page, both end up as #image from the doctype sprite (last one\nwins). SLDS cannot change their image IDs due to backwards-compatibility\nreasons so we take care of this issue at runtime by adding namespacing as we\npolyfill SVG elements.\n\nFor example, given \"/assets/icons/action-sprite/svg/symbols.svg#approval\", we\nreplace the \"#approval\" id with \"#${namespace}-approval\" and a similar\noperation is done on the corresponding symbol element.\n**/\nimport fetchSvg from './fetchSvg';\nimport supportsSvg from './supportsSvg';\nconst svgTagName = /svg/i;\n\nconst isSvgElement = el => el && svgTagName.test(el.nodeName);\n\nconst requestCache = {};\nconst symbolEls = {};\nconst svgFragments = {};\nconst spritesContainerId = 'slds-svg-sprites';\nlet spritesEl;\nexport function polyfill(el) {\n  if (!supportsSvg && isSvgElement(el)) {\n    if (!spritesEl) {\n      spritesEl = document.createElement('svg');\n      spritesEl.xmlns = 'http://www.w3.org/2000/svg';\n      spritesEl['xmlns:xlink'] = 'http://www.w3.org/1999/xlink';\n      spritesEl.style.display = 'none';\n      spritesEl.id = spritesContainerId;\n      document.body.insertBefore(spritesEl, document.body.childNodes[0]);\n    }\n\n    Array.from(el.getElementsByTagName('use')).forEach(use => {\n      // We access the href differently in raptor and in aura, probably\n      // due to difference in the way the svg is constructed.\n      const src = use.getAttribute('xlink:href') || use.getAttribute('href');\n\n      if (src) {\n        // \"/assets/icons/action-sprite/svg/symbols.svg#approval\" =>\n        // [\"/assets/icons/action-sprite/svg/symbols.svg\", \"approval\"]\n        const parts = src.split('#');\n        const url = parts[0];\n        const id = parts[1];\n        const namespace = url.replace(/[^\\w]/g, '-');\n        const href = `#${namespace}-${id}`;\n\n        if (url.length) {\n          // set the HREF value to no longer be an external reference\n          if (use.getAttribute('xlink:href')) {\n            use.setAttribute('xlink:href', href);\n          } else {\n            use.setAttribute('href', href);\n          } // only insert SVG content if it hasn't already been retrieved\n\n\n          if (!requestCache[url]) {\n            requestCache[url] = fetchSvg(url);\n          }\n\n          requestCache[url].then(svgContent => {\n            // create a document fragment from the svgContent returned (is parsed by HTML parser)\n            if (!svgFragments[url]) {\n              const svgFragment = document.createRange().createContextualFragment(svgContent);\n              svgFragments[url] = svgFragment;\n            }\n\n            if (!symbolEls[href]) {\n              const svgFragment = svgFragments[url];\n              const symbolEl = svgFragment.querySelector(`#${id}`);\n              symbolEls[href] = true;\n              symbolEl.id = `${namespace}-${id}`;\n              spritesEl.appendChild(symbolEl);\n            }\n          });\n        }\n      }\n    });\n  }\n}","import _tmpl from \"./supportsSvg.html\";\nimport { registerComponent as _registerComponent } from \"lwc\";\nimport isIframeInEdge from './isIframeInEdge'; // Taken from https://git.soma.salesforce.com/aura/lightning-global/blob/999dc35f948246181510df6e56f45ad4955032c2/src/main/components/lightning/SVGLibrary/stamper.js#L89-L98\n// Which looks like it was inspired by https://github.com/jonathantneal/svg4everybody/blob/377d27208fcad3671ed466e9511556cb9c8b5bd8/lib/svg4everybody.js#L92-L107\n// Modify at your own risk!\n\nconst newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/;\nconst webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/;\nconst olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/;\nconst isIE = newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537;\nconst supportsSvg = !isIE && !isIframeInEdge;\nexport default _registerComponent(supportsSvg, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./icon.css\";\n\nimport _implicitScopedStylesheets from \"./icon.scoped.css?scoped=true\";\n\nimport _lightningPrimitiveIcon from \"lightning/primitiveIcon\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 1\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {c: api_custom_element, d: api_dynamic_text, t: api_text, h: api_element} = $api;\n  return [api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, {\n    props: {\n      \"iconName\": $cmp._iconName,\n      \"size\": $cmp.size,\n      \"variant\": $cmp.variant,\n      \"src\": $cmp._src\n    },\n    key: 0\n  }), $cmp.alternativeText ? api_element(\"span\", stc0, [api_text(api_dynamic_text($cmp.alternativeText))]) : null];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-icon_icon\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./icon.html\";\nimport { classListMutation, normalizeString, isIE11 } from 'lightning/utilsPrivate';\nimport { computeSldsClass, getCategory, isValidName } from 'lightning/iconUtils';\nimport { normalizeVariant } from './util';\n/**\n * Represents a visual element that provides context and enhances usability.\n */\n\nclass LightningIcon extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this._src = void 0;\n    this.privateIconName = void 0;\n    this._iconName = void 0;\n    this._size = void 0;\n    this._variant = void 0;\n    this.alternativeText = void 0;\n  }\n\n  /**\n   * A uri path to a custom svg sprite, including the name of the resouce,\n   * for example: /assets/icons/standard-sprite/svg/test.svg#icon-heart\n   * @type {string}\n   */\n  get src() {\n    return this.privateSrc;\n  }\n\n  set src(value) {\n    this.privateSrc = value; // if value is not present, then we set the state back\n    // to the original iconName that was passed\n    // this might happen if the user sets a custom icon, then\n    // decides to revert back to SLDS by removing the src attribute\n\n    if (!value) {\n      this._iconName = this.iconName;\n      this.classList.remove('slds-icon-standard-default');\n    } // if isIE11 and the src is set\n    // we'd like to show the 'standard:default' icon instead\n    // for performance reasons.\n\n\n    if (value && isIE11) {\n      this.setDefault();\n      return;\n    }\n\n    this._src = value;\n  }\n  /**\n   * The Lightning Design System name of the icon.\n   * Names are written in the format 'utility:down' where 'utility' is the category,\n   * and 'down' is the specific icon to be displayed.\n   * @type {string}\n   * @required\n   */\n\n\n  get iconName() {\n    return this.privateIconName;\n  }\n\n  set iconName(value) {\n    this.privateIconName = value; // if src is set, we don't need to validate\n    // iconName\n\n    if (this.src) {\n      return;\n    }\n\n    if (isValidName(value)) {\n      const isAction = getCategory(value) === 'action'; // update classlist only if new iconName is different than _iconName\n      // otherwise classListMutation receives class:true and class: false and removes slds class\n\n      if (value !== this._iconName) {\n        classListMutation(this.classList, {\n          'slds-icon_container_circle': isAction,\n          [computeSldsClass(value)]: true,\n          [computeSldsClass(this._iconName)]: false\n        });\n      }\n\n      this._iconName = value;\n    } else {\n      console.warn(`<lightning-icon> Invalid icon name ${value}`); // eslint-disable-line no-console\n      // Invalid icon names should render a blank icon. Remove any\n      // classes that might have been previously added.\n\n      classListMutation(this.classList, {\n        'slds-icon_container_circle': false,\n        [computeSldsClass(this._iconName)]: false\n      });\n      this._iconName = undefined;\n    }\n  }\n  /**\n   * The size of the icon. Options include xx-small, x-small, small, medium, or large.\n   * The default is medium.\n   * @type {string}\n   * @default medium\n   */\n\n\n  get size() {\n    return normalizeString(this._size, {\n      fallbackValue: 'medium',\n      validValues: ['xx-small', 'x-small', 'small', 'medium', 'large']\n    });\n  }\n\n  set size(value) {\n    this._size = value;\n  }\n  /**\n   * The variant changes the appearance of a utility icon.\n   * Accepted variants include inverse, success, warning, and error.\n   * Use the inverse variant to implement a white fill in utility icons on dark backgrounds.\n   * @type {string}\n   */\n\n\n  get variant() {\n    return normalizeVariant(this._variant, this._iconName);\n  }\n\n  set variant(value) {\n    this._variant = value;\n  }\n\n  connectedCallback() {\n    this.classList.add('slds-icon_container');\n  }\n\n  setDefault() {\n    this._src = undefined;\n    this._iconName = 'standard:default';\n    this.classList.add('slds-icon-standard-default');\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningIcon, {\n  publicProps: {\n    alternativeText: {\n      config: 0\n    },\n    src: {\n      config: 3\n    },\n    iconName: {\n      config: 3\n    },\n    size: {\n      config: 3\n    },\n    variant: {\n      config: 3\n    }\n  },\n  fields: [\"_src\", \"privateIconName\", \"_iconName\", \"_size\", \"_variant\"]\n});\n\nexport default _registerComponent(LightningIcon, {\n  tmpl: _tmpl\n});","import { getCategory } from 'lightning/iconUtils';\nimport { normalizeString } from 'lightning/utilsPrivate';\nexport function normalizeVariant(variant, iconName) {\n  // Unfortunately, the `bare` variant was implemented to do what the\n  // `inverse` variant should have done. Keep this logic for as long as\n  // we support the `bare` variant.\n  if (variant === 'bare') {\n    // TODO: Deprecation warning using strippable assertion\n    variant = 'inverse';\n  }\n\n  if (getCategory(iconName) === 'utility') {\n    return normalizeString(variant, {\n      fallbackValue: '',\n      validValues: ['error', 'inverse', 'warning', 'success']\n    });\n  }\n\n  return 'inverse';\n}","let idCounter = 0;\nexport function generateUniqueId(prefix = 'input') {\n  idCounter++;\n  return `${prefix}-${idCounter}`;\n}","export { generateUniqueId } from './idGenerator';\nexport { InteractingState, debounce } from './interacting';\nexport { buildSyntheticValidity, getErrorMessage, FieldConstraintApiWithProxyInput, FieldConstraintApi } from './validity';\nexport { normalizeVariant, VARIANT } from './normalize';\nexport function isEmptyString(s) {\n  return s === undefined || s === null || typeof s === 'string' && s.trim() === '';\n}","import { EventEmitter } from 'lightning/utilsPrivate';\n/**\n Represents an object which keeps track of a user's interacting state.\n @constructor InteractingState\n @param {Object} options - The options object.\n @param {Object} [options.duration=2000] - The number of milliseconds of idle time to wait before exiting the interacting state.\n @param {Object} [options.debounceInteraction=false] - Whether to debounce interaction to ignore consecutive leave-enter interactions.\n **/\n\nexport class InteractingState {\n  constructor(options) {\n    const duration = options && options.duration >= 0 ? options.duration : 2000;\n    this.eventemitter = new EventEmitter();\n    this._interacting = false;\n    this._debouncedLeave = debounce(this.leave.bind(this), duration);\n    this._debounceInteraction = options && options.debounceInteraction;\n    this._interactedRecently = false;\n\n    if (this._debounceInteraction) {\n      // debounce leave until a short time later\n      this._debouncedEmitLeave = debounce(() => {\n        if (!this._interacting) {\n          this._interactedRecently = false;\n          this.eventemitter.emit('leave');\n        }\n      }, 200); // debounce enter until left\n\n      this._debouncedEmitEnter = () => {\n        if (!this._interactedRecently) {\n          this._interactedRecently = true;\n          this.eventemitter.emit('enter');\n        }\n      };\n    }\n  }\n  /**\n   Checks whether or not we are in the interacting state.\n   @method InteractingState#isInteracting\n   @return {Boolean} - Whether or not we are interacting.\n   **/\n\n\n  isInteracting() {\n    return this._interacting;\n  }\n  /**\n   Enters the interacting state.\n   @method InteractingState#enter\n   @returns {void}\n   **/\n\n\n  enter() {\n    if (!this._interacting) {\n      this._interacting = true;\n\n      if (this._debounceInteraction) {\n        this._debouncedEmitEnter();\n      } else {\n        this.eventemitter.emit('enter');\n      }\n    }\n  }\n  /**\n   Registers a handler to execute when we enter the interacting state.\n   @method InteractingState#onenter\n   @param {Function} handler - The callback function.\n   **/\n\n\n  onenter(handler) {\n    this.eventemitter.on('enter', handler);\n  }\n  /**\n   Leaves the interacting state.\n   @method InteractingState#leave\n   @returns {void}\n   **/\n\n\n  leave() {\n    if (this._interacting) {\n      this._interacting = false;\n\n      if (this._debounceInteraction) {\n        this._debouncedEmitLeave();\n      } else {\n        this.eventemitter.emit('leave');\n      }\n    }\n  }\n  /**\n   Registers a handler to execute when we leave the interacting state.\n   @method InteractingState#onleave\n   @param {Function} handler - The callback function.\n   **/\n\n\n  onleave(handler) {\n    this.eventemitter.on('leave', handler);\n  }\n  /**\n   Signals the start of the transition into the interacting state and\n   schedules a transition out of the interacting state after an idle\n   duration. Calling this method multiple times will reset the timer.\n   @method InteractingState#interacting\n   @returns {void}\n   **/\n\n\n  interacting() {\n    this.enter();\n\n    this._debouncedLeave();\n  }\n\n}\n/**\n Creates a debounced function that delays invoking `func` until after\n `delay` milliseconds have elapsed since the last time the debounced\n function was invoked.\n @function debounce\n @param {Function} func - The function to debounce\n @param {Number} delay - The number of milliseconds to delay\n @param {Object} options - The options object\n @param {Boolean} options.leading - Specify invoking on the leading edge of the timeout\n @return {Function} - debounced function\n **/\n\nexport function debounce(func, delay, options) {\n  const _options = options || {};\n\n  let invokeLeading = _options.leading;\n  let timer;\n  return function debounced() {\n    const args = Array.prototype.slice.apply(arguments);\n\n    if (invokeLeading) {\n      func.apply(this, args);\n      invokeLeading = false;\n    }\n\n    clearTimeout(timer); // eslint-disable-next-line @lwc/lwc/no-async-operation\n\n    timer = setTimeout(function () {\n      func.apply(this, args);\n      invokeLeading = _options.leading; // reset for next debounce sequence\n    }, delay);\n  };\n}","import { normalizeString } from 'lightning/utilsPrivate';\nexport const VARIANT = {\n  STANDARD: 'standard',\n  LABEL_HIDDEN: 'label-hidden',\n  LABEL_STACKED: 'label-stacked',\n  LABEL_INLINE: 'label-inline'\n};\n/**\nA variant normalization utility for attributes.\n@param {Any} value - The value to normalize.\n@return {Boolean} - The normalized value.\n**/\n\nexport function normalizeVariant(value) {\n  return normalizeString(value, {\n    fallbackValue: VARIANT.STANDARD,\n    validValues: [VARIANT.STANDARD, VARIANT.LABEL_HIDDEN, VARIANT.LABEL_STACKED, VARIANT.LABEL_INLINE]\n  });\n}","import labelBadInput from '@salesforce/label/LightningErrorMessage.validityBadInput';\nimport labelPatternMismatch from '@salesforce/label/LightningErrorMessage.validityPatternMismatch';\nimport labelRangeOverflow from '@salesforce/label/LightningErrorMessage.validityRangeOverflow';\nimport labelRangeUnderflow from '@salesforce/label/LightningErrorMessage.validityRangeUnderflow';\nimport labelStepMismatch from '@salesforce/label/LightningErrorMessage.validityStepMismatch';\nimport labelTooLong from '@salesforce/label/LightningErrorMessage.validityTooLong';\nimport labelTooShort from '@salesforce/label/LightningErrorMessage.validityTooShort';\nimport labelTypeMismatch from '@salesforce/label/LightningErrorMessage.validityTypeMismatch';\nimport labelValueMissing from '@salesforce/label/LightningErrorMessage.validityValueMissing';\nimport labelSelectAtleastOneValue from '@salesforce/label/LightningErrorMessage.validitySelectAtleastOne';\nimport { assert } from 'lightning/utilsPrivate';\nconst constraintsSortedByPriority = ['customError', 'badInput', 'patternMismatch', 'rangeOverflow', 'rangeUnderflow', 'stepMismatch', 'tooLong', 'tooShort', 'typeMismatch', 'valueMissing', 'selectAtleastOneValue'];\nconst defaultLabels = {\n  badInput: labelBadInput,\n  customError: labelBadInput,\n  patternMismatch: labelPatternMismatch,\n  rangeOverflow: labelRangeOverflow,\n  rangeUnderflow: labelRangeUnderflow,\n  stepMismatch: labelStepMismatch,\n  tooLong: labelTooLong,\n  tooShort: labelTooShort,\n  typeMismatch: labelTypeMismatch,\n  valueMissing: labelValueMissing,\n  selectAtleastOneValue: labelSelectAtleastOneValue\n};\n\nfunction resolveBestMatch(validity) {\n  let validityState;\n\n  if (validity && validity.valid === false) {\n    validityState = 'badInput';\n    constraintsSortedByPriority.some(stateName => {\n      if (validity[stateName] === true) {\n        validityState = stateName;\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  return validityState;\n}\n\nfunction computeConstraint(valueProvider, constraint) {\n  const provider = valueProvider[constraint];\n\n  if (typeof provider === 'function') {\n    return provider();\n  }\n\n  if (typeof provider === 'boolean') {\n    return provider;\n  }\n\n  return false;\n} // We're doing the below to avoid exposing the constraintsProvider in the ValidityState\n\n\nfunction newValidityState(constraintsProvider) {\n  class ValidityState {\n    get valueMissing() {\n      return computeConstraint(constraintsProvider, 'valueMissing');\n    }\n\n    get typeMismatch() {\n      return computeConstraint(constraintsProvider, 'typeMismatch');\n    }\n\n    get patternMismatch() {\n      return computeConstraint(constraintsProvider, 'patternMismatch');\n    }\n\n    get tooLong() {\n      return computeConstraint(constraintsProvider, 'tooLong');\n    }\n\n    get tooShort() {\n      return computeConstraint(constraintsProvider, 'tooShort');\n    }\n\n    get rangeUnderflow() {\n      return computeConstraint(constraintsProvider, 'rangeUnderflow');\n    }\n\n    get rangeOverflow() {\n      return computeConstraint(constraintsProvider, 'rangeOverflow');\n    }\n\n    get stepMismatch() {\n      return computeConstraint(constraintsProvider, 'stepMismatch');\n    }\n\n    get customError() {\n      return computeConstraint(constraintsProvider, 'customError');\n    }\n\n    get badInput() {\n      return computeConstraint(constraintsProvider, 'badInput');\n    }\n\n    get selectAtleastOneValue() {\n      return computeConstraint(constraintsProvider, 'validitySelectAtleastOneValue');\n    }\n\n    get valid() {\n      return !(this.valueMissing || this.typeMismatch || this.patternMismatch || this.tooLong || this.tooShort || this.rangeUnderflow || this.rangeOverflow || this.stepMismatch || this.customError || this.badInput || this.selectAtleastOneValue);\n    }\n\n  }\n\n  return new ValidityState();\n}\n\nexport function buildSyntheticValidity(constraintProvider) {\n  return Object.freeze(newValidityState(constraintProvider));\n}\nexport function getErrorMessage(validity, labelMap) {\n  const key = resolveBestMatch(validity);\n\n  if (key) {\n    return labelMap[key] ? labelMap[key] : defaultLabels[key];\n  }\n\n  return '';\n}\nexport class FieldConstraintApi {\n  constructor(inputComponentProvider, constraintProviders) {\n    assert(typeof inputComponentProvider === 'function');\n    this._inputComponentProvider = inputComponentProvider;\n    this._constraintsProvider = Object.assign({}, constraintProviders);\n\n    if (!this._constraintsProvider.customError) {\n      this._constraintsProvider.customError = () => typeof this._customValidityMessage === 'string' && this._customValidityMessage !== '';\n    }\n  }\n\n  get validity() {\n    if (!this._constraint) {\n      this._constraint = buildSyntheticValidity(this._constraintsProvider);\n    }\n\n    return this._constraint;\n  }\n\n  checkValidity() {\n    const isValid = this.validity.valid;\n\n    if (!isValid) {\n      if (this.inputComponent) {\n        this.inputComponent.dispatchEvent(new CustomEvent('invalid', {\n          cancellable: true\n        }));\n      }\n    }\n\n    return isValid;\n  }\n\n  reportValidity(callback) {\n    const valid = this.checkValidity(); // the input might have been removed from the DOM by the time we query it\n\n    if (this.inputComponent) {\n      this.inputComponent.classList.toggle('slds-has-error', !valid);\n\n      if (callback) {\n        callback(this.validationMessage);\n      }\n    }\n\n    return valid;\n  }\n\n  setCustomValidity(message) {\n    this._customValidityMessage = message;\n  }\n\n  get validationMessage() {\n    return getErrorMessage(this.validity, {\n      customError: this._customValidityMessage,\n      badInput: this.inputComponent.messageWhenBadInput,\n      patternMismatch: this.inputComponent.messageWhenPatternMismatch,\n      rangeOverflow: this.inputComponent.messageWhenRangeOverflow,\n      rangeUnderflow: this.inputComponent.messageWhenRangeUnderflow,\n      stepMismatch: this.inputComponent.messageWhenStepMismatch,\n      tooShort: this.inputComponent.messageWhenTooShort,\n      tooLong: this.inputComponent.messageWhenTooLong,\n      typeMismatch: this.inputComponent.messageWhenTypeMismatch,\n      valueMissing: this.inputComponent.messageWhenValueMissing,\n      selectAtleastOneValue: this.inputComponent.messageWhenValueMissing\n    });\n  }\n\n  get inputComponent() {\n    if (!this._inputComponentElement) {\n      this._inputComponentElement = this._inputComponentProvider();\n    }\n\n    return this._inputComponentElement;\n  }\n\n}\nexport class FieldConstraintApiWithProxyInput {\n  constructor(inputComponent, overrides = {}, inputElementName = 'input') {\n    this._inputComponent = inputComponent;\n    this._overrides = overrides;\n    this._proxyInput = document.createElement(inputElementName);\n  }\n\n  setInputAttributes(attributes) {\n    this._attributes = attributes;\n\n    this._attributeUpdater = attributeNames => {\n      if (!attributes) {\n        return;\n      }\n\n      if (typeof attributeNames === 'string') {\n        this._setAttribute(attributeNames, attributes[attributeNames]());\n      } else {\n        attributeNames.forEach(attributeName => {\n          this._setAttribute(attributeName, attributes[attributeName]());\n        });\n      }\n    };\n\n    return this._attributeUpdater;\n  }\n\n  get validity() {\n    return this._constraintApi.validity;\n  }\n\n  checkValidity() {\n    return this._constraintApi.checkValidity();\n  }\n\n  reportValidity(callback) {\n    return this._constraintApi.reportValidity(callback);\n  }\n\n  setCustomValidity(message) {\n    this._constraintApi.setCustomValidity(message);\n\n    this._proxyInput.setCustomValidity(message);\n  }\n\n  get validationMessage() {\n    return this._constraintApi.validationMessage;\n  }\n\n  _setAttribute(attributeName, value) {\n    if (value !== null && value !== undefined && value !== false) {\n      if (attributeName === 'value') {\n        if (this._proxyInput.type === 'file') {\n          // Can't set value on file\n          return;\n        }\n\n        this._proxyInput.value = value;\n      } else {\n        this._proxyInput.setAttribute(attributeName, value);\n      }\n    } else {\n      this._removeAttribute(attributeName);\n    }\n  }\n\n  _removeAttribute(attributeName) {\n    this._proxyInput.removeAttribute(attributeName);\n  }\n\n  get _constraintApi() {\n    if (!this._privateConstraintApi) {\n      this._updateAllAttributes();\n\n      const computeConstraintWithProxyInput = constraintName => {\n        const constraintOverride = this._overrides[constraintName];\n\n        const isDisabledOrReadOnly = this._proxyInput.hasAttribute('disabled') || this._proxyInput.hasAttribute('readonly');\n\n        if (typeof constraintOverride === 'function') {\n          return !isDisabledOrReadOnly && constraintOverride();\n        } // Firefox incorrectly computes rangeUnderflow for disabled and readonly inputs, so we're adding\n        // a check here instead to always return false when the input has readonly or disabled attributes set\n\n\n        return !isDisabledOrReadOnly && this._proxyInput.validity[constraintName];\n      };\n\n      const constraintsProvider = constraintsSortedByPriority.reduce((provider, constraint) => {\n        provider[constraint] = computeConstraintWithProxyInput.bind(this, constraint);\n        return provider;\n      }, {});\n      this._privateConstraintApi = new FieldConstraintApi(this._inputComponent, constraintsProvider);\n    }\n\n    return this._privateConstraintApi;\n  }\n\n  _updateAllAttributes() {\n    if (this._attributes) {\n      Object.entries(this._attributes).forEach(([key, valueFunction]) => {\n        this._setAttribute(key, valueFunction());\n      });\n    }\n  }\n\n}","import { normalizeISODate, normalizeISOTime, normalizeISODateTime, normalizeFormattedDateTime } from 'lightning/internationalizationLibrary';\nexport function normalizeDate(value) {\n  return normalizeISODate(value).isoValue || '';\n} // Converts value to the user's timezone and formats it in a way that will be accepted by the input\n\nexport function normalizeUTCDateTime(value, timezone) {\n  return normalizeISODateTime(value, timezone).isoValue || '';\n}\nexport function normalizeTime(value) {\n  return normalizeISOTime(value).isoValue || '';\n} // parses the input value and converts it back to UTC from the user's timezone\n\nexport function normalizeDateTimeToUTC(value, timezone) {\n  return normalizeFormattedDateTime(value, timezone) || '';\n}","/**\n * Validate email with loose standards.\n * @param {string} value Value must be a string.\n */\nexport function isValidEmail(value) {\n  // Input treats all data types as string\n  const normalized = `${value}`; // Empty is not a typeMismatch\n\n  if (normalized === '') {\n    return true;\n  } // Only one @ symbol allowed as delimitator\n\n\n  if (normalized.match(/@\\S*@/) !== null) {\n    return false;\n  } // Spaces and Commas are not allowed\n\n\n  if (normalized.match(/[\\s,]+/) !== null) {\n    return false;\n  } // Basic let anything with content before/after an @\n\n\n  return normalized.match(/^\\S+@\\S+$/) !== null;\n}\n/**\n * Validate comma deliminated emails with loose standards.\n * @param {string} value Value must be a string.\n */\n\nexport function isValidMultipleEmails(value) {\n  // Input treats all data types as string\n  const normalized = `${value}`; // Empty is not a typeMismatch\n\n  if (normalized === '') {\n    return true;\n  } // Invalid early on multiple commas / empty\n\n\n  if (normalized.match(/,\\s*,/) !== null) {\n    return false;\n  } // Validate each email individually\n\n\n  const emails = normalized.split(/\\s*,\\s*/g);\n\n  for (let i = 0; i < emails.length; i++) {\n    if (!isValidEmail(emails[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}","function stylesheet(token, useActualHostSelector, useNativeDirPseudoclass) {\n  var shadowSelector = token ? (\"[\" + token + \"]\") : \"\";\n  var hostSelector = token ? (\"[\" + token + \"-host]\") : \"\";\n  return ((useActualHostSelector ? \":host {display: block;}\" : hostSelector + \" {display: block;}\")) + (useNativeDirPseudoclass ? '' : '[dir=\"rtl\"]') + \" input[type=\\\"tel\\\"]\" + (useNativeDirPseudoclass ? ':dir(rtl)' : '') + shadowSelector + \" {direction: ltr;text-align: right;unicode-bidi: embed;}\";\n  /*LWC compiler v2.13.0*/\n}\nexport default [stylesheet];","import _implicitStylesheets from \"./input.css\";\n\nimport _implicitScopedStylesheets from \"./input.scoped.css?scoped=true\";\n\nimport _lightningHelptext from \"lightning/helptext\";\nimport _lightningPrimitiveIcon from \"lightning/primitiveIcon\";\nimport _lightningPrimitiveFileDroppableZone from \"lightning/primitiveFileDroppableZone\";\nimport _lightningPrimitiveColorpickerButton from \"lightning/primitiveColorpickerButton\";\nimport _lightningDatepicker from \"lightning/datepicker\";\nimport _lightningTimepicker from \"lightning/timepicker\";\nimport _lightningDatetimepicker from \"lightning/datetimepicker\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  \"slds-required\": true\n};\nconst stc1 = {\n  \"slds-input\": true\n};\nconst stc2 = {\n  props: {\n    \"iconName\": \"utility:search\",\n    \"variant\": \"bare\",\n    \"svgClass\": \"slds-input__icon slds-input__icon_left slds-icon-text-default\"\n  },\n  key: 5\n};\nconst stc3 = {\n  classMap: {\n    \"slds-input__icon-group\": true,\n    \"slds-input__icon-group_right\": true\n  },\n  key: 6\n};\nconst stc4 = {\n  classMap: {\n    \"slds-spinner\": true,\n    \"slds-spinner_brand\": true,\n    \"slds-spinner_x-small\": true,\n    \"slds-input__spinner\": true\n  },\n  attrs: {\n    \"role\": \"status\"\n  },\n  key: 7\n};\nconst stc5 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 8\n};\nconst stc6 = {\n  classMap: {\n    \"slds-spinner__dot-a\": true\n  },\n  key: 9\n};\nconst stc7 = {\n  classMap: {\n    \"slds-spinner__dot-b\": true\n  },\n  key: 10\n};\nconst stc8 = {\n  \"slds-input__icon\": true,\n  \"slds-input__icon_right\": true,\n  \"slds-button\": true,\n  \"slds-button_icon\": true\n};\nconst stc9 = {\n  \"data-element-id\": \"searchClear\"\n};\nconst stc10 = {\n  props: {\n    \"iconName\": \"utility:clear\",\n    \"variant\": \"bare\",\n    \"svgClass\": \"slds-button__icon\"\n  },\n  key: 12\n};\nconst stc11 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 13\n};\nconst stc12 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 14\n};\nconst stc13 = {\n  \"slds-checkbox_toggle\": true,\n  \"slds-grid\": true\n};\nconst stc14 = {\n  \"slds-checkbox_faux_container\": true\n};\nconst stc15 = {\n  classMap: {\n    \"slds-checkbox_faux\": true\n  },\n  key: 20\n};\nconst stc16 = {\n  classMap: {\n    \"slds-checkbox_on\": true\n  },\n  key: 21\n};\nconst stc17 = {\n  classMap: {\n    \"slds-checkbox_off\": true\n  },\n  key: 22\n};\nconst stc18 = {\n  \"slds-checkbox__label\": true\n};\nconst stc19 = {\n  classMap: {\n    \"slds-checkbox_faux\": true\n  },\n  key: 31\n};\nconst stc20 = {\n  classMap: {\n    \"slds-checkbox_faux\": true\n  },\n  key: 33\n};\nconst stc21 = {\n  classMap: {\n    \"slds-checkbox_add-button\": true\n  },\n  key: 36\n};\nconst stc22 = {\n  \"slds-assistive-text\": true\n};\nconst stc23 = {\n  \"slds-checkbox_faux\": true\n};\nconst stc24 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 39\n};\nconst stc25 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 40\n};\nconst stc26 = {\n  classMap: {\n    \"slds-radio\": true\n  },\n  key: 41\n};\nconst stc27 = {\n  \"slds-radio__label\": true\n};\nconst stc28 = {\n  classMap: {\n    \"slds-radio_faux\": true\n  },\n  key: 44\n};\nconst stc29 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 48\n};\nconst stc30 = {\n  \"slds-file-selector\": true,\n  \"slds-file-selector_files\": true\n};\nconst stc31 = {\n  \"slds-file-selector__input\": true,\n  \"slds-assistive-text\": true\n};\nconst stc32 = {\n  \"slds-file-selector__body\": true\n};\nconst stc33 = {\n  classMap: {\n    \"slds-file-selector__button\": true,\n    \"slds-button\": true,\n    \"slds-button_neutral\": true\n  },\n  key: 53\n};\nconst stc34 = {\n  props: {\n    \"iconName\": \"utility:upload\",\n    \"variant\": \"bare\",\n    \"svgClass\": \"slds-button__icon slds-button__icon_left\"\n  },\n  key: 54\n};\nconst stc35 = {\n  classMap: {\n    \"slds-file-selector__text\": true,\n    \"slds-medium-show\": true\n  },\n  key: 55\n};\nconst stc36 = {\n  classMap: {\n    \"slds-color-picker\": true\n  },\n  key: 56\n};\nconst stc37 = {\n  classMap: {\n    \"slds-form-element\": true,\n    \"slds-color-picker__summary\": true\n  },\n  key: 57\n};\nconst stc38 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 61\n};\nconst stc39 = {\n  classMap: {\n    \"slds-color-picker__summary-input\": true\n  },\n  key: 63\n};\nconst stc40 = {\n  \"slds-input\": true,\n  \"slds-m-right_x-small\": true\n};\nconst stc41 = {\n  \"slds-form-element__help\": true\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {gid: api_scoped_id, t: api_text, h: api_element, d: api_dynamic_text, c: api_custom_element, b: api_bind} = $api;\n  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6, _m7, _m8, _m9, _m10, _m11, _m12, _m13, _m14, _m15, _m16, _m17, _m18, _m19, _m20, _m21, _m22, _m23, _m24, _m25, _m26, _m27, _m28, _m29, _m30, _m31, _m32, _m33, _m34, _m35, _m36, _m37, _m38, _m39} = $ctx;\n  return [$cmp.isTypeSimple ? !$cmp.hasExternalLabel ? api_element(\"label\", {\n    className: $cmp.computedLabelClass,\n    attrs: {\n      \"for\": api_scoped_id(\"input\")\n    },\n    key: 0\n  }, [$cmp.required ? api_element(\"abbr\", {\n    classMap: stc0,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 1\n  }, [api_text(\"*\")]) : null, api_text(api_dynamic_text($cmp.label))]) : null : null, $cmp.isTypeSimple ? !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element(\"lightning-helptext\", _lightningHelptext, {\n    props: {\n      \"content\": $cmp.fieldLevelHelp,\n      \"alternativeText\": $cmp.helptextAlternativeText\n    },\n    key: 2\n  }) : null : null : null, $cmp.isTypeSimple ? api_element(\"div\", {\n    className: $cmp.computedFormElementClass,\n    key: 3\n  }, [api_element(\"input\", {\n    classMap: stc1,\n    attrs: {\n      \"type\": $cmp._internalType,\n      \"id\": api_scoped_id(\"input\"),\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"aria-invalid\": $cmp.computedAriaInvalid,\n      \"accesskey\": $cmp.accesskey,\n      \"autocomplete\": $cmp.autocomplete,\n      \"max\": $cmp.normalizedMax,\n      \"min\": $cmp.normalizedMin,\n      \"inputmode\": $cmp._inputMode,\n      \"step\": $cmp.step,\n      \"maxlength\": $cmp.maxLength,\n      \"minlength\": $cmp.minLength,\n      \"pattern\": $cmp.pattern,\n      \"placeholder\": $cmp.placeholder,\n      \"name\": $cmp.name,\n      \"required\": $cmp.required ? \"\" : null,\n      \"readonly\": $cmp.readOnly ? \"\" : null,\n      \"disabled\": $cmp.disabled ? \"\" : null\n    },\n    key: 4,\n    on: {\n      \"blur\": _m0 || ($ctx._m0 = api_bind($cmp.handleBlur)),\n      \"focus\": _m1 || ($ctx._m1 = api_bind($cmp.handleFocus)),\n      \"change\": _m2 || ($ctx._m2 = api_bind($cmp.handleChange)),\n      \"input\": _m3 || ($ctx._m3 = api_bind($cmp.handleInput)),\n      \"keydown\": _m4 || ($ctx._m4 = api_bind($cmp.handleKeyDown))\n    }\n  }), $cmp.isTypeSearch ? api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, stc2) : null, $cmp.isTypeSearch ? api_element(\"div\", stc3, [$cmp.isLoading ? api_element(\"div\", stc4, [api_element(\"span\", stc5, [api_text(api_dynamic_text($cmp.i18n.loading))]), api_element(\"div\", stc6), api_element(\"div\", stc7)]) : null, $cmp._showClearButton ? api_element(\"button\", {\n    classMap: stc8,\n    attrs: stc9,\n    key: 11,\n    on: {\n      \"blur\": _m5 || ($ctx._m5 = api_bind($cmp.handleBlur)),\n      \"click\": _m6 || ($ctx._m6 = api_bind($cmp._clearAndSetFocusOnInput))\n    }\n  }, [api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, stc10), api_element(\"span\", stc11, [api_text(api_dynamic_text($cmp.i18n.clear))])]) : null]) : null]) : null, $cmp.isTypeToggle ? api_element(\"div\", stc12, [api_element(\"label\", {\n    classMap: stc13,\n    attrs: {\n      \"for\": api_scoped_id(\"checkbox-toggle\")\n    },\n    key: 15\n  }, [$cmp.required ? api_element(\"abbr\", {\n    classMap: stc0,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 16\n  }, [api_text(\"*\")]) : null, api_element(\"span\", {\n    className: $cmp.computedLabelClass,\n    key: 17\n  }, [api_text(api_dynamic_text($cmp.label))]), api_element(\"input\", {\n    attrs: {\n      \"type\": \"checkbox\",\n      \"id\": api_scoped_id(\"checkbox-toggle\"),\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"accesskey\": $cmp.accesskey,\n      \"name\": $cmp.name,\n      \"required\": $cmp.required ? \"\" : null,\n      \"readonly\": $cmp.readOnly ? \"\" : null,\n      \"disabled\": $cmp.disabled ? \"\" : null\n    },\n    key: 18,\n    on: {\n      \"blur\": _m7 || ($ctx._m7 = api_bind($cmp.handleBlur)),\n      \"focus\": _m8 || ($ctx._m8 = api_bind($cmp.handleFocus)),\n      \"change\": _m9 || ($ctx._m9 = api_bind($cmp.handleChange))\n    }\n  }), api_element(\"span\", {\n    classMap: stc14,\n    attrs: {\n      \"id\": api_scoped_id(\"toggle-description\"),\n      \"data-toggle-description\": \"\",\n      \"aria-live\": \"assertive\"\n    },\n    key: 19\n  }, [api_element(\"span\", stc15), api_element(\"span\", stc16, [api_text(api_dynamic_text($cmp.messageToggleActive))]), api_element(\"span\", stc17, [api_text(api_dynamic_text($cmp.messageToggleInactive))])])])]) : null, $cmp.isTypeCheckbox ? !$cmp.isStandardVariant ? api_element(\"label\", {\n    classMap: stc18,\n    attrs: {\n      \"for\": api_scoped_id(\"checkbox\")\n    },\n    key: 23\n  }, [$cmp.required ? api_element(\"abbr\", {\n    classMap: stc0,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 24\n  }, [api_text(\"*\")]) : null, api_element(\"span\", {\n    className: $cmp.computedLabelClass,\n    key: 25\n  }, [api_text(api_dynamic_text($cmp.label))])]) : null : null, $cmp.isTypeCheckbox ? !$cmp.isStandardVariant ? $cmp.fieldLevelHelp ? api_custom_element(\"lightning-helptext\", _lightningHelptext, {\n    props: {\n      \"content\": $cmp.fieldLevelHelp,\n      \"alternativeText\": $cmp.helptextAlternativeText\n    },\n    key: 26\n  }) : null : null : null, $cmp.isTypeCheckbox ? api_element(\"div\", {\n    className: $cmp.computedFormElementClass,\n    key: 27\n  }, [api_element(\"span\", {\n    className: $cmp.computedCheckboxClass,\n    key: 28\n  }, [$cmp.isStandardVariant ? $cmp.required ? api_element(\"abbr\", {\n    classMap: stc0,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 29\n  }, [api_text(\"*\")]) : null : null, api_element(\"input\", {\n    attrs: {\n      \"type\": \"checkbox\",\n      \"id\": api_scoped_id(\"checkbox\"),\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"accesskey\": $cmp.accesskey,\n      \"name\": $cmp.name,\n      \"required\": $cmp.required ? \"\" : null,\n      \"readonly\": $cmp.readOnly ? \"\" : null,\n      \"disabled\": $cmp.disabled ? \"\" : null\n    },\n    key: 30,\n    on: {\n      \"blur\": _m10 || ($ctx._m10 = api_bind($cmp.handleBlur)),\n      \"focus\": _m11 || ($ctx._m11 = api_bind($cmp.handleFocus)),\n      \"change\": _m12 || ($ctx._m12 = api_bind($cmp.handleChange))\n    }\n  }), !$cmp.isStandardVariant ? api_element(\"span\", stc19) : null, $cmp.isStandardVariant ? api_element(\"label\", {\n    classMap: stc18,\n    attrs: {\n      \"for\": api_scoped_id(\"checkbox\")\n    },\n    key: 32\n  }, [api_element(\"span\", stc20), api_element(\"span\", {\n    className: $cmp.computedLabelClass,\n    key: 34\n  }, [api_text(api_dynamic_text($cmp.label))])]) : null, $cmp.isStandardVariant ? $cmp.fieldLevelHelp ? api_custom_element(\"lightning-helptext\", _lightningHelptext, {\n    props: {\n      \"content\": $cmp.fieldLevelHelp,\n      \"alternativeText\": $cmp.helptextAlternativeText\n    },\n    key: 35\n  }) : null : null])]) : null, $cmp.isTypeCheckboxButton ? api_element(\"div\", stc21, [api_element(\"input\", {\n    classMap: stc22,\n    attrs: {\n      \"type\": \"checkbox\",\n      \"id\": api_scoped_id(\"checkbox-button\"),\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"accesskey\": $cmp.accesskey,\n      \"name\": $cmp.name,\n      \"required\": $cmp.required ? \"\" : null,\n      \"readonly\": $cmp.readOnly ? \"\" : null,\n      \"disabled\": $cmp.disabled ? \"\" : null\n    },\n    key: 37,\n    on: {\n      \"blur\": _m13 || ($ctx._m13 = api_bind($cmp.handleBlur)),\n      \"focus\": _m14 || ($ctx._m14 = api_bind($cmp.handleFocus)),\n      \"change\": _m15 || ($ctx._m15 = api_bind($cmp.handleChange))\n    }\n  }), api_element(\"label\", {\n    classMap: stc23,\n    attrs: {\n      \"for\": api_scoped_id(\"checkbox-button\")\n    },\n    key: 38\n  }, [api_element(\"span\", stc24, [api_text(api_dynamic_text($cmp.label))])])]) : null, $cmp.isTypeRadio ? api_element(\"div\", stc25, [api_element(\"span\", stc26, [api_element(\"input\", {\n    attrs: {\n      \"type\": \"radio\",\n      \"id\": api_scoped_id(\"radio\"),\n      \"accesskey\": $cmp.accesskey,\n      \"name\": $cmp.name,\n      \"required\": $cmp.required ? \"\" : null,\n      \"readonly\": $cmp.readOnly ? \"\" : null,\n      \"disabled\": $cmp.disabled ? \"\" : null\n    },\n    key: 42,\n    on: {\n      \"blur\": _m16 || ($ctx._m16 = api_bind($cmp.handleBlur)),\n      \"focus\": _m17 || ($ctx._m17 = api_bind($cmp.handleFocus)),\n      \"change\": _m18 || ($ctx._m18 = api_bind($cmp.handleChange))\n    }\n  }), api_element(\"label\", {\n    classMap: stc27,\n    attrs: {\n      \"for\": api_scoped_id(\"radio\")\n    },\n    key: 43\n  }, [api_element(\"span\", stc28), api_element(\"span\", {\n    className: $cmp.computedLabelClass,\n    key: 45\n  }, [api_text(api_dynamic_text($cmp.label))])])])]) : null, $cmp.isTypeFile ? api_element(\"span\", {\n    className: $cmp.computedLabelClass,\n    attrs: {\n      \"id\": api_scoped_id(\"form-label\"),\n      \"data-form-label\": \"\"\n    },\n    key: 46\n  }, [$cmp.required ? api_element(\"abbr\", {\n    classMap: stc0,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 47\n  }, [api_text(\"*\")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, $cmp.isTypeFile ? api_element(\"div\", stc29, [api_element(\"div\", {\n    classMap: stc30,\n    key: 49,\n    on: {\n      \"drop\": _m19 || ($ctx._m19 = api_bind($cmp.handleDropFiles))\n    }\n  }, [api_custom_element(\"lightning-primitive-file-droppable-zone\", _lightningPrimitiveFileDroppableZone, {\n    props: {\n      \"multiple\": $cmp.multiple,\n      \"disabled\": $cmp.disabled\n    },\n    key: 50\n  }, [api_element(\"input\", {\n    classMap: stc31,\n    attrs: {\n      \"type\": \"file\",\n      \"id\": api_scoped_id(\"input-file\"),\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"accesskey\": $cmp.accesskey,\n      \"accept\": $cmp.accept,\n      \"multiple\": $cmp.multiple ? \"\" : null,\n      \"name\": $cmp.name,\n      \"required\": $cmp.required ? \"\" : null,\n      \"readonly\": $cmp.readOnly ? \"\" : null,\n      \"disabled\": $cmp.disabled ? \"\" : null\n    },\n    key: 51,\n    on: {\n      \"blur\": _m20 || ($ctx._m20 = api_bind($cmp.handleBlur)),\n      \"click\": _m21 || ($ctx._m21 = api_bind($cmp.handleFileClick)),\n      \"focus\": _m22 || ($ctx._m22 = api_bind($cmp.handleFocus)),\n      \"change\": _m23 || ($ctx._m23 = api_bind($cmp.handleChange))\n    }\n  }), api_element(\"label\", {\n    classMap: stc32,\n    attrs: {\n      \"id\": api_scoped_id(\"file-selector-label\"),\n      \"data-file-selector-label\": \"\",\n      \"for\": api_scoped_id(\"input-file\"),\n      \"aria-hidden\": \"true\"\n    },\n    key: 52\n  }, [api_element(\"span\", stc33, [api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, stc34), api_text(api_dynamic_text($cmp.i18n.inputFileButtonLabel))]), api_element(\"span\", stc35, [api_text(api_dynamic_text($cmp.i18n.inputFileBodyText))])])])])]) : null, $cmp.isTypeColor ? api_element(\"div\", stc36, [api_element(\"div\", stc37, [!$cmp.hasExternalLabel ? api_element(\"label\", {\n    className: $cmp.computedColorLabelClass,\n    attrs: {\n      \"for\": api_scoped_id(\"color\")\n    },\n    key: 58\n  }, [$cmp.required ? api_element(\"abbr\", {\n    classMap: stc0,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 59\n  }, [api_text(\"*\")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element(\"lightning-helptext\", _lightningHelptext, {\n    props: {\n      \"content\": $cmp.fieldLevelHelp,\n      \"alternativeText\": $cmp.helptextAlternativeText\n    },\n    key: 60\n  }) : null : null, api_element(\"div\", stc38, [api_custom_element(\"lightning-primitive-colorpicker-button\", _lightningPrimitiveColorpickerButton, {\n    props: {\n      \"value\": $cmp.value,\n      \"disabled\": $cmp.disabled\n    },\n    key: 62,\n    on: {\n      \"blur\": _m24 || ($ctx._m24 = api_bind($cmp.handleBlur)),\n      \"focus\": _m25 || ($ctx._m25 = api_bind($cmp.handleFocus)),\n      \"change\": _m26 || ($ctx._m26 = api_bind($cmp.handleColorChange))\n    }\n  }), api_element(\"div\", stc39, [api_element(\"input\", {\n    classMap: stc40,\n    attrs: {\n      \"type\": \"text\",\n      \"id\": api_scoped_id(\"color\"),\n      \"name\": $cmp.name,\n      \"autocomplete\": $cmp.autocomplete,\n      \"accesskey\": $cmp.accesskey,\n      \"aria-label\": $cmp.computedAriaLabel,\n      \"disabled\": $cmp.disabled ? \"\" : null,\n      \"minlength\": \"4\",\n      \"maxlength\": \"7\",\n      \"placeholder\": $cmp.placeholder,\n      \"pattern\": $cmp.pattern\n    },\n    key: 64,\n    on: {\n      \"blur\": _m27 || ($ctx._m27 = api_bind($cmp.handleBlur)),\n      \"focus\": _m28 || ($ctx._m28 = api_bind($cmp.handleFocus)),\n      \"change\": _m29 || ($ctx._m29 = api_bind($cmp.handleChange)),\n      \"input\": _m30 || ($ctx._m30 = api_bind($cmp.handleInput))\n    }\n  })])])])]) : null, $cmp.isTypeDesktopDate ? api_custom_element(\"lightning-datepicker\", _lightningDatepicker, {\n    props: {\n      \"max\": $cmp.max,\n      \"min\": $cmp.min,\n      \"label\": $cmp.label,\n      \"name\": $cmp.name,\n      \"variant\": $cmp.variant,\n      \"ariaLabel\": $cmp.ariaLabel,\n      \"dateStyle\": $cmp.dateStyle,\n      \"placeholder\": $cmp.placeholder,\n      \"required\": $cmp.required,\n      \"readOnly\": $cmp.readOnly,\n      \"fieldLevelHelp\": $cmp.fieldLevelHelp,\n      \"autocomplete\": \"off\",\n      \"messageWhenBadInput\": $cmp.messageWhenBadInput,\n      \"messageWhenValueMissing\": $cmp.messageWhenValueMissing,\n      \"messageWhenRangeOverflow\": $cmp.messageWhenRangeOverflow,\n      \"messageWhenRangeUnderflow\": $cmp.messageWhenRangeUnderflow,\n      \"disabled\": $cmp.disabled\n    },\n    key: 65,\n    on: {\n      \"change\": _m31 || ($ctx._m31 = api_bind($cmp.handleChange)),\n      \"blur\": _m32 || ($ctx._m32 = api_bind($cmp.handleBlur)),\n      \"focus\": _m33 || ($ctx._m33 = api_bind($cmp.handleFocus))\n    }\n  }) : null, $cmp.isTypeDesktopTime ? api_custom_element(\"lightning-timepicker\", _lightningTimepicker, {\n    props: {\n      \"max\": $cmp.max,\n      \"min\": $cmp.min,\n      \"label\": $cmp.label,\n      \"name\": $cmp.name,\n      \"ariaLabel\": $cmp.ariaLabel,\n      \"variant\": $cmp.variant,\n      \"timeStyle\": $cmp.timeStyle,\n      \"placeholder\": $cmp.placeholder,\n      \"required\": $cmp.required,\n      \"readOnly\": $cmp.readOnly,\n      \"autocomplete\": \"off\",\n      \"fieldLevelHelp\": $cmp.fieldLevelHelp,\n      \"messageWhenBadInput\": $cmp.messageWhenBadInput,\n      \"messageWhenValueMissing\": $cmp.messageWhenValueMissing,\n      \"messageWhenRangeOverflow\": $cmp.messageWhenRangeOverflow,\n      \"messageWhenRangeUnderflow\": $cmp.messageWhenRangeUnderflow,\n      \"disabled\": $cmp.disabled\n    },\n    key: 66,\n    on: {\n      \"change\": _m34 || ($ctx._m34 = api_bind($cmp.handleChange)),\n      \"blur\": _m35 || ($ctx._m35 = api_bind($cmp.handleBlur)),\n      \"focus\": _m36 || ($ctx._m36 = api_bind($cmp.handleFocus))\n    }\n  }) : null, $cmp.isTypeDesktopDateTime ? api_custom_element(\"lightning-datetimepicker\", _lightningDatetimepicker, {\n    props: {\n      \"dateAriaControls\": $cmp.dateAriaControls,\n      \"dateAriaLabel\": $cmp.dateAriaLabel,\n      \"dateAriaLabelledBy\": $cmp.dateAriaLabelledBy,\n      \"dateAriaDescribedBy\": $cmp.dateAriaDescribedBy,\n      \"dateStyle\": $cmp.dateStyle,\n      \"timeStyle\": $cmp.timeStyle,\n      \"timeAriaControls\": $cmp.timeAriaControls,\n      \"timeAriaLabel\": $cmp.timeAriaLabel,\n      \"timeAriaLabelledBy\": $cmp.timeAriaLabelledBy,\n      \"timeAriaDescribedBy\": $cmp.timeAriaDescribedBy,\n      \"max\": $cmp.max,\n      \"min\": $cmp.min,\n      \"timezone\": $cmp.timezone,\n      \"label\": $cmp.label,\n      \"name\": $cmp.name,\n      \"variant\": $cmp.variant,\n      \"placeholder\": $cmp.placeholder,\n      \"required\": $cmp.required,\n      \"readOnly\": $cmp.readOnly,\n      \"fieldLevelHelp\": $cmp.fieldLevelHelp,\n      \"autocomplete\": \"off\",\n      \"messageWhenBadInput\": $cmp.messageWhenBadInput,\n      \"messageWhenValueMissing\": $cmp.messageWhenValueMissing,\n      \"messageWhenRangeOverflow\": $cmp.messageWhenRangeOverflow,\n      \"messageWhenRangeUnderflow\": $cmp.messageWhenRangeUnderflow,\n      \"disabled\": $cmp.disabled\n    },\n    key: 67,\n    on: {\n      \"change\": _m37 || ($ctx._m37 = api_bind($cmp.handleChange)),\n      \"blur\": _m38 || ($ctx._m38 = api_bind($cmp.handleBlur)),\n      \"focus\": _m39 || ($ctx._m39 = api_bind($cmp.handleFocus))\n    }\n  }) : null, $cmp._helpMessage ? api_element(\"div\", {\n    classMap: stc41,\n    attrs: {\n      \"id\": api_scoped_id(\"help-message\"),\n      \"data-help-message\": \"\",\n      \"role\": \"alert\"\n    },\n    key: 68\n  }, [api_text(api_dynamic_text($cmp._helpMessage))]) : null];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-input_input\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./input.html\";\nimport labelA11yTriggerText from '@salesforce/label/LightningColorPicker.a11yTriggerText';\nimport labelInputFileBodyText from '@salesforce/label/LightningInputFile.bodyText';\nimport labelInputFileButtonLabel from '@salesforce/label/LightningInputFile.buttonLabel';\nimport labelMessageToggleActive from '@salesforce/label/LightningControl.activeCapitalized';\nimport labelMessageToggleInactive from '@salesforce/label/LightningControl.inactiveCapitalized';\nimport labelRequired from '@salesforce/label/LightningControl.required';\nimport labelClearInput from '@salesforce/label/LightningControl.clear';\nimport labelLoadingIndicator from '@salesforce/label/LightningControl.loading';\nimport labelNumberIncrementCounter from '@salesforce/label/LightningInputNumber.incrementCounter';\nimport labelNumberDecrementCounter from '@salesforce/label/LightningInputNumber.decrementCounter';\nimport labelHelpTextAlternativeText from '@salesforce/label/LightningInput.helptextAlternativeText';\nimport userTimeZone from '@salesforce/i18n/timeZone';\nimport formFactor from '@salesforce/client/formFactor';\nimport { classSet, formatLabel } from 'lightning/utils';\nimport { assert, classListMutation, getRealDOMId, isSafari, isNativeComponent, isNotUndefinedOrNull, isUndefinedOrNull, normalizeAriaAttribute, normalizeBoolean, normalizeKeyValue, normalizeString, synchronizeAttrs, decorateInputForDragon, setDecoratedDragonInputValueWithoutEvent } from 'lightning/utilsPrivate';\nimport AriaObserver from 'lightning/ariaObserver';\nimport { normalizeInput } from './normalize';\nimport { normalizeDate, normalizeDateTimeToUTC, normalizeTime, normalizeUTCDateTime } from './dateTimeUtil';\nimport { isAfter, isBefore } from 'lightning/internationalizationLibrary';\nimport { FieldConstraintApiWithProxyInput, InteractingState, normalizeVariant, VARIANT } from 'lightning/inputUtils';\nimport { calculateFractionDigitsFromStep, formatNumber, fromIsoDecimal, hasValidNumberShortcut, hasValidNumberSymbol, increaseNumberByStep, isValidNumber, isValidNumberCharacter, normalizeNumber, toIsoDecimal } from './numberUtil';\nimport { isValidEmail, isValidMultipleEmails } from './emailUtil';\nimport { InputSelectionCache } from './selection';\nconst i18n = {\n  a11yTriggerText: labelA11yTriggerText,\n  inputFileBodyText: labelInputFileBodyText,\n  inputFileButtonLabel: labelInputFileButtonLabel,\n  messageToggleActive: labelMessageToggleActive,\n  messageToggleInactive: labelMessageToggleInactive,\n  numberIncrementCounter: labelNumberIncrementCounter,\n  numberDecrementCounter: labelNumberDecrementCounter,\n  required: labelRequired,\n  clear: labelClearInput,\n  loading: labelLoadingIndicator,\n  helpTextAlternativeText: labelHelpTextAlternativeText\n};\nconst ARIA_CONTROLS = 'aria-controls';\nconst ARIA_LABEL = 'aria-label';\nconst ARIA_LABELLEDBY = 'aria-labelledby';\nconst ARIA_DESCRIBEDBY = 'aria-describedby';\n/*\n * This component supports the regular native input types, with the addition of toggle, checkbox-button and color.\n * Furthermore the file type supports a droppable zone, search has a clear button, number has formatting.\n * Input changes (native oninput event) triggers an onchange event,\n *     the native even is stopped, the dispatched custom event has a value that points to the state of the component\n *     in case of files it's the files uploaded (via droppable zone or through the upload button),\n *     checked for radio and checkbox, checkbox-button, and just straight input's value for everything else\n *\n *\n * _Toggle_ (always has an aria-describedby, on error has an additional one, default label text for active and inactive\n * states)\n * _File_ (as it has a droppable zone, the validity returned would have to be valid - unless a custom error message was\n *    passed)\n * _Search_ (it has the clear button and the icon)\n * _Number_ (formatting when not in focus, when in focus shows raw value)\n *\n * */\n\nconst VALID_NUMBER_FORMATTERS = ['decimal', 'percent', 'percent-fixed', 'currency'];\nconst DEFAULT_COLOR = '#000000';\nconst DEFAULT_FORMATTER = VALID_NUMBER_FORMATTERS[0];\n/**\n * Returns an aria string with all the non-autolinked values removed\n * @param {String} values space sperated list of ids\n * @returns {String} The aria values with the non-auto linked ones removed\n */\n\nfunction filterNonAutoLink(values) {\n  const ariaValues = values && values.split(/\\s+/);\n  return ariaValues && ariaValues.filter(value => {\n    return !!value.match(/^auto-link/);\n  }).join(' ');\n}\n/**\n * Represents interactive controls that accept user input depending on the type attribute.\n */\n\n\nclass LightningInput extends LightningElement {\n  /**\n   * Text that is displayed when the field is empty, to prompt the user for a valid entry. Use this attribute with date, email, number, password, search, tel, text, time, and url input types only.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Specifies the name of an input element.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Text label for the input.\n   * @type {string}\n   * @required\n   *\n   */\n\n  /**\n   * Error message to be displayed when a bad input is detected. The badInput error can be returned for invalid input for any input type.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Error message to be displayed when a pattern mismatch is detected. The patternMismatch error can be returned when you specify a pattern for email, password, search, tel, text, or url input types.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Error message to be displayed when a range overflow is detected. The rangeOverflow error can be returned when you specify a max value for number or range input types.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Error message to be displayed when a range underflow is detected. The rangeUnderflow error can be returned when you specify a min value for number or range input types.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Error message to be displayed when a step mismatch is detected. The stepMismatch error can be returned when you specify a step value for number and range input types.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Error message to be displayed when the value is too short. The tooShort error can be returned when you specify a min-length value for email, password, search, tel, text, and url input types.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Error message to be displayed when the value is too long. The tooLong error can be returned when you specify a max-length value for email, password, search, tel, text, and url input types.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Error message to be displayed when a type mismatch is detected. The typeMismatch error can be returned for the email and url input types.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Error message to be displayed when the value is missing. The valueMissing error can be returned when you specify the required attribute for any input type.\n   * @type {string}\n   *\n   */\n\n  /**\n   * Text shown for the active state of a toggle. The default is \"Active\".\n   * @type {string}\n   */\n\n  /**\n   * Text shown for the inactive state of a toggle. The default is \"Inactive\".\n   * @type {string}\n   */\n\n  /**\n   * Describes the input to assistive technologies.\n   * @type {string}\n   */\n\n  /**\n   * Controls auto-filling of the field. Use this attribute with\n   * email, search, tel, text, and url input types only. Set the attribute to pass\n   * through autocomplete values to be interpreted by the browser.\n   * @type {string}\n   */\n\n  /**\n   * The display style of the date when type='date' or type='datetime'. Valid values are\n   * short, medium (default), and long. The format of each style is specific to the locale.\n   * On mobile devices this attribute has no effect.\n   * @type {string}\n   * @default medium\n   */\n\n  /**\n   * The display style of the time when type='time' or type='datetime'. Valid values are\n   * short (default), medium, and long. Currently, medium and long styles look the same.\n   * On mobile devices this attribute has no effect.\n   * @type {string}\n   * @default short\n   *\n   */\n\n  /**\n   * Describes the date input to assistive technologies when type='datetime'. On mobile devices,\n   * this label is merged with aria-label and time-aria-label to describe the native date time input.\n   * @type {string}\n   *\n   */\n  constructor() {\n    super();\n    this.placeholder = void 0;\n    this.name = void 0;\n    this.label = void 0;\n    this.messageWhenBadInput = void 0;\n    this.messageWhenPatternMismatch = void 0;\n    this.messageWhenRangeOverflow = void 0;\n    this.messageWhenRangeUnderflow = void 0;\n    this.messageWhenStepMismatch = void 0;\n    this.messageWhenTooShort = void 0;\n    this.messageWhenTooLong = void 0;\n    this.messageWhenTypeMismatch = void 0;\n    this.messageWhenValueMissing = void 0;\n    this.messageToggleActive = i18n.messageToggleActive;\n    this.messageToggleInactive = i18n.messageToggleInactive;\n    this.ariaLabel = void 0;\n    this.autocomplete = void 0;\n    this.dateStyle = void 0;\n    this.timeStyle = void 0;\n    this.dateAriaLabel = void 0;\n    this._timeAriaDescribedBy = void 0;\n    this._timeAriaLabelledBy = void 0;\n    this._timeAriaControls = void 0;\n    this._dateAriaControls = void 0;\n    this._dateAriaDescribedBy = void 0;\n    this._dateAriaLabelledBy = void 0;\n    this._value = '';\n    this._type = 'text';\n    this._pattern = void 0;\n    this._max = void 0;\n    this._min = void 0;\n    this._step = void 0;\n    this._disabled = false;\n    this._readOnly = false;\n    this._required = false;\n    this._checked = false;\n    this._isLoading = false;\n    this._multiple = false;\n    this._timezone = false;\n    this._helpMessage = null;\n    this._isColorPickerPanelOpen = false;\n    this._fieldLevelHelp = void 0;\n    this._accesskey = void 0;\n    this._maxLength = void 0;\n    this._minLength = void 0;\n    this._accept = void 0;\n    this._variant = void 0;\n    this._numberRawValue = '';\n    this._formatter = DEFAULT_FORMATTER;\n    this._showRawNumber = false;\n    this._initialValueSet = false;\n    this._files = null;\n    this._rendered = void 0;\n    this._selectionCache = void 0;\n    this.isConnected = false;\n    this.ariaObserver = new AriaObserver(this); // Native Shadow Root will return [native code].\n    // Our synthetic method will return the function source.\n\n    this.isNative = isNativeComponent(this); // The selection cache allows us an input to remember what text was selected\n    // in cases where we change the text on blur or in browsers (Safari) that\n    // don't track it properly.\n\n    this._selectionCache = new InputSelectionCache();\n  }\n\n  connectedCallback() {\n    if (!this.ariaObserver) {\n      this.ariaObserver = new AriaObserver(this);\n    } // Manually track connected state because this.template.isConnected can be false\n    // when input is created using createElement and inserted into dom manually.\n    // i.e. create an input element and pass it to showCustomOverlay\n    // Remove this state and the one in AriaObserver once the issue is fixed.\n    // PR: https://github.com/salesforce/lwc/pull/1798\n\n\n    this.isConnected = true;\n    this.classList.add('slds-form-element');\n\n    this._updateClassList();\n\n    this._validateRequiredAttributes();\n\n    this.interactingState = new InteractingState();\n    this.interactingState.onleave(() => this.reportValidity());\n\n    if (this.isTypeNumber) {\n      this._updateNumberValue(this._value);\n    }\n  }\n\n  disconnectedCallback() {\n    this.isConnected = false;\n    this._rendered = false;\n    this._initialValueSet = false;\n    this._cachedInputElement = undefined;\n\n    if (this.ariaObserver) {\n      this.ariaObserver.disconnect();\n      this.ariaObserver = undefined;\n    }\n  }\n\n  renderedCallback() {\n    // For W-7962838: In Safari, focus doesn't scroll input into view.\n    // Attach the event listener used to cache the selected text when selection changes.\n    if (isSafari) {\n      this._inputElement.addEventListener('select', this.handleSelect.bind(this));\n    }\n\n    if (!this._initialValueSet && this._inputElement) {\n      this._rendered = true;\n\n      if (this.isTypeNumber) {\n        this._numberRawValue = fromIsoDecimal(this._value);\n      }\n\n      this._setInputValue(this._displayedValue);\n\n      if (this.isTypeCheckable) {\n        this._inputElement.checked = this._checked;\n      }\n\n      this._initialValueSet = true;\n    }\n\n    this.ariaObserver.sync();\n\n    this._synchronizeA11y();\n  }\n  /**\n   * Reserved for internal use.\n   * @type {number}\n   *\n   */\n\n\n  get formatFractionDigits() {\n    return this._formatFractionDigits;\n  }\n\n  set formatFractionDigits(value) {\n    this._formatFractionDigits = value;\n\n    if (this._rendered && this.isTypeNumber) {\n      this._setInputValue(this._displayedValue);\n    }\n  }\n  /**\n   * A space-separated list of element IDs whose presence or content is controlled by the\n   * time input when type='datetime'. On mobile devices, this is merged with aria-controls\n   * and date-aria-controls to describe the native date time input.\n   * @type {string}\n   */\n\n\n  get timeAriaControls() {\n    return this._timeAriaControls;\n  }\n\n  set timeAriaControls(references) {\n    this._timeAriaControls = references;\n    this.ariaObserver.connectLiveIdRef(references, reference => {\n      this._timeAriaControls = reference;\n    });\n  }\n  /**\n   * A space-separated list of element IDs that provide labels for the date input when type='datetime'.\n   * On mobile devices, this is merged with aria-labelled-by and time-aria-labelled-by to describe\n   * the native date time input.\n   * @type {string}\n   */\n\n\n  get dateAriaLabelledBy() {\n    return this._dateAriaLabelledBy;\n  }\n\n  set dateAriaLabelledBy(references) {\n    this._dateAriaLabelledBy = references;\n    this.ariaObserver.connectLiveIdRef(references, reference => {\n      this._dateAriaLabelledBy = reference;\n    });\n  }\n  /**\n   * A space-separated list of element IDs that provide labels for the time input when type='datetime'.\n   * On mobile devices, this is merged with aria-labelled-by and date-aria-labelled-by to describe\n   * the native date time input.\n   * @type {string}\n   *\n   */\n\n\n  get timeAriaLabelledBy() {\n    return this._timeAriaLabelledBy;\n  }\n\n  set timeAriaLabelledBy(references) {\n    this._timeAriaLabelledBy = references;\n    this.ariaObserver.connectLiveIdRef(references, reference => {\n      this._timeAriaLabelledBy = reference;\n    });\n  }\n  /**\n   * A space-separated list of element IDs that provide descriptive labels for the time input when\n   * type='datetime'. On mobile devices, this is merged with aria-described-by and date-aria-described-by\n   * to describe the native date time input.\n   *  @type {string}\n   *\n   */\n\n\n  get timeAriaDescribedBy() {\n    return this._timeAriaDescribedBy;\n  }\n\n  set timeAriaDescribedBy(references) {\n    this._timeAriaDescribedBy = references;\n    this.ariaObserver.connectLiveIdRef(references, reference => {\n      this._timeAriaDescribedBy = reference;\n    });\n  }\n  /**\n   * A space-separated list of element IDs whose presence or content is controlled by the\n   * date input when type='datetime'. On mobile devices, this is merged with aria-controls\n   * and time-aria-controls to describe the native date time input.\n   * @type {string}\n   *\n   */\n\n\n  get dateAriaControls() {\n    return this._dateAriaControls;\n  }\n\n  set dateAriaControls(references) {\n    this._dateAriaControls = references;\n    this.ariaObserver.connectLiveIdRef(references, reference => {\n      this._dateAriaControls = reference;\n    });\n  }\n  /**\n   * A space-separated list of element IDs that provide descriptive labels for the date input when\n   * type='datetime'. On mobile devices, this is merged with aria-described-by and time-aria-described-by\n   * to describe the native date time input.\n   * @type {string}\n   */\n\n\n  get dateAriaDescribedBy() {\n    return this._dateAriaDescribedBy;\n  }\n\n  set dateAriaDescribedBy(references) {\n    this._dateAriaDescribedBy = references;\n    this.ariaObserver.connectLiveIdRef(references, reference => {\n      this._dateAriaDescribedBy = reference;\n    });\n  }\n  /**\n   * A space-separated list of element IDs whose presence or content is controlled by the input.\n   * @type {string}\n   */\n\n\n  get ariaControls() {\n    return this._ariaControls;\n  }\n\n  set ariaControls(references) {\n    this._ariaControls = references;\n    this.ariaObserver.connect({\n      targetSelector: 'input',\n      attribute: ARIA_CONTROLS,\n      ids: references\n    });\n  }\n  /**\n   * A space-separated list of element IDs that provide labels for the input.\n   * @type {string}\n   */\n\n\n  get ariaLabelledBy() {\n    // native version returns the auto linked value\n    if (this.isNative) {\n      const ariaValues = this._inputElement.getAttribute(ARIA_LABELLEDBY);\n\n      return filterNonAutoLink(ariaValues);\n    }\n\n    return this._ariaLabelledBy;\n  }\n\n  set ariaLabelledBy(references) {\n    this._ariaLabelledBy = references;\n    this.ariaObserver.connect({\n      targetSelector: 'input',\n      attribute: ARIA_LABELLEDBY,\n      ids: references\n    });\n  }\n  /**\n   * A space-separated list of element IDs that provide descriptive labels for the input.\n   * @type {string}\n   */\n\n\n  get ariaDescribedBy() {\n    if (this.isNative) {\n      // in native case return the linked value\n      const ariaValues = this._inputElement.getAttribute(ARIA_DESCRIBEDBY);\n\n      return filterNonAutoLink(ariaValues);\n    }\n\n    return this._ariaDescribedBy;\n  }\n\n  set ariaDescribedBy(references) {\n    this._ariaDescribedBy = references;\n    this.ariaObserver.connect({\n      targetSelector: 'input',\n      attribute: ARIA_DESCRIBEDBY,\n      ids: references\n    });\n  }\n  /**\n   * String value with the formatter to be used for number input. Valid values include\n   * decimal, percent, percent-fixed, and currency.\n   * @type {string}\n   */\n\n\n  get formatter() {\n    return this._formatter;\n  }\n\n  set formatter(value) {\n    this._formatter = normalizeString(value, {\n      fallbackValue: DEFAULT_FORMATTER,\n      validValues: VALID_NUMBER_FORMATTERS\n    });\n\n    this._updateInputDisplayValueIfTypeNumber();\n  }\n  /**\n   * The type of the input. Valid values are checkbox, checkbox-button,\n   * color, date, datetime, time, email, file, password, range, search,\n   * tel, url, number, and toggle. This value defaults to text.\n   * @type {string}\n   * @default text\n   */\n\n\n  get type() {\n    return this._type;\n  }\n\n  set type(value) {\n    const normalizedValue = normalizeString(value);\n    this._type = normalizedValue === 'datetime' ? 'datetime-local' : normalizedValue;\n\n    this._validateType(normalizedValue);\n\n    this._inputElementRefreshNeeded = true;\n\n    if (this._rendered) {\n      // The type is being changed after render, which means the input element may be different (eg. changing\n      // from text to 'checkbox', so we need to set the initial value again\n      this._initialValueSet = false;\n\n      if (this.isTypeNumber) {\n        // If the type has changed, we need to re-parse the value as a number\n        this._updateNumberValue(this._value);\n      }\n    }\n\n    this._updateProxyInputAttributes(['type', 'value', 'max', 'min', 'required', 'pattern']);\n  }\n  /**\n   * For the search type only. If present, a spinner is displayed to indicate that data is loading.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get isLoading() {\n    return this._isLoading;\n  }\n\n  set isLoading(value) {\n    this._isLoading = normalizeBoolean(value);\n  }\n  /**\n   * Specifies the regular expression that the input's value is checked against.\n   * This attribute is supported for email, password, search, tel, text, and url types.\n   * @type {string}\n   *\n   */\n\n\n  get pattern() {\n    if (this.isTypeColor) {\n      return '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$';\n    }\n\n    return this._pattern;\n  }\n\n  set pattern(value) {\n    this._pattern = value;\n\n    this._updateProxyInputAttributes('pattern');\n  }\n  /**\n   * The maximum number of characters allowed in the field.\n   * Use this attribute with email, password, search, tel, text, and url input types only.\n   * @type {number}\n   */\n\n\n  get maxLength() {\n    return this._maxLength;\n  }\n\n  set maxLength(value) {\n    this._maxLength = value;\n\n    this._updateProxyInputAttributes('maxlength');\n  }\n  /**\n   * Specifies the types of files that the server accepts. Use this attribute with file input type only.\n   * @type {string}\n   */\n\n\n  get accept() {\n    return this._accept;\n  }\n\n  set accept(value) {\n    this._accept = value;\n\n    this._updateProxyInputAttributes('accept');\n  }\n  /**\n   * The minimum number of characters allowed in the field.\n   * Use this attribute with email, password, search, tel, text, and url input types only.\n   * @type {number}\n   */\n\n\n  get minLength() {\n    return this._minLength;\n  }\n\n  set minLength(value) {\n    this._minLength = value;\n\n    this._updateProxyInputAttributes('minlength');\n  } // number and date/time\n\n  /**\n   * The maximum acceptable value for the input.  Use this attribute with number,\n   * range, date, time, and datetime input types only. For number and range type, the max value is a\n   * decimal number. For the date, time, and datetime types, the max value must use a valid string for the type.\n   * @type {decimal|string}\n   */\n\n\n  get max() {\n    return this._max;\n  }\n\n  set max(value) {\n    this._max = value;\n\n    this._updateProxyInputAttributes('max');\n  }\n  /**\n   * The minimum acceptable value for the input. Use this attribute with number,\n   * range, date, time, and datetime input types only. For number and range types, the min value\n   * is a decimal number. For the date, time, and datetime types, the min value must use a valid string for the type.\n   * @type {decimal|string}\n   */\n\n\n  get min() {\n    return this._min;\n  }\n\n  set min(value) {\n    this._min = value;\n\n    this._updateProxyInputAttributes('min');\n  }\n  /**\n   * Granularity of the value, specified as a positive floating point number.\n   * Use this attribute with number and range input types only.\n   * Use 'any' when granularity is not a concern. This value defaults to 1.\n   * @type {decimal|string}\n   * @default 1\n   */\n\n\n  get step() {\n    // This should be reconsidered as it in effect disabled any step support for datetime/time types on mobile\n    if (this.isTypeDateTime || this.isTypeTime) {\n      return 'any';\n    } // It should probably default to '1' instead, but this means that we'd be explicitly passing step='1' to the\n    // native input\n\n\n    return this._step;\n  }\n\n  set step(value) {\n    if (typeof value === 'string' && value.toLowerCase() === 'any') {\n      this._step = 'any';\n    } else {\n      this._step = isUndefinedOrNull(value) || isNaN(value) ? undefined : String(value);\n    }\n\n    this._updateProxyInputAttributes('step');\n\n    this._updateInputDisplayValueIfTypeNumber();\n  }\n  /**\n   * If present, the checkbox is selected.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get checked() {\n    // checkable inputs can be part of a named group, in that case there won't be a change event thrown and so\n    // the internal tracking _checked would be out of sync with the actual input value.\n    if (this.isTypeCheckable && this._initialValueSet) {\n      return this._inputElement.checked;\n    }\n\n    return this._checked;\n  }\n\n  set checked(value) {\n    this._checked = normalizeBoolean(value);\n\n    if (this._rendered) {\n      this._inputElement.checked = this._checked;\n    } // Update proxy input should be set after _inputElement is updated.\n    // because when update proxy input, it will use this.checked.\n    // if not update this._inputElement, will lead to inconsistent state.\n\n\n    this._updateProxyInputAttributes('checked');\n  }\n  /**\n   * Specifies that a user can enter more than one value. Use this attribute with file and email input types only.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get multiple() {\n    return this._multiple;\n  }\n\n  set multiple(value) {\n    this._multiple = normalizeBoolean(value);\n\n    this._updateProxyInputAttributes('multiple');\n  }\n  /**\n   * Specifies the value of an input element.\n   * @type {object}\n   */\n\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    const previousValue = this._value;\n    this._value = normalizeInput(value);\n\n    if (this._rendered && this.isTypeNumber) {\n      this._value = normalizeNumber(value); // the extra check for whether the value has changed is done for cases\n      // when the same value is set back in a change handler, this is to avoid\n      // the raw number from changing formatting under the user\n      // (eg. if the user typed 1,000 we want to preserve that formatting as the user\n      // types the value)\n\n      if (this.validity.badInput || this._value !== previousValue) {\n        this._updateNumberValue(value);\n      }\n    }\n\n    this._updateProxyInputAttributes('value'); // Setting value of a type='file' isn't allowed\n\n\n    if (!this.isTypeFile) {\n      // Again, due to the interop layer we need to check whether the value being set\n      // is different, otherwise we're duplicating the sets on the input, which result\n      // in different bugs like Japanese IME duplication of characters in Safari (likely a browser bug) or\n      // character position re-set in IE11.\n      if (this._rendered && this._inputElement.value !== this._displayedValue) {\n        this._setInputValue(this._displayedValue);\n      }\n    }\n  }\n  /**\n   * The variant changes the appearance of an input field.\n   * Accepted variants include standard, label-inline, label-hidden, and label-stacked.\n   * This value defaults to standard, which displays the label above the field.\n   * Use label-hidden to hide the label but make it available to assistive technology.\n   * Use label-inline to horizontally align the label and input field.\n   * Use label-stacked to place the label above the input field.\n   * @type {string}\n   * @default standard\n   */\n\n\n  get variant() {\n    return this._variant || VARIANT.STANDARD;\n  }\n\n  set variant(value) {\n    this._variant = normalizeVariant(value);\n\n    this._updateClassList();\n  }\n  /**\n   * If present, the input field is disabled and users cannot interact with it.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = normalizeBoolean(value);\n\n    this._updateProxyInputAttributes('disabled');\n  }\n  /**\n   * If present, the input field is read-only and cannot be edited by users.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get readOnly() {\n    return this._readOnly;\n  }\n\n  set readOnly(value) {\n    this._readOnly = normalizeBoolean(value);\n\n    this._updateProxyInputAttributes('readonly');\n  }\n  /**\n   * If present, the input field must be filled out before the form is submitted.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get required() {\n    return this._required;\n  }\n\n  set required(value) {\n    this._required = normalizeBoolean(value);\n\n    this._updateProxyInputAttributes('required');\n  }\n  /**\n   * Specifies the time zone used when type='datetime' only. This value defaults to the user's Salesforce time zone setting.\n   * @type {string}\n   *\n   */\n\n\n  get timezone() {\n    return this._timezone || userTimeZone;\n  }\n\n  set timezone(value) {\n    this._timezone = value; // mobile date/time normalization of value/max/min depends on timezone, so we need to update here as well\n\n    this._updateProxyInputAttributes(['value', 'max', 'min']);\n  }\n  /**\n   * Help text detailing the purpose and function of the input.\n   * This attribute isn't supported for file, toggle, and checkbox-button types.\n   * @type {string}\n   *\n   */\n\n\n  get fieldLevelHelp() {\n    return this._fieldLevelHelp;\n  }\n\n  set fieldLevelHelp(value) {\n    this._fieldLevelHelp = value;\n  }\n  /**\n   * Specifies a shortcut key to activate or focus an element.\n   * @type {string}\n   *\n   */\n\n\n  get accessKey() {\n    return this._accesskey;\n  }\n\n  set accessKey(newValue) {\n    this._accesskey = newValue;\n  }\n  /**\n   * A FileList that contains selected files. Use this attribute with the file input type only.\n   * @type {object}\n   *\n   */\n\n\n  get files() {\n    if (this.isTypeFile) {\n      return this._files;\n    }\n\n    return null;\n  }\n  /**\n   * Represents the validity states that an element can be in, with respect to constraint validation.\n   * @type {object}\n   *\n   */\n\n\n  get validity() {\n    return this._constraint.validity;\n  }\n  /**\n   * Specifies the index of the first character to select in the input element.\n   * This attribute is supported only for text type.\n   * Use with selection-end to programmatically set or read the position of\n   * selected text.\n   */\n\n\n  get selectionStart() {\n    if (this._inputElement && 'selectionStart' in this._inputElement) {\n      return this._inputElement.selectionStart;\n    }\n\n    return undefined;\n  }\n\n  set selectionStart(index) {\n    if (this._inputElement && 'selectionStart' in this._inputElement) {\n      this._inputElement.selectionStart = index;\n    }\n  }\n  /**\n   * Specifies the index of the last character to select in the input element.\n   * This attribute is supported only for text type.\n   * Use with selection-start to programmatically set or read the position of\n   * selected text.\n   */\n\n\n  get selectionEnd() {\n    if (this._inputElement && 'selectionEnd' in this._inputElement) {\n      return this._inputElement.selectionEnd;\n    }\n\n    return undefined;\n  }\n\n  set selectionEnd(index) {\n    if (this._inputElement && 'selectionEnd' in this._inputElement) {\n      this._inputElement.selectionEnd = index;\n    }\n  }\n  /**\n   * Checks if the input is valid.\n   * @returns {boolean} Indicates whether the element meets all constraint validations.\n   */\n\n\n  checkValidity() {\n    return this._constraint.checkValidity();\n  }\n  /**\n   * Sets a custom error message to be displayed when a form is submitted.\n   * @param {string} message - The string that describes the error. If message is an empty string, the error message is reset.\n   */\n\n\n  setCustomValidity(message) {\n    this._constraint.setCustomValidity(message);\n  }\n  /**\n   * Displays the error messages and returns false if the input is invalid.\n   * If the input is valid, reportValidity() clears displayed error messages and returns true.\n   * @returns {boolean} - The validity status of the input fields.\n   */\n\n\n  reportValidity() {\n    return this._constraint.reportValidity(message => {\n      if (this._rendered && !this.isNativeInput) {\n        this._inputElement.showHelpMessage(message);\n      } else {\n        this._helpMessage = message;\n      }\n    });\n  }\n  /**\n   * Displays error messages on invalid fields.\n   * An invalid field fails at least one constraint validation and returns false when checkValidity() is called.\n   */\n\n\n  showHelpMessageIfInvalid() {\n    this.reportValidity();\n  }\n  /**\n   * Sets focus on the input element.\n   */\n\n\n  focus() {\n    if (this._rendered) {\n      this._inputElement.focus();\n    }\n  }\n  /**\n   * Removes keyboard focus from the input element.\n   */\n\n\n  blur() {\n    if (this._rendered) {\n      this._inputElement.blur();\n    }\n  }\n\n  get isNativeInput() {\n    return !(this.isTypeDesktopDate || this.isTypeDesktopDateTime || this.isTypeDesktopTime);\n  }\n\n  get computedAriaControls() {\n    const ariaValues = []; // merge all date & time arias on mobile since it's displayed as a single field\n\n    if (this.isTypeMobileDateTime) {\n      ariaValues.push(this.dateAriaControls);\n      ariaValues.push(this.timeAriaControls);\n    }\n\n    if (this.ariaControls) {\n      ariaValues.push(this.ariaControls);\n    }\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get computedAriaLabel() {\n    const ariaValues = []; // merge all date & time arias on mobile since it's displayed as a single field\n\n    if (this.isTypeMobileDateTime) {\n      ariaValues.push(this.dateAriaLabel);\n      ariaValues.push(this.timeAriaLabel);\n    }\n\n    if (this.ariaLabel) {\n      ariaValues.push(this.ariaLabel);\n    }\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get computedAriaLabelledBy() {\n    const ariaValues = [];\n\n    if (this.isTypeFile) {\n      ariaValues.push(this.computedUniqueFileElementLabelledById);\n    } // merge all date & time arias on mobile since it's displayed as a single field\n\n\n    if (this.isTypeMobileDateTime) {\n      ariaValues.push(this.dateAriaLabelledBy);\n      ariaValues.push(this.timeAriaLabelledBy);\n    }\n\n    if (this.ariaLabelledBy) {\n      ariaValues.push(this.ariaLabelledBy);\n    }\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get computedAriaDescribedBy() {\n    const ariaValues = [];\n\n    if (this._helpMessage) {\n      ariaValues.push(this.computedUniqueHelpElementId);\n    } // The toggle type is described by a secondary element\n\n\n    if (this.isTypeToggle) {\n      ariaValues.push(this.computedUniqueToggleElementDescribedById);\n    } // merge all date & time arias on mobile since it's displayed as a single field\n\n\n    if (this.isTypeMobileDateTime) {\n      ariaValues.push(this.dateAriaDescribedBy);\n      ariaValues.push(this.timeAriaDescribedBy);\n    }\n\n    if (this.ariaDescribedBy) {\n      ariaValues.push(this.ariaDescribedBy);\n    }\n\n    return normalizeAriaAttribute(ariaValues);\n  }\n\n  get computedAriaInvalid() {\n    // W-8796658: aria-invalid should always follow the visual indication of errors\n    return !!this._helpMessage;\n  }\n\n  get isLabelHidden() {\n    return this.variant === VARIANT.LABEL_HIDDEN;\n  }\n\n  get isLabelStacked() {\n    return this.variant === VARIANT.LABEL_STACKED;\n  }\n\n  get accesskey() {\n    return this._accesskey;\n  }\n\n  get colorInputElementValue() {\n    return this.validity.valid && this.value ? this.value : DEFAULT_COLOR;\n  }\n\n  get colorInputStyle() {\n    return `background: ${this.value || '#5679C0'};`;\n  }\n\n  get computedUniqueHelpElementId() {\n    return getRealDOMId(this.template.querySelector('[data-help-message]'));\n  }\n\n  get computedUniqueToggleElementDescribedById() {\n    if (this.isTypeToggle) {\n      const toggle = this.template.querySelector('[data-toggle-description]');\n      return getRealDOMId(toggle);\n    }\n\n    return null;\n  }\n\n  get computedUniqueFormLabelId() {\n    if (this.isTypeFile) {\n      const formLabel = this.template.querySelector('[data-form-label]');\n      return getRealDOMId(formLabel);\n    }\n\n    return null;\n  }\n\n  get computedUniqueFileSelectorLabelId() {\n    if (this.isTypeFile) {\n      const fileBodyLabel = this.template.querySelector('[data-file-selector-label]');\n      return getRealDOMId(fileBodyLabel);\n    }\n\n    return null;\n  }\n\n  get computedUniqueFileElementLabelledById() {\n    if (this.isTypeFile) {\n      const labelIds = [this.computedUniqueFormLabelId, this.computedUniqueFileSelectorLabelId];\n      return labelIds.join(' ');\n    }\n\n    return null;\n  }\n\n  get computedFormElementClass() {\n    const classes = classSet('slds-form-element__control slds-grow');\n\n    if (this.isTypeSearch) {\n      classes.add('slds-input-has-icon slds-input-has-icon_left-right');\n    }\n\n    return classes.toString();\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get computedLabelClass() {\n    const classnames = classSet('slds-form-element__label');\n\n    if (this.isTypeCheckable || this.isTypeFile) {// do nothing\n    } else if (this.isTypeToggle) {\n      classnames.add('slds-m-bottom_none');\n    } else {\n      classnames.add('slds-no-flex');\n    }\n\n    return classnames.add({\n      'slds-assistive-text': this.isLabelHidden\n    }).toString();\n  }\n\n  get computedNumberClass() {\n    return classSet('slds-input').add({\n      'slds-is-disabled': this.disabled\n    }).toString();\n  }\n\n  get computedColorLabelClass() {\n    return classSet('slds-form-element__label slds-color-picker__summary-label').add({\n      'slds-assistive-text': this.isLabelHidden\n    }).toString();\n  }\n\n  get computedCheckboxClass() {\n    return classSet('slds-checkbox').add({\n      'slds-checkbox_standalone': !this.isStandardVariant\n    }).toString();\n  }\n\n  get normalizedMax() {\n    return this._normalizeDateTimeString(this.max);\n  }\n\n  get normalizedMin() {\n    return this._normalizeDateTimeString(this.min);\n  }\n\n  get isTypeNumber() {\n    return this.type === 'number';\n  }\n\n  get isTypeEmail() {\n    // To test against native change this to type=\"emails\"\n    return this.type === 'email';\n  }\n\n  get isTypeCheckable() {\n    return this.isTypeCheckbox || this.isTypeCheckboxButton || this.isTypeRadio || this.isTypeToggle;\n  }\n\n  get isTypeSearch() {\n    return this.type === 'search';\n  }\n\n  get isTypeToggle() {\n    return this.type === 'toggle';\n  }\n\n  get isTypeText() {\n    return this.type === 'text';\n  }\n\n  get isTypeCheckbox() {\n    return this.type === 'checkbox';\n  }\n\n  get isTypeRadio() {\n    return this.type === 'radio';\n  }\n\n  get isTypeCheckboxButton() {\n    return this.type === 'checkbox-button';\n  }\n\n  get isTypeFile() {\n    return this.type === 'file';\n  }\n\n  get isTypeColor() {\n    return this.type === 'color';\n  }\n\n  get isTypeDate() {\n    return this.type === 'date';\n  }\n\n  get isTypeDateTime() {\n    return this.type === 'datetime' || this.type === 'datetime-local';\n  }\n\n  get isTypeTime() {\n    return this.type === 'time';\n  }\n\n  get isTypeMobileDate() {\n    return this.isTypeDate && !this._isDesktopBrowser();\n  }\n\n  get isTypeDesktopDate() {\n    return this.isTypeDate && this._isDesktopBrowser();\n  }\n\n  get isTypeMobileDateTime() {\n    return this.isTypeDateTime && !this._isDesktopBrowser();\n  }\n\n  get isTypeDesktopDateTime() {\n    return this.isTypeDateTime && this._isDesktopBrowser();\n  }\n\n  get isTypeMobileTime() {\n    return this.isTypeTime && !this._isDesktopBrowser();\n  }\n\n  get isTypeDesktopTime() {\n    return this.isTypeTime && this._isDesktopBrowser();\n  }\n\n  get isTypeSimple() {\n    return !this.isTypeCheckbox && !this.isTypeCheckboxButton && !this.isTypeToggle && !this.isTypeRadio && !this.isTypeFile && !this.isTypeColor && !this.isTypeDesktopDate && !this.isTypeDesktopDateTime && !this.isTypeDesktopTime;\n  }\n\n  get _inputElement() {\n    if (!this._cachedInputElement || this._inputElementRefreshNeeded) {\n      this._inputDragonDecorated = false;\n      let inputElement;\n\n      if (this.isTypeDesktopDate) {\n        inputElement = this.template.querySelector('lightning-datepicker');\n      } else if (this.isTypeDesktopDateTime) {\n        inputElement = this.template.querySelector('lightning-datetimepicker');\n      } else if (this.isTypeDesktopTime) {\n        inputElement = this.template.querySelector('lightning-timepicker');\n      } else {\n        inputElement = this.template.querySelector('input');\n        this._inputDragonDecorated = true;\n        decorateInputForDragon(inputElement);\n      }\n\n      this._inputElementRefreshNeeded = false;\n      this._cachedInputElement = inputElement;\n    }\n\n    return this._cachedInputElement;\n  }\n\n  get _inputTypeForValidity() {\n    let inputType = 'text';\n\n    if (this.isTypeSimple) {\n      if (this.isTypeEmail) {\n        inputType = 'text';\n      } else if (this.isTypeNumber) {\n        inputType = 'number';\n      } else {\n        inputType = this.type;\n      }\n    } else if (this.isTypeCheckable) {\n      inputType = this.isTypeRadio ? 'radio' : 'checkbox';\n    } else if (this.isTypeFile) {\n      inputType = 'file';\n    } else if (this.isTypeDateTime) {\n      inputType = 'datetime-local';\n    } else if (this.isTypeTime) {\n      inputType = 'time';\n    } else if (this.isTypeDate) {\n      inputType = 'date';\n    }\n\n    return inputType;\n  }\n\n  get _displayedValue() {\n    if (this.isTypeNumber) {\n      // When only a symbol is entered by the user, set the display value as the user's input.\n      // This will not affect the value dispatched by input via the change event, as it only dispatches a valid decimal number.\n      // Due to the above, in integrations like input-field, the user's initial input of a symbol\n      // like a minus sign will not be overwritten by an empty string value.\n      // See description in PR for more details: https://github.com/salesforce/lightning-components/pull/3843\n      if (this._inputElement.value.length === 1 && hasValidNumberSymbol(this._inputElement.value)) {\n        return this._inputElement.value;\n      } // If the number is not valid (bad input, step mismatch, etc.) show the raw number as\n      // well, otherwise the formatted value ends up being 'NaN' which makes it hard to\n      // see mistakes\n\n\n      if (this._showRawNumber || !this.validity.valid) {\n        if (hasValidNumberShortcut(this._numberRawValue) && isValidNumber(this._numberRawValue)) {\n          this._numberRawValue = fromIsoDecimal(this._value);\n        }\n\n        return this._numberRawValue;\n      }\n\n      return formatNumber(this._value, this._buildFormatNumberOptions(this.formatter));\n    }\n\n    if (this.isTypeMobileDate || this.isTypeMobileDateTime || this.isTypeMobileTime) {\n      return this._normalizeDateTimeString(this._value);\n    }\n\n    return this._value;\n  }\n  /**\n   * Gets the value for the actual 'type' attribute on the input element.\n   */\n\n\n  get _internalType() {\n    // Maps number->text to support shorthand input strings like '1k'.\n    if (this.isTypeNumber || this.isTypeEmail) {\n      return 'text';\n    }\n\n    return this._type;\n  }\n\n  get isStandardVariant() {\n    return this.variant === VARIANT.STANDARD || this.variant === VARIANT.LABEL_HIDDEN;\n  }\n\n  get _showClearButton() {\n    return this.isTypeSearch && isNotUndefinedOrNull(this._value) && this._value !== '';\n  }\n\n  get _ignoreRequired() {\n    // If uploading via the drop zone or via the input directly, we should\n    // ignore the required flag as a file has been uploaded\n    return this.isTypeFile && this._required && (this.fileUploadedViaDroppableZone || this._files && this._files.length > 0);\n  }\n\n  get _inputMode() {\n    if (this.isTypeNumber) {\n      return 'decimal';\n    } else if (this.isTypeEmail) {\n      return 'email';\n    }\n\n    return null;\n  }\n\n  get _constraint() {\n    if (!this._constraintApi) {\n      const overrides = {\n        badInput: () => {\n          if (!this._rendered) {\n            return false;\n          }\n\n          if (this.isTypeNumber) {\n            return !isValidNumber(this._numberRawValue);\n          }\n\n          if (!this.isNativeInput) {\n            return this._inputElement.hasBadInput();\n          }\n\n          return this._inputElement.validity.badInput;\n        },\n        tooLong: () => // since type=number is type=text in the dom when not in focus\n        // we should always return false as maxlength doesn't apply\n        this.isNativeInput && !this.isTypeNumber && this._rendered && this._inputElement.validity.tooLong,\n        tooShort: () => // since type=number is type=text in the dom when not in focus\n        // we should always return false as minlength doesn't apply\n        this.isNativeInput && !this.isTypeNumber && this._rendered && this._inputElement.validity.tooShort,\n        patternMismatch: () => this.isNativeInput && this._rendered && this._inputElement.validity.patternMismatch\n      }; // International email support, note that the type=\"email\" does not currently\n      // support full unicode that 226+ now supports\n\n      if (this.isTypeEmail) {\n        overrides.typeMismatch = () => {\n          if (this._multiple) {\n            return !isValidMultipleEmails(this.value);\n          }\n\n          return !isValidEmail(this.value);\n        };\n      } // FF, IE and Safari don't support type datetime-local,\n      // IE and Safari don't support type date or time\n      // we need to defer to the base component to check rangeOverflow/rangeUnderflow.\n      // Due to the custom override, changing the type to or from datetime/time would affect the validation\n\n\n      if (this.isTypeDesktopDateTime || this.isTypeDesktopTime || this.isTypeDesktopDate) {\n        overrides.rangeOverflow = () => {\n          // input type='time' is timezone agnostic, so we should remove the timezone designator before comparison\n          const max = this.isTypeDesktopTime ? normalizeTime(this.max) : this.max;\n          return isAfter(this.value, max);\n        };\n\n        overrides.rangeUnderflow = () => {\n          // input type='time' is timezone agnostic, so we should remove the timezone designator before comparison\n          const min = this.isTypeDesktopTime ? normalizeTime(this.min) : this.min;\n          return isBefore(this.value, min);\n        };\n\n        overrides.stepMismatch = () => false;\n      }\n\n      if (this.isIE11) {\n        overrides.stepMismatch = () => false;\n      }\n\n      this._constraintApi = new FieldConstraintApiWithProxyInput(() => {\n        // The date/time components display their own errors and have custom messages for badInput and rangeOverflow/Underflow.\n        if (!this.isNativeInput) {\n          return this._inputElement;\n        }\n\n        return this;\n      }, overrides); // Buggy: This (or similar code) creates invalid DOM when attributes like 'step' are passed\n      // directly along to the input element if the type doesn't allow those attributes.\n      // For example: 'step' is allowed on type=number but not type=text.\n      // See https://www.w3.org/TR/html52/sec-forms.html#apply for which attributes apply to which types.\n\n      this._constraintApiProxyInputUpdater = this._constraintApi.setInputAttributes({\n        type: () => this._inputTypeForValidity,\n        // We need to normalize value so that it's consumable by the proxy input (otherwise the value\n        // will be invalid for the native input)\n        value: () => this._normalizeDateTimeString(this.value),\n        checked: () => this.checked,\n        maxlength: () => this.maxLength,\n        minlength: () => this.minLength,\n        // 'pattern' depends on type\n        pattern: () => this.pattern,\n        // 'max' and 'min' depend on type and timezone\n        max: () => this.normalizedMax,\n        min: () => this.normalizedMin,\n        step: () => this.step,\n        accept: () => this.accept,\n        multiple: () => this.multiple,\n        disabled: () => this.disabled,\n        readonly: () => this.readOnly,\n        // depends on type and whether an upload has been made\n        required: () => this.required && !this._ignoreRequired\n      });\n    }\n\n    return this._constraintApi;\n  }\n\n  get hasExternalLabel() {\n    return this.variant === VARIANT.LABEL_HIDDEN && this.ariaLabelledBy && this.ariaLabelledBy.length;\n  }\n\n  get helptextAlternativeText() {\n    return formatLabel(i18n.helpTextAlternativeText, this.label);\n  }\n\n  handleFileClick() {\n    this._setInputValue(null);\n\n    this._updateValueAndValidityAttribute(null);\n  }\n\n  handleDropFiles(event) {\n    // drop doesn't trigger focus nor blur, so set state to interacting\n    // and auto leave when there's no more action\n    this.interactingState.interacting();\n    this.fileUploadedViaDroppableZone = true;\n    this._files = event.dataTransfer && event.dataTransfer.files;\n\n    this._updateProxyInputAttributes('required');\n\n    this._dispatchChangeEventWithDetail({\n      files: this._files\n    });\n  }\n  /**\n   * Handle text selection.\n   * Dynamically bound to the select event by `renderedCallback`.\n   * This allows us to cache text selection in Safari, which doesn't preserve selection.\n   */\n\n\n  handleSelect() {\n    if (isSafari) {\n      this._selectionCache.preserve(this._inputElement);\n    }\n  }\n\n  handleFocus() {\n    this.interactingState.enter();\n\n    if (this.isTypeColor) {\n      this._isColorPickerPanelOpen = false;\n    } // Focusing a number input causes the value displayed to be modified.\n    // Changing the value resets selection, so we save and restore selection.\n\n\n    if (this._rendered && this.isTypeNumber) {\n      this._showRawNumber = true;\n\n      this._selectionCache.preserve(this._inputElement);\n\n      this._inputElement.value = this._displayedValue;\n\n      this._selectionCache.restore(this._inputElement);\n    }\n\n    this.dispatchEvent(new CustomEvent('focus'));\n  }\n\n  handleBlur(event) {\n    this.interactingState.leave();\n\n    if (this._rendered && this.isTypeNumber) {\n      this._showRawNumber = false;\n\n      this._setInputValue(this._displayedValue);\n    }\n\n    if (!event.relatedTarget || !this.template.contains(event.relatedTarget)) {\n      this.dispatchEvent(new CustomEvent('blur'));\n    }\n  }\n\n  handleChange(event) {\n    event.stopPropagation();\n\n    this._dispatchCommitEvent();\n\n    if (this.isTypeSimple && this.value === event.target.value) {\n      return;\n    }\n\n    this._dispatchChangeEvent();\n  }\n\n  handleInput(event) {\n    event.stopPropagation();\n\n    if (this.isTypeNumber) {\n      // for invalid numbers the value might stay the same as the user\n      // changed the invalid input, so we need to update the raw value\n      this._numberRawValue = this._inputElement.value;\n    }\n\n    if (this.isTypeSimple && this.value === event.target.value) {\n      return;\n    }\n\n    this._dispatchChangeEvent();\n  }\n\n  handleKeyDown(event) {\n    if (this.isTypeNumber) {\n      // we're letting \"Shift\" through to prevent capital letters, other special symbols for type=\"number\"\n      const hasMetaOrCtrlModifier = event.metaKey || event.ctrlKey; // need to check that event.key is valid for \"autofill\" cases\n\n      if (!hasMetaOrCtrlModifier && !this.readOnly && event.key) {\n        const key = normalizeKeyValue(event.key);\n\n        if (key.length === 1 && !isValidNumberCharacter(key)) {\n          event.preventDefault();\n        }\n\n        if (key === 'ArrowUp') {\n          event.preventDefault();\n\n          this._numberStepUpAndDispatchEvents(1);\n        } else if (key === 'ArrowDown') {\n          event.preventDefault();\n\n          this._numberStepUpAndDispatchEvents(-1);\n        }\n      }\n    }\n  }\n\n  handleColorChange(event) {\n    const selectedColor = event.detail.color;\n\n    if (selectedColor !== this._inputElement.value) {\n      this._setInputValue(selectedColor);\n\n      this._updateValueAndValidityAttribute(selectedColor);\n\n      this.focus();\n\n      this._dispatchChangeEventWithDetail({\n        value: selectedColor\n      });\n\n      this._dispatchCommitEvent();\n    }\n\n    this.template.querySelector('lightning-primitive-colorpicker-button').focus();\n  }\n\n  _clearAndSetFocusOnInput(event) {\n    // TODO: Discuss this, it seems the wrong thing to do.\n    // button is removed from template, but\n    // event still is propagated, For example, captured by panel,\n    // then cause panel think is clicked outside.\n    event.stopPropagation();\n    this.interactingState.enter();\n\n    this._setInputValue('');\n\n    this._updateValueAndValidityAttribute('');\n\n    this._inputElement.focus();\n\n    this._dispatchChangeEventWithDetail({\n      value: this._value\n    });\n\n    this._dispatchCommitEvent();\n  }\n\n  _dispatchCommitEvent() {\n    this.dispatchEvent(new CustomEvent('commit'));\n  }\n\n  _dispatchChangeEventWithDetail(detail) {\n    this.dispatchEvent(new CustomEvent('change', {\n      composed: true,\n      bubbles: true,\n      detail\n    }));\n  }\n\n  _validateType(type) {\n    assert(type !== 'hidden', `<lightning-input> The type attribute value \"hidden\" is invalid. Use a regular <input type=\"hidden\"> instead.`);\n    assert(type !== 'submit' && type !== 'reset' && type !== 'image' && type !== 'button', `<lightning-input> The type attribute value \"${type}\" is invalid. Use <lightning:button> instead.`);\n\n    if (this.isTypeRadio) {\n      assert(!this.required, `<lightning-input> The required attribute is not supported on radio inputs directly. It should be implemented at the radio group level.`);\n    }\n  }\n\n  _validateRequiredAttributes() {\n    const {\n      label\n    } = this;\n    assert(typeof label === 'string' && label.length, `<lightning-input> The required label attribute value \"${label}\" is invalid.`);\n  }\n\n  _setInputValue(value) {\n    if (this._inputDragonDecorated) {\n      // The underlying input has been modified to dispatch an 'input' event when a direct value set\n      // is used to allow for Dragon Natural Speaking (which sets the value directly on the inputs instead\n      // dispatching an input event against the input). Since we're in a programatic set here (ie. set\n      // not resulting from a direct user interaction) we want a default setter behaviour that doesn't\n      // dispatch any events.\n      setDecoratedDragonInputValueWithoutEvent(this._inputElement, value);\n    } else {\n      this._inputElement.value = value;\n    }\n  }\n\n  _dispatchChangeEvent() {\n    this.interactingState.enter();\n    const detail = {};\n\n    if (this.isTypeCheckable) {\n      this._updateCheckedAndValidityAttribute(this._inputElement.checked);\n\n      detail.checked = this._checked;\n    } else if (this.isTypeFile) {\n      this._files = this._inputElement.files; // LWC does not proxy dom elements any more. So there is no need to call lwc.unwrap here anymore\n\n      detail.files = this._files;\n\n      this._updateProxyInputAttributes('required');\n    }\n\n    if (!this.isTypeCheckable) {\n      if (this.isTypeNumber) {\n        this._numberRawValue = this._inputElement.value;\n        detail.value = toIsoDecimal(this._inputElement.value);\n      } else {\n        detail.value = this._inputElement.value;\n      }\n\n      if (this.isTypeMobileDateTime) {\n        detail.value = normalizeDateTimeToUTC(detail.value, this.timezone);\n      } else if (this.isTypeMobileTime) {\n        detail.value = normalizeTime(detail.value);\n      }\n\n      this._updateValueAndValidityAttribute(detail.value);\n    }\n\n    this._dispatchChangeEventWithDetail(detail);\n  }\n\n  _isDesktopBrowser() {\n    return formFactor === 'Large';\n  }\n\n  _updateValueAndValidityAttribute(value) {\n    this._value = value;\n\n    this._updateProxyInputAttributes('value');\n  }\n\n  _updateCheckedAndValidityAttribute(value) {\n    this._checked = value;\n\n    this._updateProxyInputAttributes('checked');\n  }\n\n  _updateProxyInputAttributes(attributes) {\n    if (this._constraintApiProxyInputUpdater) {\n      this._constraintApiProxyInputUpdater(attributes);\n    }\n  }\n\n  _updateInputDisplayValueIfTypeNumber() {\n    // Displayed value depends on the format number, so if we're not showing the raw\n    // number we should update the value\n    if (this._rendered && this.isTypeNumber && !this._showRawNumber && this._inputElement) {\n      this._setInputValue(this._displayedValue);\n    }\n  }\n  /**\n   * Increases (if increment is positive, decreases otherwise) the number value of the input by the increment\n   * multiple of the given 'step'. Additionally dispatches the 'change' and 'commit' events.\n   *\n   * @param {Number} increment A multiple of the step to increase, when step is 'any',\n   * the step is assumed to be 1.\n   * @private\n   */\n\n\n  _numberStepUpAndDispatchEvents(increment) {\n    if (this._readOnly || this._disabled) {\n      return;\n    }\n\n    this._value = increaseNumberByStep({\n      value: this._value,\n      step: this.step,\n      increment,\n      fractionDigits: this._buildFormatNumberOptions(this.formatter).minimumFractionDigits\n    }); // Raw value is the value the user entered (we preserve a user's input),\n    // since we're generating a new value we're overriding it\n\n    this._numberRawValue = fromIsoDecimal(this._value);\n\n    this._setInputValue(this._displayedValue);\n\n    this._dispatchChangeEvent();\n\n    this._dispatchCommitEvent();\n  }\n\n  _updateClassList() {\n    classListMutation(this.classList, {\n      'slds-form-element_stacked': this.variant === VARIANT.LABEL_STACKED,\n      'slds-form-element_horizontal': this.variant === VARIANT.LABEL_INLINE\n    });\n  }\n\n  _updateNumberValue(value) {\n    const newValue = normalizeNumber(value);\n    this._value = newValue;\n    this._numberRawValue = fromIsoDecimal(newValue);\n  }\n\n  _buildFormatNumberOptions(formatter) {\n    const options = {\n      style: formatter\n    }; // Use the min/max fraction digits from the formatFractionDigits provided by the user if available.\n    // Otherwise, use the number of digits calculated from step\n\n    if (this._formatFractionDigits !== undefined) {\n      options.minimumFractionDigits = this._formatFractionDigits;\n      options.maximumFractionDigits = this._formatFractionDigits;\n    } else {\n      let digitsFromStep = calculateFractionDigitsFromStep(this._step); // if formatting percentages, when calculating digits from step, take into\n      // consideration that the formatted number is effectively multiplied by 10^2, ie. 0.1 is 10%\n      // so we need to subtract 2 digits;\n\n      if (formatter === 'percent' && typeof digitsFromStep === 'number') {\n        digitsFromStep -= 2;\n\n        if (digitsFromStep < 0) {\n          digitsFromStep = 0;\n        }\n      }\n\n      options.minimumFractionDigits = digitsFromStep;\n      options.maximumFractionDigits = digitsFromStep;\n    }\n\n    return options;\n  }\n\n  _normalizeDateTimeString(value) {\n    let result = value;\n\n    if (this.isTypeDate) {\n      result = normalizeDate(value);\n    } else if (this.isTypeTime) {\n      result = normalizeTime(value);\n    } else if (this.isTypeDateTime) {\n      result = normalizeUTCDateTime(value, this.timezone);\n    }\n\n    return result;\n  }\n\n  _updateInputA11y(elem) {\n    synchronizeAttrs(elem, {\n      [ARIA_LABELLEDBY]: this.computedAriaLabelledBy,\n      [ARIA_DESCRIBEDBY]: this.computedAriaDescribedBy,\n      [ARIA_CONTROLS]: this.computedAriaControls,\n      [ARIA_LABEL]: this.computedAriaLabel\n    });\n  }\n\n  _updateDateOrTimePickerA11y(elem) {\n    synchronizeAttrs(elem, {\n      ariaLabelledByElement: this.ariaLabelledBy,\n      ariaDescribedByElements: this.ariaDescribedBy,\n      ariaControlsElement: this.ariaControls,\n      [ARIA_LABEL]: this.computedAriaLabel\n    });\n  }\n\n  _updateDateTimePickerA11y(elem) {\n    synchronizeAttrs(elem, {\n      // datepicker aria attributes\n      dateAriaLabelledBy: this.dateAriaLabelledBy,\n      dateAriaDescribedBy: this.dateAriaDescribedBy,\n      dateAriaControls: this.dateAriaControls,\n      dateAriaLabel: this.dateAriaLabel,\n      // timepicker aria attributes\n      timeAriaLabelledBy: this.timeAriaLabelledBy,\n      timeAriaDescribedBy: this.timeAriaDescribedBy,\n      timeAriaControls: this.timeAriaControls,\n      timeAriaLabel: this.timeAriaLabel\n    });\n  }\n\n  _synchronizeA11y() {\n    // each of these templates are mutually exclusive and are selected\n    // depending on the [type] of input.\n    const input = this.template.querySelector('input');\n    const datepicker = this.template.querySelector('lightning-datepicker');\n    const timepicker = this.template.querySelector('lightning-timepicker');\n    const datetimepicker = this.template.querySelector('lightning-datetimepicker'); // determine which template type is present,\n    // and update a11y props accordingly\n\n    if (input) {\n      this._updateInputA11y(input);\n    } else if (datepicker) {\n      this._updateDateOrTimePickerA11y(datepicker);\n    } else if (timepicker) {\n      this._updateDateOrTimePickerA11y(timepicker);\n    } else if (datetimepicker) {\n      this._updateDateTimePickerA11y(datetimepicker);\n    }\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nLightningInput.delegatesFocus = true;\n\n_registerDecorators(LightningInput, {\n  publicProps: {\n    placeholder: {\n      config: 0\n    },\n    name: {\n      config: 0\n    },\n    label: {\n      config: 0\n    },\n    messageWhenBadInput: {\n      config: 0\n    },\n    messageWhenPatternMismatch: {\n      config: 0\n    },\n    messageWhenRangeOverflow: {\n      config: 0\n    },\n    messageWhenRangeUnderflow: {\n      config: 0\n    },\n    messageWhenStepMismatch: {\n      config: 0\n    },\n    messageWhenTooShort: {\n      config: 0\n    },\n    messageWhenTooLong: {\n      config: 0\n    },\n    messageWhenTypeMismatch: {\n      config: 0\n    },\n    messageWhenValueMissing: {\n      config: 0\n    },\n    messageToggleActive: {\n      config: 0\n    },\n    messageToggleInactive: {\n      config: 0\n    },\n    ariaLabel: {\n      config: 0\n    },\n    autocomplete: {\n      config: 0\n    },\n    dateStyle: {\n      config: 0\n    },\n    timeStyle: {\n      config: 0\n    },\n    dateAriaLabel: {\n      config: 0\n    },\n    formatFractionDigits: {\n      config: 3\n    },\n    timeAriaControls: {\n      config: 3\n    },\n    dateAriaLabelledBy: {\n      config: 3\n    },\n    timeAriaLabelledBy: {\n      config: 3\n    },\n    timeAriaDescribedBy: {\n      config: 3\n    },\n    dateAriaControls: {\n      config: 3\n    },\n    dateAriaDescribedBy: {\n      config: 3\n    },\n    ariaControls: {\n      config: 3\n    },\n    ariaLabelledBy: {\n      config: 3\n    },\n    ariaDescribedBy: {\n      config: 3\n    },\n    formatter: {\n      config: 3\n    },\n    type: {\n      config: 3\n    },\n    isLoading: {\n      config: 3\n    },\n    pattern: {\n      config: 3\n    },\n    maxLength: {\n      config: 3\n    },\n    accept: {\n      config: 3\n    },\n    minLength: {\n      config: 3\n    },\n    max: {\n      config: 3\n    },\n    min: {\n      config: 3\n    },\n    step: {\n      config: 3\n    },\n    checked: {\n      config: 3\n    },\n    multiple: {\n      config: 3\n    },\n    value: {\n      config: 3\n    },\n    variant: {\n      config: 3\n    },\n    disabled: {\n      config: 3\n    },\n    readOnly: {\n      config: 3\n    },\n    required: {\n      config: 3\n    },\n    timezone: {\n      config: 3\n    },\n    fieldLevelHelp: {\n      config: 3\n    },\n    accessKey: {\n      config: 3\n    },\n    files: {\n      config: 1\n    },\n    validity: {\n      config: 1\n    },\n    selectionStart: {\n      config: 3\n    },\n    selectionEnd: {\n      config: 3\n    }\n  },\n  publicMethods: [\"checkValidity\", \"setCustomValidity\", \"reportValidity\", \"showHelpMessageIfInvalid\", \"focus\", \"blur\"],\n  track: {\n    _timeAriaDescribedBy: 1,\n    _timeAriaLabelledBy: 1,\n    _timeAriaControls: 1,\n    _dateAriaControls: 1,\n    _dateAriaDescribedBy: 1,\n    _dateAriaLabelledBy: 1,\n    _value: 1,\n    _type: 1,\n    _pattern: 1,\n    _max: 1,\n    _min: 1,\n    _step: 1,\n    _disabled: 1,\n    _readOnly: 1,\n    _required: 1,\n    _checked: 1,\n    _isLoading: 1,\n    _multiple: 1,\n    _timezone: 1,\n    _helpMessage: 1,\n    _isColorPickerPanelOpen: 1,\n    _fieldLevelHelp: 1,\n    _accesskey: 1,\n    _maxLength: 1,\n    _minLength: 1,\n    _accept: 1,\n    _variant: 1,\n    _numberRawValue: 1\n  },\n  fields: [\"_formatter\", \"_showRawNumber\", \"_initialValueSet\", \"_files\", \"_rendered\", \"_selectionCache\", \"isConnected\"]\n});\n\nexport default _registerComponent(LightningInput, {\n  tmpl: _tmpl\n});\nLightningInput.interopMap = {\n  exposeNativeEvent: {\n    change: true,\n    focus: true,\n    blur: true\n  }\n};","export function normalizeInput(value) {\n  if (typeof value === 'number' || typeof value === 'string') {\n    return String(value);\n  }\n\n  return '';\n}","import groupingSeparator from '@salesforce/i18n/number.groupingSeparator';\nimport decimalSeparator from '@salesforce/i18n/number.decimalSeparator';\nimport { fromLocalizedDigits, toLocalizedDigits, numberFormat } from 'lightning/internationalizationLibrary';\nimport { isEmptyString } from 'lightning/inputUtils';\nconst VALID_NUMBER_CHARACTERS_EXPRESSION = new RegExp( // eslint-disable-next-line no-useless-escape\n'^[-+0-9kKmMbBtTeE.,\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9' + '\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF' + '\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF' + '\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9' + '\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9' + '\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89' + '\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49' + '\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909' + '\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9' + ']$');\nconst SHORTCUT_FACTORS = {\n  k: 3,\n  m: 6,\n  b: 9,\n  t: 12\n};\nconst SHORTCUTS = ['k', 'm', 'b', 't'];\nconst NUMBER_SYMBOLS = ['+', '-'];\nexport function toIsoDecimal(numberAsString) {\n  const result = transformLocalizedNumberToIsoDecimal(numberAsString);\n\n  if (isNaN(result)) {\n    return '';\n  }\n\n  return result;\n}\nexport function isValidNumber(numberAsString) {\n  return !isNaN(transformLocalizedNumberToIsoDecimal(numberAsString));\n}\nexport function fromIsoDecimal(numberAsString) {\n  return toLocalizedDigits(numberAsString.replace('.', decimalSeparator));\n} // TODO: Too many options, simplify\n\nexport function increaseNumberByStep({\n  value,\n  increment,\n  step,\n  fractionDigits\n}) {\n  const startingValue = value === '' || value == null ? '0' : value;\n  const stepAsFloat = parseFloat(step);\n  let result;\n\n  if (isNaN(stepAsFloat)) {\n    result = parseFloat(startingValue) + increment;\n  } else {\n    // ideally we'd round the value to the closest correct step, so that if say the step is '2', and the\n    // current value is '1' it would increment to '2' instead of '3', since the former would be the valid\n    // number given the step constraint, however this would significantly complicate the code, keeping\n    // it simple for now.\n    const increaseBy = increment * stepAsFloat;\n    result = parseFloat(startingValue) + increaseBy;\n  }\n\n  return result.toFixed(fractionDigits);\n}\nexport function calculateFractionDigitsFromStep(step) {\n  let calculatedFractionDigits;\n\n  if (step) {\n    const stepAsString = String(step).toLowerCase();\n\n    if (stepAsString !== 'any') {\n      // lowering the case because we're checking for exponent format as well\n      let fractionDigits = 0;\n\n      if (stepAsString.indexOf('.') >= 0 && stepAsString.indexOf('e') < 0) {\n        const fractionalPart = stepAsString.split('.')[1]; // we're parsing to account for cases where the step is\n        // '1.0', or '1.000', etc.\n\n        if (parseInt(fractionalPart, 10) > 0) {\n          fractionDigits = fractionalPart.length;\n        }\n      } else if (stepAsString.indexOf('e-') > 0) {\n        // exponent form eg. 1.5e-5\n        const splitOnExponent = stepAsString.split('e-');\n        const fractionalPart = splitOnExponent[0].split('.')[1];\n        const exponentPart = splitOnExponent[1];\n        const fractionalPartLength = fractionalPart ? fractionalPart.length : 0;\n        fractionDigits = parseInt(exponentPart, 10) + fractionalPartLength;\n      }\n\n      calculatedFractionDigits = fractionDigits;\n    }\n  }\n\n  return calculatedFractionDigits;\n}\nexport function formatNumber(numberAsString, options) {\n  if (isEmptyString(numberAsString)) {\n    return '';\n  }\n\n  let formattedValue = numberAsString;\n  let inputValue = numberAsString; // set formatter style & default options\n\n  const formatStyle = options.style;\n  const formatOptions = {\n    style: formatStyle\n  };\n  formatOptions.minimumFractionDigits = options.minimumFractionDigits;\n  formatOptions.maximumFractionDigits = options.maximumFractionDigits;\n\n  if (formatStyle === 'percent-fixed') {\n    // percent-fixed just uses percent format and divides the value by 100\n    // before passing to the library, this is to deal with the\n    // fact that percentages in salesforce are 0-100, not 0-1\n    formatOptions.style = 'percent';\n    const inputValueAsString = inputValue.toString();\n    const normalisedNumberInPercent = parseFloat(inputValue) / 100; // If the number contains fraction digits and is not in an exponent format\n\n    if (inputValueAsString.indexOf('.') > 0 && inputValueAsString.indexOf('e') < 0) {\n      // Depending on the input number, division by 100 may lead to rounding errors\n      // (e.g 0.785 / 100 is 0.007850000000000001), so we need to round back\n      // to the correct precision, that is - existing number of fractional digits\n      // plus extra 2 for division by 100.\n      inputValue = normalisedNumberInPercent.toFixed(inputValueAsString.split('.')[1].length + 2);\n    } else {\n      inputValue = normalisedNumberInPercent;\n    }\n  }\n\n  try {\n    formattedValue = numberFormat(formatOptions).format(inputValue) || '';\n  } catch (ignore) {// ignore any errors\n  }\n\n  return formattedValue;\n} // Exporting only to test, separators are only overridden in the tests\n\nexport function transformLocalizedNumberToIsoDecimal(numberAsString, separators) {\n  if (numberAsString == null || numberAsString.length === 0) {\n    return '';\n  }\n\n  const decimalSymbol = separators ? separators.decimalSeparator : decimalSeparator;\n  const groupingSymbol = separators ? separators.groupSeparator : groupingSeparator; // remove the grouping separator\n\n  let result = numberAsString.split(groupingSymbol).join('');\n\n  if (decimalSymbol !== '.') {\n    // replace the local decimal separator with a\n    result = result.replace(decimalSymbol, '.');\n  }\n\n  return expandShortcuts(addLeadingZeroIfNeeded(fromLocalizedDigits(result)));\n}\nexport function isValidNumberCharacter(character) {\n  return VALID_NUMBER_CHARACTERS_EXPRESSION.test(character);\n}\nexport function normalizeNumber(value) {\n  if (value === undefined || value === null || isNaN(value)) {\n    return '';\n  }\n\n  return String(value);\n}\nexport function hasValidNumberSymbol(value) {\n  const validSymbols = NUMBER_SYMBOLS.join('');\n  const matchSymbols = new RegExp(`[${validSymbols}]`);\n  return value.match(matchSymbols) ? true : false;\n}\nexport function hasValidNumberShortcut(value) {\n  const result = value.toLowerCase().trim();\n  const kmb = SHORTCUTS.join(''); // Cannot have two shortcuts /([kmb])/g\n\n  const matchShortcuts = new RegExp(`([${kmb}])`, 'g');\n  const shortcutMatch = result.match(matchShortcuts);\n\n  if (shortcutMatch && shortcutMatch.length > 1) {\n    return false;\n  } // Must end with 'm', 'k', 'b' and more than just a single letter\n\n\n  const matchEndsWith = new RegExp(`[${kmb}]$`);\n  const endsWithShortcut = result.match(matchEndsWith) !== null; // has 'm' / 'k' / 'b' and more than just them (ie. result of 'm' / 'k' / 'b' are not valid.\n\n  return endsWithShortcut && result.length > 1;\n} // Exported for testing only\n\nexport function expandShortcuts(isoValue) {\n  if (!hasValidNumberShortcut(isoValue)) {\n    return isoValue;\n  }\n\n  let result = isoValue.toLowerCase().trim();\n  const shortcut = result.charAt(result.length - 1); // remove the suffix\n\n  result = result.substring(0, result.length - 1);\n\n  if (isNaN(result)) {\n    return isoValue;\n  }\n\n  const parts = result.split('.');\n  let fractionDigits = 0;\n  const hasDecimalPart = parts.length > 1;\n\n  if (hasDecimalPart) {\n    fractionDigits = parts[1].length;\n  }\n\n  const exponent = SHORTCUT_FACTORS[shortcut]; // since multiplication may result in loss of precision on javascript's part,\n  // we're calculating here the number of fraction digits needed and formatting\n  // the number at that\n\n  const newFractionDigits = Math.max(0, fractionDigits - exponent);\n  return parseFloat(result * Math.pow(10, exponent)).toFixed(newFractionDigits);\n}\n\nfunction addLeadingZeroIfNeeded(result) {\n  // If the number starts with +. OR  -. OR . ; insert a 0 before the decimal separator.\n  // eg. -.2 -> -0.2\n  const decimalSeparatorLocation = result.indexOf('.');\n\n  if (decimalSeparatorLocation === 0 || decimalSeparatorLocation === 1) {\n    const firstCharacter = result.charAt(0);\n\n    if (firstCharacter === '+' || firstCharacter === '-' || firstCharacter === '.') {\n      result = result.substring(0, decimalSeparatorLocation) + '0' + result.substring(decimalSeparatorLocation);\n    }\n  }\n\n  return result;\n}","import { registerDecorators as _registerDecorators } from \"lwc\";\nimport { isSafari, isIE11, timeout } from 'lightning/utilsPrivate';\n/**\n * Purges the selection cache to the DOM.\n * @param input {HTMLInputElement}\n * @param cache {InputSelectionCache}\n */\n\nfunction restoreCacheToInput(input, cache) {\n  input.setSelectionRange(cache._selectionStartCached, cache._selectionEndCached);\n  cache.clearCache();\n}\n/**\n * This class provides a way to cache text selection in input fields.\n */\n\n\nexport class InputSelectionCache {\n  constructor() {\n    this._selectionStartCached = null;\n    this._selectionEndCached = null;\n  }\n\n  /**\n   * Updates the cached values.\n   * @param {number} start The start of the selected range\n   * @param {number} end The end of the selected range\n   * @private\n   */\n  _cacheSelectionRange(start, end) {\n    if (typeof start === 'number' && typeof end === 'number') {\n      this._selectionStartCached = start;\n      this._selectionEndCached = end;\n    }\n  }\n  /**\n   * Clears our cached selection.\n   */\n\n\n  clearCache() {\n    this._selectionStartCached = null;\n    this._selectionEndCached = null;\n  }\n  /**\n   * True, if the DOM element has selection.\n   * @param input {HTMLInputElement} The DOM element to operate on\n   */\n\n\n  hasSelection(input) {\n    return input.selectionStart !== null && // If the start and end are the same, that's not selection, it's just the cursor position.\n    input.selectionStart !== input.selectionEnd;\n  }\n  /**\n   * True, if selection has been cached.\n   */\n\n\n  isCached() {\n    return this._selectionStartCached !== null && this._selectionEndCached !== null;\n  }\n  /**\n   * Cache the current text selection for this input field.\n   * We ignore selection range of (0,0) because that indicates no selection and we don't want to restore it later.\n   * @param input {HTMLInputElement} The DOM element to operate on\n   */\n\n\n  preserve(input) {\n    if (!this.hasSelection(input) && this.isCached()) {\n      // We already have cached selection but we're asking to preserve no selection,\n      // so we must NOT overwrite our cache with no selection or we can't restore the previously selected text.\n      // This happens if the browser doesn't preserve text selection automatically in the input.\n      return;\n    } // Only update cache if there is selection.\n\n\n    if (this.hasSelection(input)) {\n      this._cacheSelectionRange(input.selectionStart, input.selectionEnd);\n    }\n  }\n  /**\n   * Restore cached selection. This may happen async, so a promise is returned.\n   * @param input {HTMLInputElement} The DOM element to operate on\n   * @returns {Promise} A promise to be resolved when the selection is restored.\n   *  If the cache was empty, the promise is resolved immediately as a no-op.\n   */\n\n\n  restore(input) {\n    // Bail early if we don't have a cached selection.\n    if (!this.isCached()) {\n      return Promise.resolve();\n    } // @W-7962838 - Safari has a browser bug where setting the selection on inputs\n    // as you focus them keeps it from scrolling into view in certain conditions.\n    // This can be worked around by setting the text selection in a new call stack immediately after the focus.\n    // https://bugs.webkit.org/show_bug.cgi?id=217350\n\n\n    if (isSafari) {\n      return timeout(0).then(() => {\n        // running async, so revalidate our inputs\n        if (this.isCached() && input) {\n          restoreCacheToInput(input, this);\n        }\n      });\n    } // W-6176985: IE11 input when set value, will move cursor to beginning.\n    // This fix is only for input type=number on IE11, and force the cursor to the end.\n\n\n    if (isIE11) {\n      const length = input.value.length;\n      input.setSelectionRange(length, length);\n      return Promise.resolve();\n    }\n\n    restoreCacheToInput(input, this);\n    return Promise.resolve();\n  }\n\n}\n\n_registerDecorators(InputSelectionCache, {\n  fields: [\"_selectionStartCached\", \"_selectionEndCached\"]\n});","// This is a library built from Globalization's repo\n// https://git.soma.salesforce.com/Globalization/address.js\n// For new versions, copy AddressFormat.js from node_modules/address.js/dist/AddressFormat.js\n// And add \"export { address };\" at the end.\n\n/* eslint-disable */\nvar data = {\n  AE: {\n    fmt: '%A%n%S%n%K',\n    require: 'AS',\n    input: 'ASK'\n  },\n  AL: {\n    fmt: '%A%n%Z%n%C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  EC: {\n    _ref: 'AL'\n  },\n  MU: {\n    _ref: 'AL'\n  },\n  OM: {\n    _ref: 'AL'\n  },\n  AM: {\n    fmt: '%A%n%Z%n%C%n%S%n%K',\n    require: 'AZCS',\n    input: 'AZK'\n  },\n  AR: {\n    fmt: '%A%n%Z %C%n%S%n%K',\n    require: 'AZCS',\n    input: 'AZCSK'\n  },\n  CL: {\n    _ref: 'AR'\n  },\n  CV: {\n    _ref: 'AR'\n  },\n  MY: {\n    _ref: 'AR'\n  },\n  UZ: {\n    _ref: 'AR'\n  },\n  AT: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  BA: {\n    _ref: 'AT'\n  },\n  BG: {\n    _ref: 'AT'\n  },\n  CH: {\n    _ref: 'AT'\n  },\n  DE: {\n    _ref: 'AT'\n  },\n  DK: {\n    _ref: 'AT'\n  },\n  DO: {\n    _ref: 'AT'\n  },\n  DZ: {\n    _ref: 'AT'\n  },\n  EE: {\n    _ref: 'AT'\n  },\n  ET: {\n    _ref: 'AT'\n  },\n  FR: {\n    _ref: 'AT'\n  },\n  GE: {\n    _ref: 'AT'\n  },\n  GR: {\n    _ref: 'AT'\n  },\n  IL: {\n    _ref: 'AT'\n  },\n  KW: {\n    _ref: 'AT'\n  },\n  LA: {\n    _ref: 'AT'\n  },\n  LR: {\n    _ref: 'AT'\n  },\n  IS: {\n    _ref: 'AT'\n  },\n  MA: {\n    _ref: 'AT'\n  },\n  MG: {\n    _ref: 'AT'\n  },\n  MK: {\n    _ref: 'AT'\n  },\n  MZ: {\n    _ref: 'AT'\n  },\n  NL: {\n    _ref: 'AT'\n  },\n  NO: {\n    _ref: 'AT'\n  },\n  PL: {\n    _ref: 'AT'\n  },\n  PT: {\n    _ref: 'AT'\n  },\n  PY: {\n    _ref: 'AT'\n  },\n  RO: {\n    _ref: 'AT'\n  },\n  RS: {\n    _ref: 'AT'\n  },\n  SK: {\n    _ref: 'AT'\n  },\n  TJ: {\n    _ref: 'AT'\n  },\n  TN: {\n    _ref: 'AT'\n  },\n  TZ: {\n    _ref: 'AT'\n  },\n  WF: {\n    _ref: 'AT'\n  },\n  AU: {\n    fmt: '%A%n%C %S %Z%n%K',\n    require: 'ACSZ',\n    input: 'ACSZK'\n  },\n  CA: {\n    _ref: 'AU'\n  },\n  AZ: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  AF: {\n    fmt: '%A%n%C%n%Z%n%K',\n    require: 'ACZ',\n    input: 'ACZK'\n  },\n  FK: {\n    _ref: 'AF'\n  },\n  GB: {\n    fmt: '%A%n%C%n%S%n%Z%n%K',\n    require: 'ACZ',\n    input: 'ACSZK'\n  },\n  KE: {\n    _ref: 'AF'\n  },\n  LK: {\n    _ref: 'AF'\n  },\n  ZA: {\n    _ref: 'AF'\n  },\n  SH: {\n    _ref: 'AF'\n  },\n  SZ: {\n    _ref: 'AF'\n  },\n  US: {\n    fmt: '%A%n%C, %S %Z%n%K',\n    require: 'ACSZ',\n    input: 'ACSZK'\n  },\n  BB: {\n    _ref: 'US'\n  },\n  BS: {\n    _ref: 'US'\n  },\n  SO: {\n    _ref: 'US'\n  },\n  ES: {\n    fmt: '%A%n%Z %C %S%n%K',\n    require: 'AZCS',\n    input: 'AZCSK'\n  },\n  IT: {\n    _ref: 'ES'\n  },\n  UY: {\n    _ref: 'ES'\n  },\n  ID: {\n    fmt: '%A%n%C%n%S %Z%n%K',\n    require: 'ACSZ',\n    input: 'ACSZK'\n  },\n  IE: {\n    _ref: 'ID'\n  },\n  TH: {\n    _ref: 'ID'\n  },\n  VN: {\n    _ref: 'ID'\n  },\n  HU: {\n    fmt: '%C%n%A%n%Z%n%K',\n    require: 'CAZ',\n    input: 'CAZK'\n  },\n  BH: {\n    fmt: '%A%n%C %Z%n%K',\n    require: 'ACZ',\n    input: 'ACZK'\n  },\n  BM: {\n    _ref: 'BH'\n  },\n  BN: {\n    _ref: 'BH'\n  },\n  BT: {\n    _ref: 'BH'\n  },\n  KH: {\n    _ref: 'BH'\n  },\n  LB: {\n    _ref: 'BH'\n  },\n  JO: {\n    _ref: 'BH'\n  },\n  MT: {\n    _ref: 'BH'\n  },\n  NP: {\n    _ref: 'BH'\n  },\n  NZ: {\n    _ref: 'BH'\n  },\n  SA: {\n    _ref: 'BH'\n  },\n  BD: {\n    fmt: '%A%n%C - %Z%n%K',\n    require: 'ACZ',\n    input: 'ACZK'\n  },\n  BR: {\n    fmt: '%A%n%C-%S%n%Z%n%K',\n    require: 'ACSZ',\n    input: 'ACSZK'\n  },\n  CN: {\n    fmt: '%K%n%S %C%n%A%n%Z',\n    require: 'CAZ',\n    input: 'KSCAZ'\n  },\n  HK: {\n    fmt: '%K%S%C%n%A%n%Z',\n    require: 'CA',\n    input: 'KSCAZ'\n  },\n  CO: {\n    fmt: '%A%n%C, %S, %Z%n%K',\n    require: 'ACSZ',\n    input: 'ACSZK'\n  },\n  CR: {\n    fmt: '%A%n%S, %C%n%Z%n%K',\n    require: 'ACSZ',\n    input: 'ASCZK'\n  },\n  EG: {\n    fmt: '%A%n%C%n%S%n%Z%n%K',\n    require: 'ACSZ',\n    input: 'ACSZK'\n  },\n  RU: {\n    _ref: 'EG'\n  },\n  UA: {\n    _ref: 'EG'\n  },\n  FI: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  GT: {\n    fmt: '%A%n%Z-%C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  HN: {\n    fmt: '%A%n%C, %S%n%Z%n%K',\n    require: 'ACSZ',\n    input: 'ACSZK'\n  },\n  IQ: {\n    _ref: 'HN'\n  },\n  HR: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  HT: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  IN: {\n    fmt: '%A%n%C %Z%n%S%n%K',\n    require: 'ACZS',\n    input: 'ACZSK'\n  },\n  NG: {\n    _ref: 'IN'\n  },\n  PE: {\n    _ref: 'IN'\n  },\n  IR: {\n    fmt: '%S%n%C%n%A%n%Z%n%K',\n    require: 'SCAZ',\n    input: 'SCAZK'\n  },\n  JM: {\n    fmt: '%A%n%C%n%S%n%K',\n    require: 'ACS',\n    input: 'ACSK'\n  },\n  PA: {\n    _ref: 'JM'\n  },\n  SC: {\n    _ref: 'JM'\n  },\n  SR: {\n    _ref: 'JM'\n  },\n  JP: {\n    // Escape non-ASCII character. Aura component test cannot parse non-ASCII string properly.\n    fmt: '%K%n' + String.fromCharCode(12306) + '%Z%n%S %C%n%A',\n    require: 'ZCA',\n    input: 'KZSCA'\n  },\n  EN_JP: {\n    fmt: '%A%n%C %S%n%Z %K',\n    require: 'ACSZ',\n    input: 'ACSZK'\n  },\n  KG: {\n    fmt: '%Z %C%n%A%n%S%n%K',\n    require: 'ZCA',\n    input: 'ZCAK'\n  },\n  KR: {\n    fmt: '%S %C%n%A%n%Z%n%K',\n    require: 'SCAZ',\n    input: 'SCAZK'\n  },\n  KY: {\n    fmt: '%A%n%S %Z%n%K',\n    require: 'ASZ',\n    input: 'ASZK'\n  },\n  KZ: {\n    fmt: '%Z%n%S%n%C%n%A%n%K',\n    require: 'ZSCA',\n    input: 'ZSCAK'\n  },\n  LT: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  LV: {\n    fmt: '%A%n%C, %Z%n%K',\n    require: 'ACZ',\n    input: 'ACZK'\n  },\n  MM: {\n    _ref: 'LV'\n  },\n  MC: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  MD: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  MW: {\n    fmt: '%A%n%C%n%K',\n    require: 'AC',\n    input: 'ACK'\n  },\n  MX: {\n    fmt: '%A%n%Z %C, %S%n%K',\n    require: 'AZCS',\n    input: 'AZCSK'\n  },\n  NI: {\n    fmt: '%A%n%Z%n%C, %S%n%K',\n    require: 'AZCS',\n    input: 'AZCSK'\n  },\n  PG: {\n    fmt: '%A%n%C %Z %S%n%K',\n    require: 'ACZS',\n    input: 'ACZSK'\n  },\n  PH: {\n    fmt: '%A, %C%n%Z %S%n%K',\n    require: 'ACZS',\n    input: 'ACZSK'\n  },\n  PK: {\n    fmt: '%A%n%C-%Z%n%K',\n    require: 'ACZ',\n    input: 'ACZK'\n  },\n  PR: {\n    fmt: '%A%n%C %Z%n%K',\n    require: 'ACZ',\n    input: 'ACZK'\n  },\n  SE: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  SG: {\n    fmt: '%A%n%C %Z%n%S%n%K',\n    require: 'AZ',\n    input: 'AZK'\n  },\n  SI: {\n    fmt: '%A%n%Z %C%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  SV: {\n    fmt: '%A%n%Z-%C%n%S%n%K',\n    require: 'AZCS',\n    input: 'AZCSK'\n  },\n  TR: {\n    fmt: '%A%n%Z %C/%S%n%K',\n    require: 'AZC',\n    input: 'AZCK'\n  },\n  TW: {\n    fmt: '%K%n%Z%n%S %C%n%A',\n    require: 'ZSCA',\n    input: 'KZSCA'\n  },\n  VE: {\n    fmt: '%A%n%C %Z, %S%n%K',\n    require: 'ACZS',\n    input: 'ACZSK'\n  }\n};\nvar languageCodeToCountry = {\n  languageCode: {\n    ar: 'AE',\n    af: 'ZA',\n    bg: 'BG',\n    bn: 'BN',\n    bs: 'BA',\n    ca: 'ES',\n    cs: 'CZ',\n    cy: 'GB',\n    da: 'DK',\n    de: 'DE',\n    el: 'GR',\n    es: 'ES',\n    et: 'ET',\n    eu: 'ES',\n    fi: 'FI',\n    fr: 'FR',\n    ga: 'IE',\n    gu: 'IN',\n    hi: 'IN',\n    hr: 'HR',\n    hu: 'HU',\n    hy: 'HY',\n    in: 'ID',\n    is: 'IS',\n    it: 'IT',\n    iw: 'IL',\n    ja: 'JP',\n    ka: 'GE',\n    kn: 'IN',\n    ko: 'KR',\n    lb: 'LU',\n    lt: 'IT',\n    lv: 'LV',\n    mk: 'MK',\n    ml: 'IN',\n    mr: 'IN',\n    ms: 'MY',\n    mt: 'MT',\n    nl: 'NL',\n    no: 'NO',\n    pl: 'PL',\n    pt: 'PT',\n    rm: 'DE',\n    ro: 'RO',\n    ru: 'RU',\n    sh: 'BA',\n    sk: 'SK',\n    sl: 'SL',\n    sq: 'SQ',\n    sr: 'RS',\n    sv: 'SE',\n    sw: 'ZA',\n    ta: 'IN',\n    te: 'IN',\n    th: 'TH',\n    tl: 'PH',\n    tr: 'TR',\n    uk: 'UK',\n    ur: 'IN',\n    vi: 'VN',\n    xh: 'ZA',\n    zh: 'CN',\n    zu: 'ZA'\n  }\n};\n/**\n * Define address format patterns.\n */\n\nvar AddressFormatPattern = Object.freeze({\n  /**\n   *\n   * N: Name (The formatting of names for this field is outside of the scope of the address elements.)\n   * O: Organization\n   * A: Address Lines (2 or 3 lines address)\n   * D: District (Sub-locality): smaller than a city, and could be a neighborhood, suburb or dependent locality.\n   * C: City (Locality)\n   * S: State (Administrative Area)\n   * K: Country\n   * Z: ZIP Code / Postal Code\n   * X: Sorting code, for example, CEDEX as used in France\n   * n: newline\n   */\n  A: Symbol('Address Lines'),\n  C: Symbol('City'),\n  S: Symbol('State'),\n  K: Symbol('Country'),\n  Z: Symbol('Zip Code'),\n  n: Symbol('New Line'),\n  fromPlaceHolder: function fromPlaceHolder(placeHolder) {\n    switch (placeHolder) {\n      case 'A':\n        return AddressFormatPattern.A;\n\n      case 'C':\n        return AddressFormatPattern.C;\n\n      case 'S':\n        return AddressFormatPattern.S;\n\n      case 'K':\n        return AddressFormatPattern.K;\n\n      case 'Z':\n        return AddressFormatPattern.Z;\n\n      case 'n':\n        return AddressFormatPattern.n;\n    }\n\n    return null;\n  },\n  getPlaceHolder: function getPlaceHolder(pattern) {\n    switch (pattern) {\n      case AddressFormatPattern.A:\n        return 'A';\n\n      case AddressFormatPattern.C:\n        return 'C';\n\n      case AddressFormatPattern.S:\n        return 'S';\n\n      case AddressFormatPattern.K:\n        return 'K';\n\n      case AddressFormatPattern.Z:\n        return 'Z';\n\n      case AddressFormatPattern.n:\n        return 'n';\n    }\n\n    return null;\n  },\n  getData: function getData(pattern, data) {\n    if (data) {\n      switch (pattern) {\n        case AddressFormatPattern.A:\n          return data.address;\n\n        case AddressFormatPattern.C:\n          return data.city;\n\n        case AddressFormatPattern.S:\n          return data.state;\n\n        case AddressFormatPattern.K:\n          return data.country;\n\n        case AddressFormatPattern.Z:\n          return data.zipCode;\n\n        case AddressFormatPattern.n:\n          return data.newLine;\n      }\n    }\n\n    return null;\n  }\n});\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n/**\n * Address token types enum\n *\n * @private\n */\n\n\nvar AddressTokenTypes = Object.freeze({\n  DATA: Symbol('data'),\n  STRING: Symbol('string'),\n  NEWLINE: Symbol('newline'),\n  GROUP: Symbol('group')\n});\n/**\n * AddressToken class\n *\n * @private\n */\n\nvar AddressToken = function () {\n  /**\n   *\n   * @param {AddressTokenTypes} type\n   * @param {string} string\n   * @param {*} pattern\n   */\n  function AddressToken(type, string, pattern) {\n    classCallCheck(this, AddressToken);\n    this.type = type;\n    this.string = string;\n    this.pattern = pattern;\n  }\n  /**\n   * Construct a string type token\n   *\n   * @param {string} string String\n   * @return {AddressToken} Address Token\n   */\n\n\n  createClass(AddressToken, null, [{\n    key: 'string',\n    value: function string(_string) {\n      return new AddressToken(AddressTokenTypes.STRING, _string);\n    }\n    /**\n     * Construct a data type token\n     *\n     * @param {pattern} pattern Address Format Pattern\n     * @return {AddressToken} Address Token\n     */\n\n  }, {\n    key: 'data',\n    value: function data(pattern) {\n      return new AddressToken(AddressTokenTypes.DATA, undefined, pattern);\n    }\n    /**\n     * Construct a new line type token\n     *\n     * @return {AddressToken} Address Token\n     */\n\n  }, {\n    key: 'newLine',\n    value: function newLine() {\n      return new AddressToken(AddressTokenTypes.NEWLINE);\n    }\n  }]);\n  return AddressToken;\n}();\n/**\n * TokenizerState class\n *\n * @private\n */\n\n\nvar TokenizerState =\n/**\n * Constructor\n *\n * @param {string} pattern\n * @param {int} start\n */\nfunction TokenizerState(pattern, start) {\n  classCallCheck(this, TokenizerState);\n  this.pattern = pattern;\n  this.start = start;\n};\n/**\n * Tokenize string pattern to AddressToken array\n *\n * @param {TokenizerState} state\n * @param {AddressToken[]} tokens\n * @return {TokenizerState} Tokenizer state\n *\n * @private\n */\n\n\nfunction tokenize(state, tokens) {\n  var nextIndex = state.start;\n\n  if (state.pattern) {\n    var len = state.pattern.length;\n\n    while (state.start < len) {\n      nextIndex = state.pattern.indexOf('%', nextIndex);\n\n      if (nextIndex >= 0 && nextIndex + 1 < len) {\n        var placeHolder = state.pattern.substring(nextIndex + 1, nextIndex + 2);\n\n        switch (placeHolder) {\n          case 'n':\n            {\n              if (nextIndex - state.start > 0) {\n                tokens.push(AddressToken.string(state.pattern.substring(state.start, nextIndex)));\n              }\n\n              tokens.push(AddressToken.newLine());\n              state.start = nextIndex + 2;\n              nextIndex = state.start;\n              break;\n            }\n\n          default:\n            {\n              var p = AddressFormatPattern.fromPlaceHolder(placeHolder);\n\n              if (p) {\n                if (nextIndex - state.start > 0) {\n                  tokens.push(AddressToken.string(state.pattern.substring(state.start, nextIndex)));\n                }\n\n                tokens.push(AddressToken.data(p));\n                state.start = nextIndex + 2;\n                nextIndex = state.start;\n              } else {\n                state.start = nextIndex + 2;\n                nextIndex = state.start;\n              }\n\n              break;\n            }\n        }\n      } else {\n        if (state.start < len) {\n          tokens.push(AddressToken.string(state.pattern.substring(state.start)));\n        }\n\n        state.start = len;\n      }\n    }\n  }\n\n  return state;\n}\n/**\n * Format line from tokens\n *\n * @param {*} tokens\n * @param {*} data\n * @param {*} ignoreEmptyLines\n * @param {*} firstIndex\n * @param {*} lastIndex\n * @return {string} Formatted line\n *\n * @private\n */\n\n\nfunction formatLineTokens(tokens, data, ignoreEmptyLines, firstIndex, lastIndex) {\n  var parts = [];\n\n  for (var index = firstIndex; index <= lastIndex; index++) {\n    var token = tokens[index];\n\n    if (!token) {\n      continue;\n    } else if (token.type == AddressTokenTypes.DATA) {\n      // Consume all subsequent data if available\n      var dataBuffer = '';\n      var lastDataIndex = index;\n\n      for (var dataIndex = index; dataIndex <= lastIndex; dataIndex++) {\n        var dataToken = tokens[dataIndex];\n\n        if (!dataToken || dataToken.type != AddressTokenTypes.DATA) {\n          break;\n        }\n\n        var fieldData = AddressFormatPattern.getData(dataToken.pattern, data);\n\n        if (fieldData) {\n          dataBuffer += fieldData;\n          lastDataIndex = dataIndex;\n        }\n      }\n\n      var hasData = dataBuffer && dataBuffer.length > 0; // Output previous string only if there is data before it,\n      // or if it is the first on the line\n\n      var hasPreviousData = false;\n\n      if (index - 1 >= firstIndex) {\n        var stringToken = tokens[index - 1];\n\n        if (stringToken && stringToken.type == AddressTokenTypes.STRING && stringToken.string) {\n          for (var prevIndex = index - 2; prevIndex >= firstIndex; prevIndex--) {\n            var prevToken = tokens[prevIndex];\n\n            if (prevToken && prevToken.type == AddressTokenTypes.DATA) {\n              var _fieldData = AddressFormatPattern.getData(prevToken.pattern, data);\n\n              if (_fieldData) {\n                hasPreviousData = true;\n                break;\n              }\n            } else if (prevToken && prevToken.type == AddressTokenTypes.STRING) {\n              // ie. for \"%C, %S %Z\" without S -> \"City, 95100\"\n              // Comment this if we want \"City 95100\" instead\n              // (use the separator between S Z instead of C S)\n              stringToken = prevToken;\n            }\n          }\n\n          if (!ignoreEmptyLines || hasPreviousData && hasData || index - 1 == firstIndex && hasData) {\n            parts.push(stringToken.string);\n          }\n        }\n      }\n\n      if (hasData) {\n        parts.push(dataBuffer);\n      }\n\n      index = lastDataIndex; // Output next string only if it is the last\n      // and there is previous data before it\n\n      if (index + 1 == lastIndex) {\n        var _stringToken = tokens[index + 1];\n\n        if (_stringToken && _stringToken.type == AddressTokenTypes.STRING && _stringToken.string) {\n          if (!ignoreEmptyLines || hasData || hasPreviousData) {\n            parts.push(_stringToken.string);\n          }\n        } // Consume the last string token\n\n\n        index = index + 1;\n      }\n    } else {// We should not get here\n    }\n  }\n\n  return parts.join('').trim();\n}\n/**\n * Tokenize address format pattern.\n *\n * @param {AddressToken[]} tokens\n * @param {*} data\n * @param {string} lineBreak\n * @param {boolean} ignoreEmptyLines\n * @return {string} Formatted Address\n *\n * @private\n */\n\n\nfunction formatTokens(tokens, data, lineBreak, ignoreEmptyLines) {\n  var lines = [];\n  var lineIndex = -1;\n\n  for (var index = 0; index < tokens.length; index++) {\n    var doFormat = false;\n    var endWithNewLine = false;\n    var token = tokens[index];\n\n    switch (token.type) {\n      case AddressTokenTypes.NEWLINE:\n        {\n          if (lineIndex >= 0) {\n            doFormat = true;\n            endWithNewLine = true;\n          } else if (!ignoreEmptyLines) {\n            lines.push(''); // Empty line\n            // If the pattern ends with a newline\n\n            if (index + 1 == tokens.length) {\n              lines.push(''); // Empty line\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          lineIndex = lineIndex < 0 ? index : lineIndex;\n          doFormat = index + 1 == tokens.length ? true : doFormat;\n          break;\n        }\n    }\n\n    if (doFormat) {\n      var line = formatLineTokens(tokens, data, ignoreEmptyLines, lineIndex, endWithNewLine ? index - 1 : index);\n\n      if (!ignoreEmptyLines || line) {\n        lines.push(line);\n      } // If line ends with a newline, and it is the last line on pattern\n\n\n      if (!ignoreEmptyLines && endWithNewLine && index + 1 == tokens.length) {\n        lines.push('');\n      }\n\n      lineIndex = -1;\n    }\n  }\n\n  return lines.join(lineBreak);\n}\n/**\n * Format address data.\n *\n * @param {*} data Address data being processed.\n * @param {string} pattern Address format pattern.\n * @param {string} lineBreak Line break string to use\n * @param {boolean} ignoreEmptyLines Ignore lines that has no or empty data to replace.\n * @return {string} Formatted address.\n */\n\n\nfunction format(data, pattern, lineBreak, ignoreEmptyLines) {\n  // TODO: support escapeHtml to match Java class feature parity\n  ignoreEmptyLines = ignoreEmptyLines === false ? false : true; // Defaults to false\n\n  lineBreak = lineBreak || '\\n'; // Defaults to <br/> or lf\n\n  var tokens = [];\n  tokenize(new TokenizerState(pattern, 0), tokens);\n  return formatTokens(tokens, data, lineBreak, ignoreEmptyLines);\n}\n\nvar addressFormatter = {\n  format: format\n};\nvar CJK_COUNTRIES = ['CN', 'HK', 'TW', 'JP', 'KR', 'KP'];\nvar CJK_LANGUAGES = ['zh', 'ja', 'ko'];\nvar address = {\n  /**\n   * Gets the globalization for the specified country code.\n   * A: Address Lines (2 or 3 lines address)\n   * C: City (Locality)\n   * S: State (Administrative Area)\n   * K: Country\n   * Z: ZIP Code / Postal Code\n   * n: newline\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @return {{fmt: string, input: string, require: string}} Format Data\n   */\n  getAddressInfoForCountry: function getAddressInfoForCountry(langCode, countryCode) {\n    var code = this.getCountryFromLocale(langCode, countryCode);\n\n    if (data[code]) {\n      // Double check.\n      var cloneAddressRep = Object.freeze(Object.assign({}, data[code]));\n      return Object.freeze({\n        address: cloneAddressRep\n      });\n    }\n\n    return {};\n  },\n\n  /**\n   * Get the format pattern.\n   * A: Address Lines (2 or 3 lines address)\n   * C: City (Locality)\n   * S: State (Administrative Area)\n   * K: Country\n   * Z: ZIP Code / Postal Code\n   * n: newline\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @return {string} Address Format Pattern\n   */\n  getAddressFormat: function getAddressFormat(langCode, countryCode) {\n    var code = this.getCountryFromLocale(langCode, countryCode);\n\n    if (data[code]) {\n      // Double check.\n      return data[code].fmt;\n    }\n\n    return '';\n  },\n\n  /**\n   * Get the input order pattern.\n   * A: Address Lines (2 or 3 lines address)\n   * C: City (Locality)\n   * S: State (Administrative Area)\n   * K: Country\n   * Z: ZIP Code / Postal Code\n   * n: newline\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @return {string} Input Order\n   */\n  getAddressInputOrder: function getAddressInputOrder(langCode, countryCode) {\n    // A special case to deal with en_HK locale. We want to use US like\n    // format for en_HK.\n    // See W-4718344\n    if (langCode && langCode.toLowerCase() == 'en' && countryCode && countryCode.toUpperCase() == 'HK') {\n      langCode = 'en';\n      countryCode = 'US';\n    }\n\n    var code = this.getCountryFromLocale(langCode, countryCode);\n\n    if (data[code]) {\n      // Double check.\n      return data[code].input;\n    }\n\n    return '';\n  },\n\n  /**\n   * Get the input order pattern for all fields.\n   * A: Address Lines (2 or 3 lines address)\n   * C: City (Locality)\n   * S: State (Administrative Area)\n   * K: Country\n   * Z: ZIP Code / Postal Code\n   * n: newline\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @return {string} Input Order\n   */\n  getAddressInputOrderAllField: function getAddressInputOrderAllField(langCode, countryCode) {\n    // A special case to deal with en_HK locale. We want to use US like\n    // format for en_HK.\n    // See W-4718344\n    if (langCode && langCode.toLowerCase() == 'en' && countryCode && countryCode.toUpperCase() == 'HK') {\n      langCode = 'en';\n      countryCode = 'US';\n    }\n\n    var code = this.getCountryFromLocale(langCode, countryCode);\n\n    if (data[code]) {\n      // Double check.\n      var input = data[code].input; // Add missing patterns.\n\n      if (input.indexOf('S') === -1) {\n        input = input.replace('K', 'SK');\n      }\n\n      if (input.indexOf('C') === -1) {\n        input = input.replace('S', 'CS');\n      }\n\n      if (input.indexOf('Z') === -1) {\n        input = input.replace('C', 'ZC');\n      }\n\n      return input;\n    }\n\n    return '';\n  },\n\n  /**\n   * Get required fields.\n   * A: Address Lines (2 or 3 lines address)\n   * C: City (Locality)\n   * S: State (Administrative Area)\n   * K: Country\n   * Z: ZIP Code / Postal Code\n   * n: newline\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @return {string} Required Fields\n   */\n  getAddressRequireFields: function getAddressRequireFields(langCode, countryCode) {\n    var code = this.getCountryFromLocale(langCode, countryCode);\n\n    if (data[code]) {\n      // Double check.\n      return data[code].require;\n    }\n\n    return '';\n  },\n\n  /**\n   * Format a address values for given language code and country code with specified line break.\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @param {{address: string, country: string, city: string, state: string, zipCode: string}} values Actual Address Data\n   * @param {string} lineBreak Line Break\n   * @return {string} Formatted Address\n   */\n  formatAddressAllFields: function formatAddressAllFields(langCode, countryCode, values, lineBreak) {\n    var code = this.getCountryFromLocale(langCode, countryCode, values);\n\n    if (data[code]) {\n      // Double check.\n      var pattern = data[code].fmt; // Some countries don't have City, State or ZIP code. We don't want to\n      // lose those data from formatted string.\n\n      if (values.zipCode && pattern.indexOf('%Z') === -1) {\n        pattern = pattern.replace('%K', '%Z %K');\n      }\n\n      if (values.city && pattern.indexOf('%C') === -1) {\n        pattern = pattern.replace('%K', '%C %K');\n      }\n\n      if (values.state && pattern.indexOf('%S') === -1) {\n        pattern = pattern.replace('%K', '%S %K');\n      }\n\n      return this.buildAddressLines(pattern, values, lineBreak, true);\n    }\n\n    return '';\n  },\n\n  /**\n   * Format a address values for given language code and country code with specified line break.\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @param {{address: string, country: string, city: string, state: string, zipCode: string}} values Actual Address Data\n   * @param {string} lineBreak Line Break\n   * @return {string} Formatted Address\n   */\n  formatAddress: function formatAddress(langCode, countryCode, values, lineBreak) {\n    var code = this.getCountryFromLocale(langCode, countryCode, values);\n\n    if (data[code]) {\n      // Double check.\n      return this.buildAddressLines(data[code].fmt, values, lineBreak, true);\n    }\n\n    return '';\n  },\n\n  /**\n   * Creates an array of address lines given the format and the values to use.\n   *\n   * @param {string} pattern\n   * @param {{address: string, country: string, city: string, state: string, zipCode: string}} values\n   * @param {string} lineBreak\n   * @param {string} ignoreEmptyLines\n   * @return {string} the text for use in the address\n   */\n  buildAddressLines: function buildAddressLines(pattern, values, lineBreak, ignoreEmptyLines) {\n    return addressFormatter.format(values, pattern, lineBreak, ignoreEmptyLines);\n  },\n\n  /**\n   * Resolve the reference by tracing down the _ref value.\n   * @param {*} data Address Format Data\n   * @param {string} countryCode Country Code\n   * @return {*} Referenced Address Format Data\n   */\n  followReferences: function followReferences(data$$1, countryCode) {\n    if (data$$1[countryCode] && data$$1[countryCode]._ref) {\n      return this.followReferences(data$$1, data$$1[countryCode]._ref);\n    }\n\n    return countryCode;\n  },\n\n  /**\n   * Check strings for Han characters\n   *\n   * @param {...string} values String values to check against\n   * @return {boolean} true if any of string values contain Han script character\n   */\n  containsHanScript: function containsHanScript() {\n    for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n\n    if (!values || !Array.isArray(values)) return false;\n    return values.some(function (value) {\n      if (!value) return false; // Javascript regex do not work with surrogate pairs so String#match is unusable with supplemental ranges.\n      // Iterating a string returns a char that contains one codepoint.\n      // Surrogate pairs will be returned as a pair.\n      // Unicode block ranges: @see http://www.unicode.org/Public/UCD/latest/ucd/Blocks.txt\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = value[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var singleChar = _step.value;\n          var codePoint = singleChar.codePointAt(0); // Thank you ES2015\n\n          if (0x2e80 <= codePoint && codePoint <= 0x2eff || // CJK Radicals Supplement\n          0x3300 <= codePoint && codePoint <= 0x33ff || // CJK Compatibility\n          0xfe30 <= codePoint && codePoint <= 0xfe4f || // CJK Compatibility Forms\n          0xf900 <= codePoint && codePoint <= 0xfaff || // CJK Compatibility Ideographs\n          0x2f800 <= codePoint && codePoint <= 0x2fa1f || // CJK Compatibility Ideographs Supplement\n          0x3000 <= codePoint && codePoint <= 0x303f || // CJK Symbols and Punctuation\n          0x4e00 <= codePoint && codePoint <= 0x9fff || // CJK Unified Ideographs\n          0x3400 <= codePoint && codePoint <= 0x4dbf || // CJK Unified Ideographs Extension A\n          0x20000 <= codePoint && codePoint <= 0x2a6df || // CJK Unified Ideographs Extension B\n          0x2a700 <= codePoint && codePoint <= 0x2b73f || // CJK Unified Ideographs Extension C\n          0x2b740 <= codePoint && codePoint <= 0x2b81f || // CJK Unified Ideographs Extension D\n          0x2b820 <= codePoint && codePoint <= 0x2ceaf || // CJK Unified Ideographs Extension E // Not on core\n          0x2ceb0 <= codePoint && codePoint <= 0x2ebef || // CJK Unified Ideographs Extension F // Not on core\n          0x3200 <= codePoint && codePoint <= 0x32ff || // Enclosed CJK Letters and Months\n          0x31c0 <= codePoint && codePoint <= 0x31ef || // CJK Strokes\n          // Chinese\n          0x3100 <= codePoint && codePoint <= 0x312f || // Bopomofo\n          0x31a0 <= codePoint && codePoint <= 0x31bf || // Bopomofo Extended\n          0x2f00 <= codePoint && codePoint <= 0x2fdf || // Kangxi Radicals\n          0x2ff0 <= codePoint && codePoint <= 0x2fff || // Ideographic Description Characters\n          // Japanese\n          0xff00 <= codePoint && codePoint <= 0xffef || // Halfwidth and Fullwidth Forms\n          0x3040 <= codePoint && codePoint <= 0x309f || // Hiragana\n          0x30a0 <= codePoint && codePoint <= 0x30ff || // Katakana\n          0x31f0 <= codePoint && codePoint <= 0x31ff || // Katakana Phonetic Extensions\n          0x1b000 <= codePoint && codePoint <= 0x1b0ff || // Kana Supplement\n          0x1b100 <= codePoint && codePoint <= 0x1b12f || // Kana Extended-A // Not on core\n          // Korean\n          0x1100 <= codePoint && codePoint <= 0x11ff || // Hangul Jamo\n          0xac00 <= codePoint && codePoint <= 0xd7af || // Hangul Syllables\n          0x3130 <= codePoint && codePoint <= 0x318f || // Hangul Compatibility Jamo\n          0xa960 <= codePoint && codePoint <= 0xa97f || // Hangul Jamo Extended-A\n          0xd7b0 <= codePoint && codePoint <= 0xd7ff // Hangul Jamo Extended-B\n          ) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return false;\n    });\n  },\n\n  /**\n   * Returns the address code (country code) for given locale and data.\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @param {*} values Address Data\n   * @return {string} Address Code\n   */\n  getCountryFromLocale: function getCountryFromLocale(langCode, countryCode, values) {\n    if (values) {\n      var isCJK = !countryCode && CJK_LANGUAGES.indexOf(langCode.toLowerCase()) >= 0 || countryCode && CJK_COUNTRIES.indexOf(countryCode.toUpperCase()) >= 0;\n      var isJA = !countryCode && 'ja' == langCode.toLowerCase() || countryCode && 'JP' == countryCode.toUpperCase(); // English format (ja_en_JP) is only used when all fields do not contain CJK characters\n\n      if (!(isJA && this.containsHanScript(values.address, values.city, values.state, values.country)) && isCJK && !this.containsHanScript(values.address)) {\n        return this.getCountryFromLocale(langCode, 'EN_' + countryCode);\n      }\n    }\n\n    var country = countryCode; // Address format should be always associated to a COUNTRY.\n    // If country part is empty, we need to map language to a\n    // certain country. For example, \"de\" -> \"DE\".\n\n    if (!countryCode && languageCodeToCountry.languageCode[langCode]) {\n      country = languageCodeToCountry.languageCode[langCode];\n    } // Trace the real data from country reference.\n\n\n    country = this.followReferences(data, country);\n\n    if (!country || !data[country]) {\n      return 'US'; // Always fall back to US format.\n    }\n\n    return country;\n  },\n\n  /**\n   * Get fall back country code.\n   *\n   * @param {string} langCode Language Code\n   * @param {string} countryCode Country Code\n   * @param {*} address Address Data\n   * @return {string} Address Code\n   *\n   * @deprecated Use getCountryFromLocale instead\n   */\n  getFallback: function getFallback(langCode, countryCode, address) {\n    return this.getCountryFromLocale(langCode, countryCode);\n  }\n};\nexport { address };","const FORMATTING_OPTS = ['weekday', 'year', 'month', 'day', 'hour', 'minute', 'second', 'era'];\nconst FORMAT_MAP = {\n  weekday: {\n    short: 'EEE, ',\n    narrow: 'EEE, ',\n    long: 'EEEE, '\n  },\n  month: {\n    short: 'MMM ',\n    narrow: 'MMM ',\n    numeric: 'MMM ',\n    '2-digit': 'MMM ',\n    long: 'MMMM '\n  },\n  day: {\n    numeric: 'd, ',\n    '2-digit': 'dd, '\n  },\n  year: {\n    numeric: 'yyyy ',\n    '2-digit': 'yy '\n  },\n  hour: {\n    numeric12: 'h',\n    numeric24: 'H',\n    '2-digit12': 'hh',\n    '2-digit24': 'HH'\n  },\n  minute: {\n    numeric: 'mm',\n    '2-digit': 'mm'\n  },\n  second: {\n    numeric: 'ss',\n    '2-digit': 'ss'\n  },\n  timeZoneName: {\n    short: '[GMT]Z',\n    long: '[GMT]Z'\n  }\n};\nconst SEPARATORS = [',', ' ', ':'];\n\nfunction getWeekDayPart(format, options) {\n  const weekdayOptionValue = options.weekday;\n\n  if (FORMAT_MAP.weekday[weekdayOptionValue] !== undefined) {\n    format.push(FORMAT_MAP.weekday[weekdayOptionValue]);\n  }\n}\n\nfunction getMonthPart(format, options) {\n  const monthOptionValue = options.month;\n\n  if (FORMAT_MAP.month[monthOptionValue] !== undefined) {\n    format.push(FORMAT_MAP.month[monthOptionValue]);\n  }\n}\n\nfunction getDayPart(format, options) {\n  const dayOptionValue = options.day;\n\n  if (FORMAT_MAP.day[dayOptionValue] !== undefined) {\n    format.push(FORMAT_MAP.day[dayOptionValue]);\n  }\n}\n\nfunction getYearPart(format, options) {\n  const yearOptionValue = options.year;\n\n  if (FORMAT_MAP.year[yearOptionValue] !== undefined) {\n    format.push(FORMAT_MAP.year[yearOptionValue]);\n  }\n}\n\nfunction getTZPart(format, options) {\n  const timeZoneNameOptionValue = options.timeZoneName;\n\n  if (FORMAT_MAP.timeZoneName[timeZoneNameOptionValue] !== undefined) {\n    if (options.timeZone === 'UTC') {\n      format.push('[GMT]');\n    } else {\n      format.push(FORMAT_MAP.timeZoneName[timeZoneNameOptionValue]);\n    }\n  }\n}\n\nfunction getTimePart(format, options) {\n  const hourOptionValue = options.hour,\n        minuteOptionValue = options.minute,\n        secondOptionValue = options.second;\n  let hasTime = false;\n  let hasHourOnly = false; // hour 12 hr or 24 hr\n\n  if (hourOptionValue === 'numeric' || hourOptionValue === '2-digit') {\n    hasTime = true;\n\n    if (options.hour12 === false) {\n      if (hourOptionValue === 'numeric') {\n        format.push(FORMAT_MAP.hour.numeric24);\n      } else {\n        format.push(FORMAT_MAP.hour['2-digit24']);\n      }\n    } else if (hourOptionValue === 'numeric') {\n      format.push(FORMAT_MAP.hour.numeric12);\n    } else {\n      format.push(FORMAT_MAP.hour['2-digit12']);\n    }\n\n    if (FORMAT_MAP.minute[minuteOptionValue] !== undefined) {\n      format.push(':');\n    } else if (FORMAT_MAP.second[secondOptionValue] !== undefined) {\n      hasHourOnly = true;\n    }\n  } // minute\n\n\n  if (FORMAT_MAP.minute[minuteOptionValue] !== undefined) {\n    hasTime = true;\n    format.push(FORMAT_MAP.minute[minuteOptionValue]);\n\n    if (FORMAT_MAP.second[secondOptionValue] !== undefined) {\n      format.push(':');\n    }\n  } // second\n\n\n  if (FORMAT_MAP.second[secondOptionValue] !== undefined && !hasHourOnly) {\n    hasTime = true;\n    format.push(FORMAT_MAP.second[secondOptionValue]);\n  } // AM/PM marker\n\n\n  if (hasTime) {\n    format.push(' a ');\n  }\n\n  if (hasHourOnly) {\n    format.push('[(sec]: ' + FORMAT_MAP.second[secondOptionValue] + '[)]');\n  }\n}\n\nfunction DateTimeOptions(options) {\n  this.options = options || {};\n}\n\nDateTimeOptions.prototype.hasFormattingOptions = function () {\n  return FORMATTING_OPTS.some(opt => {\n    return this.options[opt] !== undefined;\n  });\n};\n\nDateTimeOptions.prototype.getSkeleton = function () {\n  const format = [];\n  getWeekDayPart(format, this.options);\n  getMonthPart(format, this.options);\n  getDayPart(format, this.options);\n  getYearPart(format, this.options);\n  getTimePart(format, this.options);\n  getTZPart(format, this.options);\n  let formatStr = format.join('');\n  SEPARATORS.forEach(element => {\n    if (formatStr.lastIndexOf(element) === formatStr.length - 1) {\n      formatStr = formatStr.slice(0, -1);\n    }\n  });\n  return formatStr;\n};\n\nexport { DateTimeOptions };","import { assert } from 'lightning/utilsPrivate';\nimport mediumDateFormat from '@salesforce/i18n/dateTime.mediumDateFormat';\nimport mediumTimeFormat from '@salesforce/i18n/dateTime.mediumTimeFormat';\nimport { isValidISODateTimeString, isValidISOTimeString, removeTimeZoneSuffix, STANDARD_DATE_FORMAT, TIME_SEPARATOR } from 'lightning/iso8601Utils';\nimport { formatDate, formatTime, formatDateTimeUTC, parseDateTimeUTC, parseDateTimeISO8601, syncUTCToWallTime, syncWallTimeToUTC, parseTime, parseDateTime, toOtherCalendar, fromOtherCalendar } from '../localizationService';\nexport function normalizeISODate(value, format) {\n  const dateValue = typeof value === 'string' ? value.trim() : value;\n\n  if (!dateValue) {\n    return {\n      isoValue: null,\n      displayValue: value || ''\n    };\n  } // if value is an ISO string, only fetch the date part\n\n\n  const dateOnlyString = typeof dateValue === 'string' && dateValue.split(TIME_SEPARATOR)[0] || dateValue;\n  assert(isValidISODateTimeString(dateOnlyString), `datetime component: The value attribute accepts a valid ISO8601 formatted string ` + `with timezone offset. but we are getting the ${typeof value} value \"${value}\" instead.`);\n  const parsedDate = parseDateTime(dateOnlyString, STANDARD_DATE_FORMAT);\n\n  if (!parsedDate) {\n    return {\n      isoValue: null,\n      displayValue: value || ''\n    };\n  } // convert from Gregorian to Buddhist Calendar if necessary\n\n\n  const civilDate = toOtherCalendar(parsedDate);\n  return {\n    isoValue: dateOnlyString,\n    displayValue: formatDate(civilDate, format)\n  };\n}\nexport function normalizeISOTime(value, format) {\n  // We are not converting the time to the user's timezone. All values are displayed and saved as UTC time values\n  const normalizedValue = removeTimeZoneSuffix(value);\n  const timeValue = typeof normalizedValue === 'string' ? normalizedValue.trim() : normalizedValue;\n\n  if (!timeValue) {\n    return {\n      isoValue: null,\n      displayValue: value || ''\n    };\n  }\n\n  assert(isValidISOTimeString(timeValue), `datetime component: The value attribute accepts a valid ISO8601 formatted string. ` + `but we are getting the ${typeof value} value \"${value}\" instead.`);\n  const parsedTime = parseTime(timeValue);\n\n  if (!parsedTime) {\n    return {\n      isoValue: null,\n      displayValue: value || ''\n    };\n  }\n\n  return {\n    isoValue: getISOTimeString(parsedTime),\n    displayValue: formatTime(parsedTime, format)\n  };\n}\nexport function normalizeISODateTime(value, timezone, format) {\n  const dateTimeValue = typeof value === 'string' ? value.trim() : value;\n\n  if (!dateTimeValue) {\n    return {\n      isoValue: null,\n      displayValue: value || ''\n    };\n  }\n\n  assert(isValidISODateTimeString(dateTimeValue), `datetime component: The value attribute accepts a valid ISO8601 formatted string ` + `with timezone offset. but we are getting the ${typeof value} value \"${value}\" instead.`);\n  const parsedDate = parseDateTimeISO8601(dateTimeValue);\n\n  if (!parsedDate) {\n    return {\n      isoValue: null,\n      displayValue: value || ''\n    };\n  }\n\n  const convertedDate = syncUTCToWallTime(parsedDate, timezone);\n  return {\n    // We are passing the ISO value without a timezone designator.\n    // the native input type='datetime-local' who calls this does not accept timezone offset\n    isoValue: removeTimeZoneSuffix(convertedDate.toISOString()),\n    displayValue: formatDateTimeUTC(convertedDate, format)\n  };\n}\nexport function normalizeFormattedDate(value, format) {\n  const dateValue = typeof value === 'string' ? value.trim() : value;\n\n  if (!dateValue) {\n    return null;\n  }\n\n  const parsedDate = parseDateTime(dateValue, format || mediumDateFormat, true);\n\n  if (!parsedDate) {\n    return null;\n  }\n\n  const gregorianDate = fromOtherCalendar(parsedDate);\n  return getISODateString(gregorianDate);\n}\nexport function normalizeFormattedTime(value, format) {\n  const timeValue = typeof value === 'string' ? value.trim() : value;\n\n  if (!timeValue) {\n    return null;\n  }\n\n  const parsedDate = parseTime(timeValue, format || mediumTimeFormat, true);\n\n  if (!parsedDate) {\n    return null;\n  }\n\n  return getISOTimeString(parsedDate);\n} // The value here isn't really formatted, it's always an ISO string in the form isoDate + T + isoTime (without Z).\n\nexport function normalizeFormattedDateTime(value, timezone, format) {\n  const datetimeValue = typeof value === 'string' ? value.trim() : value;\n\n  if (!datetimeValue) {\n    return null;\n  } // given that value is an ISO string without Z, the method below is equivalent to parseDateTimeISO8601(value + 'Z')\n  // However, parseDateTimeUTC is more concise and doesn't need any manipulation of the input (adding Z).\n\n\n  const parsedDate = parseDateTimeUTC(datetimeValue, format);\n\n  if (!parsedDate) {\n    return null;\n  }\n\n  const convertedDate = syncWallTimeToUTC(parsedDate, timezone);\n  return convertedDate.toISOString();\n}\nexport function getToday() {\n  const today = getTodayBasedOnTimezone();\n  return getISODateString(today);\n}\nexport function getISODateString(date) {\n  return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\n}\nexport function getISOTimeString(date) {\n  return `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}.${doublePad(date.getMilliseconds())}`;\n}\nexport function getCurrentTime(timezone) {\n  const today = getTodayBasedOnTimezone(timezone);\n  return pad(today.getHours()) + ':' + pad(today.getMinutes());\n}\n\nfunction getTodayBasedOnTimezone(timezone) {\n  const today = new Date();\n  today.setTime(today.getTime() + today.getTimezoneOffset() * 60 * 1000); // time in UTC\n  // localization service will use $Locale.timezone when no timezone provided\n\n  return syncUTCToWallTime(today, timezone);\n}\n\nfunction pad(n) {\n  return Number(n) < 10 ? '0' + n : n;\n}\n\nfunction doublePad(n) {\n  const number = Number(n);\n\n  if (number < 10) {\n    return '00' + n;\n  } else if (number < 100) {\n    return '0' + n;\n  }\n\n  return n;\n}","import salesforceLocale from '@salesforce/i18n/locale';\nimport salesforceLanguage from '@salesforce/i18n/lang'; // Month and weekdays names should be based on the user's language setting.\n// Falling back to the user's locale or the default 'en-us' in case the tag isn't supported by the browser's Intl implementation\n\nconst FALLBACK_LOCALES = [salesforceLocale, 'en-us'];\nconst symbolsCache = {}; // languageOverride is only used in the tests\n\nexport function getNameOfWeekdays(languageOverride) {\n  const language = languageOverride || salesforceLanguage;\n  const languageDataCache = symbolsCache[language];\n\n  if (languageDataCache && languageDataCache.weekdays) {\n    return languageDataCache.weekdays;\n  }\n\n  const intlLocales = [language, ...FALLBACK_LOCALES];\n  const fullNameFormatter = new Intl.DateTimeFormat(intlLocales, {\n    weekday: 'long',\n    timeZone: 'UTC'\n  });\n  const shortNameFormatter = new Intl.DateTimeFormat(intlLocales, {\n    weekday: 'short',\n    timeZone: 'UTC'\n  });\n  const weekdays = [];\n\n  for (let i = 0; i <= 6; i++) {\n    // (1970, 0, 4) corresponds to a sunday.\n    const date = new Date(Date.UTC(1970, 0, 4 + i));\n    weekdays.push({\n      fullName: format(fullNameFormatter, date),\n      shortName: format(shortNameFormatter, date)\n    });\n  }\n\n  if (!symbolsCache[language]) {\n    symbolsCache[language] = {};\n  }\n\n  symbolsCache[language].weekdays = weekdays;\n  return weekdays;\n} // languageOverride is only used in the tests\n\nexport function getMonthNames(languageOverride) {\n  const language = languageOverride || salesforceLanguage;\n  const languageDataCache = symbolsCache[language];\n\n  if (languageDataCache && languageDataCache.months) {\n    return languageDataCache.months;\n  }\n\n  const intlLocales = [language, ...FALLBACK_LOCALES];\n  const monthNameFormatter = new Intl.DateTimeFormat(intlLocales, {\n    month: 'long'\n  });\n  const months = [];\n\n  for (let i = 0; i <= 11; i++) {\n    const date = new Date(1970, i, 4);\n    months.push({\n      // we currently only need the fullName\n      fullName: format(monthNameFormatter, date)\n    });\n  }\n\n  if (!symbolsCache[language]) {\n    symbolsCache[language] = {};\n  }\n\n  symbolsCache[language].months = months;\n  return months;\n}\n\nfunction format(dateTimeFormat, date) {\n  const formattedDate = dateTimeFormat.format(date);\n  return removeIE11Markers(formattedDate);\n}\n\nfunction removeIE11Markers(formattedString) {\n  // IE11 adds LTR / RTL mark in the formatted date time string\n  return formattedString.replace(/[\\u200E\\u200F]/g, '');\n}","import locale from '@salesforce/i18n/locale';\nimport { DateTimeOptions } from './dateTimeOptions';\nimport { formatDateUTC, formatDate, toOtherCalendar, syncUTCToWallTime } from '../localizationService';\nimport { isValidISODateTimeString, TIME_SEPARATOR } from 'lightning/iso8601Utils';\nconst dateTimeFormatInstancesCache = {};\nconst POSSIBLE_OPTS = {\n  weekday: true,\n  era: true,\n  year: true,\n  month: true,\n  day: true,\n  hour: true,\n  minute: true,\n  second: true,\n  timeZone: true,\n  timeZoneName: true,\n  hour12: true\n};\n\nfunction getOptionsUniqueKey(options) {\n  return Object.keys(options).sort().reduce((prev, optionName) => {\n    if (POSSIBLE_OPTS[optionName]) {\n      return prev + optionName + options[optionName] + '';\n    }\n\n    return prev;\n  }, '');\n}\n\nfunction getFromCache(options) {\n  const optionsUniqueKey = getOptionsUniqueKey(options);\n  let formatInstance = dateTimeFormatInstancesCache[optionsUniqueKey];\n\n  if (!formatInstance) {\n    formatInstance = new Intl.DateTimeFormat(locale, options);\n    dateTimeFormatInstancesCache[optionsUniqueKey] = formatInstance;\n  }\n\n  return formatInstance;\n}\n\nfunction convertAndFormatDate(date, format, timeZone) {\n  const translatedDate = toOtherCalendar(date);\n  const converted = syncUTCToWallTime(translatedDate, timeZone);\n  return formatDateUTC(converted, format);\n}\n\nfunction isDate(value) {\n  return Object.prototype.toString.call(value) === '[object Date]' && !isNaN(value.getTime());\n}\n\nfunction toDate(value) {\n  let dateObj = value;\n\n  if (!isDate(value) && (typeof value === 'string' || typeof value === 'number')) {\n    dateObj = new Date(isFinite(value) ? parseInt(value, 10) : Date.parse(value));\n  }\n\n  return dateObj;\n}\n\nconst isTimeZonesSupported = function () {\n  try {\n    // IE11 only supports the UTC time zone and throws when given anything else\n    // eslint-disable-next-line new-cap\n    Intl.DateTimeFormat('en-US', {\n      timeZone: 'America/Los_Angeles'\n    });\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n}();\n\nfunction dateTimeFormatFallback(dto) {\n  // localization service will default to mediumDateFormat when no format is provided\n  const format = dto.hasFormattingOptions() ? dto.getSkeleton() : null;\n  const {\n    timeZone\n  } = dto.options;\n  return {\n    format: value => {\n      // if value is an ISO date string (e.g. 2019-10-25), do not convert between timezones and just format the date\n      if (isValidISODateTimeString(value) && value.indexOf(TIME_SEPARATOR) < 0) {\n        return formatDate(value);\n      } // FIXME use standard methods from localizationService for parsing and formatting instead\n\n\n      const dateObj = toDate(value);\n\n      if (isDate(dateObj)) {\n        if (timeZone === 'UTC') {\n          dateObj.setTime(dateObj.getTime() + dateObj.getTimezoneOffset() * 60 * 1000);\n        }\n\n        return convertAndFormatDate(dateObj, format, timeZone);\n      }\n\n      return '';\n    }\n  };\n}\n\nexport function dateTimeFormat(opts) {\n  const options = opts || {};\n  const dto = new DateTimeOptions(options);\n\n  if (!('Intl' in window) || !dto.hasFormattingOptions() || !isTimeZonesSupported) {\n    return dateTimeFormatFallback(dto);\n  }\n\n  return {\n    format: value => {\n      const dtf = getFromCache(options);\n      return dtf.format(toDate(value));\n    }\n  };\n}","import { duration, displayDuration } from '../localizationService';\nimport { assert } from 'lightning/utilsPrivate';\nconst MINUTE_MILLISECONDS = 1000 * 60;\nexport function relativeFormat() {\n  return {\n    format: value => {\n      const now = Date.now();\n      const timestamp = Number(value);\n      assert(isFinite(timestamp), `RelativeFormat: The value attribute accepts either a Date object or a timestamp, but we are getting the ${typeof value} value \"${value}\" instead.`);\n      const getDiffInMinutes = (timestamp - now) / MINUTE_MILLISECONDS;\n      const durationData = duration(getDiffInMinutes, 'minutes');\n      return displayDuration(durationData, true);\n    }\n  };\n}","import { address as addressFormat } from './address/AddressFormat';\nimport { name as nameFormat } from './name/NameFormat';\nimport { numberFormat } from './number/NumberFormat';\nimport { relativeFormat } from './duration/RelativeFormat';\nimport { dateTimeFormat } from './datetime/intlFormat';\nexport { addressFormat, nameFormat, numberFormat, dateTimeFormat, relativeFormat };\nexport { getNameOfWeekdays, getMonthNames } from './datetime/intlDisplayNames';\nexport { normalizeISODate, normalizeISOTime, normalizeISODateTime, normalizeFormattedDate, normalizeFormattedTime, normalizeFormattedDateTime, getToday, getISODateString, getISOTimeString, getCurrentTime } from './datetime/dateTimeUtils';\nexport { isBefore, isAfter, formatDate, formatTime, formatDateUTC, formatDateTimeUTC, parseTime, parseDateTime, parseDateTimeUTC, toOtherCalendar, fromOtherCalendar, toLocalizedDigits, fromLocalizedDigits, syncWallTimeToUTC, syncUTCToWallTime } from './localizationService';","// This is a library for all calls to the aura localizationService.\nimport { getLocalizationService } from 'lightning/configProvider';\nimport { isValidISOTimeString } from 'lightning/iso8601Utils';\nexport function isBefore(date1, date2, unit) {\n  return getLocalizationService().isBefore(date1, date2, unit);\n}\nexport function isAfter(date1, date2, unit) {\n  return getLocalizationService().isAfter(date1, date2, unit);\n}\nexport function formatDateTimeUTC(date) {\n  return getLocalizationService().formatDateTimeUTC(date);\n}\nexport function formatDate(dateString, format, locale) {\n  return getLocalizationService().formatDate(dateString, format, locale);\n}\nexport function formatDateUTC(dateString, format, locale) {\n  return getLocalizationService().formatDateUTC(dateString, format, locale);\n}\nexport function formatTime(timeString, format) {\n  return getLocalizationService().formatTime(timeString, format);\n}\nexport function parseDateTimeUTC(dateTimeString) {\n  return getLocalizationService().parseDateTimeUTC(dateTimeString);\n}\nexport function parseDateTimeISO8601(dateTimeString) {\n  return getLocalizationService().parseDateTimeISO8601(dateTimeString);\n}\nexport function parseDateTime(dateTimeString, format, strictMode) {\n  return getLocalizationService().parseDateTime(dateTimeString, format, strictMode);\n}\nexport function syncUTCToWallTime(date, timeZone) {\n  let converted = null; // eslint-disable-next-line new-cap\n\n  getLocalizationService().UTCToWallTime(date, timeZone, result => {\n    converted = result;\n  });\n  return converted;\n}\nexport function syncWallTimeToUTC(date, timeZone) {\n  let converted = null; // eslint-disable-next-line new-cap\n\n  getLocalizationService().WallTimeToUTC(date, timeZone, result => {\n    converted = result;\n  });\n  return converted;\n}\nexport function toOtherCalendar(date) {\n  return getLocalizationService().translateToOtherCalendar(date);\n}\nexport function fromOtherCalendar(date) {\n  return getLocalizationService().translateFromOtherCalendar(date);\n}\nexport function toLocalizedDigits(input) {\n  return getLocalizationService().translateToLocalizedDigits(input);\n}\nexport function fromLocalizedDigits(input) {\n  return getLocalizationService().translateFromLocalizedDigits(input);\n} // This belongs to localization service; i.e. getLocalizationService().parseTime()\n// Should be removed after it's been added to the localization service\n\nexport function parseTime(timeString, format, strictParsing) {\n  if (!timeString) {\n    return null;\n  }\n\n  if (!format) {\n    if (!isValidISOTimeString(timeString)) {\n      return null;\n    }\n\n    return parseDateTimeISO8601(timeString);\n  }\n\n  const parseString = timeString.replace(/(\\d)([AaPp][Mm])/g, '$1 $2'); // Modifying the time string so that strict parsing doesn't break on minor deviations\n\n  const parseFormat = format.replace(/(\\b|[^h])h{2}(?!h)/g, '$1h').replace(/(\\b|[^H])H{2}(?!H)/g, '$1H').replace(/(\\b|[^m])m{2}(?!m)/g, '$1m').replace(/\\s*A/g, ' A').trim();\n  const acceptableFormats = [parseFormat]; // We want to be lenient and accept input values with seconds or milliseconds precision.\n  // So even though we may display the time as 10:23 AM, we would accept input values like 10:23:30.555 AM.\n\n  acceptableFormats.push(parseFormat.replace('m', 'm:s'), parseFormat.replace('m', 'm:s.S'), parseFormat.replace('m', 'm:s.SS'), parseFormat.replace('m', 'm:s.SSS')); // Start parsing from the most strict format (i.e. time with milliseconds).\n  // The strict mode parsing of time strings using parseDateTime seems to be lenient for certain formats\n\n  acceptableFormats.reverse();\n\n  for (let i = 0; i < acceptableFormats.length; i++) {\n    const time = parseDateTime(parseString, acceptableFormats[i], strictParsing);\n\n    if (time) {\n      return time;\n    }\n  }\n\n  return null;\n} // This is called from the numberFormat library when the value exceeds the safe length.\n\nexport function getNumberFormat(format) {\n  return getLocalizationService().getNumberFormat(format);\n}\nexport function duration(value, unit) {\n  return getLocalizationService().duration(value, unit);\n}\nexport function displayDuration(value, withSuffix) {\n  return getLocalizationService().displayDuration(value, withSuffix);\n}","// This is a library built from Globalization's repo\n// https://git.soma.salesforce.com/Globalization/name.js\n// This will be added/updated through a build process in the future\n\n/* eslint-disable */\nvar data = {\n  DEFAULT: {\n    short_f: '%F %L',\n    medium_f: '%F %M %L',\n    long_f: '%S %F %M %L %X %I',\n    input: 'SFMLXI'\n  },\n  vi: {\n    short_f: '%L %F',\n    medium_f: '%L %M %F',\n    long_f: '%L %M %F %X %I',\n    input: 'SLFMXI'\n  },\n  vi_VN: {\n    _ref: 'vi'\n  },\n  hu: {\n    short_f: '%L %F',\n    medium_f: '%L %F',\n    long_f: '%L %F %M %X %I',\n    input: 'SLFMXI'\n  },\n  hu_HU: {\n    _ref: 'hu'\n  },\n  ja: {\n    short_f: '%L %F',\n    medium_f: '%L %M %F',\n    long_f: '%L %M %F %X %I',\n    input: 'SLMFXI'\n  },\n  ja_JP: {\n    _ref: 'ja'\n  },\n  ko: {\n    _ref: 'ja'\n  },\n  ko_KR: {\n    _ref: 'ja'\n  },\n  zh: {\n    _ref: 'ja'\n  },\n  zh_CN: {\n    _ref: 'ja'\n  },\n  zh_CN_PINYIN: {\n    _ref: 'ja'\n  },\n  zh_CN_STROKE: {\n    _ref: 'ja'\n  },\n  zh_HK: {\n    _ref: 'ja'\n  },\n  zh_HK_STROKE: {\n    _ref: 'ja'\n  },\n  zh_MO: {\n    _ref: 'ja'\n  },\n  zh_SG: {\n    _ref: 'ja'\n  },\n  zh_TW: {\n    _ref: 'ja'\n  },\n  zh_TW_STROKE: {\n    _ref: 'ja'\n  }\n}; // Define all available fields.\n\n/**\n S: Salutation\n F: First Name(givenName)\n M: Middle Name\n L: Last Name(familyName)\n X: Suffix\n I: Informal Name\n */\n\nvar fieldConstants = {\n  SALUTATION: Symbol('Salutation'),\n  FIRST: Symbol('First Name'),\n  MIDDLE: Symbol('Middle Name'),\n  LAST: Symbol('Last Name'),\n  SUFFIX: Symbol('Suffix'),\n  INFORMAL: Symbol('Informal Name')\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nvar Format = function Format(parts) {\n  _classCallCheck(this, Format);\n\n  this.parts = Object.freeze(parts);\n  Object.freeze(this);\n};\n/**\n * Represents a field within the format\n */\n\n\nvar FieldFormatPart = function FieldFormatPart(field) {\n  _classCallCheck(this, FieldFormatPart);\n\n  this.field = field;\n  this.type = 'field';\n  Object.freeze(this);\n};\n/**\n * Represents text to be output directly\n */\n\n\nvar TextFormatPart = function TextFormatPart(text) {\n  _classCallCheck(this, TextFormatPart);\n\n  this.type = 'text';\n  this.text = text;\n  Object.freeze(this);\n};\n\nvar fieldFormatParts = Object.freeze({\n  SALUTATION: new FieldFormatPart(fieldConstants.SALUTATION),\n  FIRST: new FieldFormatPart(fieldConstants.FIRST),\n  MIDDLE: new FieldFormatPart(fieldConstants.MIDDLE),\n  LAST: new FieldFormatPart(fieldConstants.LAST),\n  SUFFIX: new FieldFormatPart(fieldConstants.SUFFIX),\n  INFORMAL: new FieldFormatPart(fieldConstants.INFORMAL)\n});\n\nvar FormatParser = function () {\n  function FormatParser() {\n    _classCallCheck(this, FormatParser);\n  }\n\n  _createClass(FormatParser, [{\n    key: 'parse',\n\n    /**\n     * Parses the format\n     * @param {string} fmt the format to be parsed\n     * @returns {Format}\n     */\n    value: function parse(fmt) {\n      var nodes = [];\n      var textBuffer = ''; // parse the format string\n\n      for (var i = 0; i < fmt.length; i = i + 1) {\n        if (fmt[i] === '%') {\n          i = i + 1; // move to the next character after %\n          // end the last text buffer\n\n          if (textBuffer.length > 0) {\n            nodes.push(Object.freeze(new TextFormatPart(textBuffer)));\n            textBuffer = '';\n          }\n\n          if (i >= fmt.length) {\n            throw new Error('Unexpected end of format. Symbol at ' + (i - 1) + ' should be followed by a valid field code');\n          }\n\n          var code = fmt[i];\n\n          switch (code) {\n            case 'S':\n              nodes.push(fieldFormatParts.SALUTATION);\n              break;\n\n            case 'F':\n              nodes.push(fieldFormatParts.FIRST);\n              break;\n\n            case 'M':\n              nodes.push(fieldFormatParts.MIDDLE);\n              break;\n\n            case 'L':\n              nodes.push(fieldFormatParts.LAST);\n              break;\n\n            case 'X':\n              nodes.push(fieldFormatParts.SUFFIX);\n              break;\n\n            case 'I':\n              nodes.push(fieldFormatParts.INFORMAL);\n              break;\n\n            default:\n              // TODO log the bad symbol and continue\n              break;\n          }\n        } else {\n          // if it wasn't a symbol, then just output the value directly\n          textBuffer += fmt[i];\n        }\n      }\n\n      if (textBuffer.length > 0) {\n        nodes.push(new TextFormatPart(textBuffer));\n      }\n\n      return new Format(nodes);\n    }\n  }]);\n\n  return FormatParser;\n}();\n\nvar formatParser = new FormatParser();\nvar name = {\n  /**\n   * S: Salutation\n   * F: First Name(givenName)\n   * M: Middle Name\n   * L: Last Name(familyName)\n   * X: Suffix\n   * I: Informal Name\n   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.\n   * @return {{short: string, medium: string, long: string, input: string}} format data\n   */\n  getNameInfoForLocale: function getNameInfoForLocale(localeStr) {\n    var key = this.getFallback(localeStr);\n\n    if (data[key]) {\n      // Double check.\n      var cloneNameInfo = Object.freeze(Object.assign({}, data[key]));\n      return Object.freeze({\n        name: cloneNameInfo\n      });\n    }\n  },\n\n  /**\n   * S: Salutation\n   * F: First Name(givenName)\n   * M: Middle Name\n   * L: Last Name(familyName)\n   * X: Suffix\n   * I: Informal Name\n   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.\n   * @return {string} format pattern\n   */\n  getNameFormatPatternMedium: function getNameFormatPatternMedium(localeStr) {\n    var key = this.getFallback(localeStr);\n\n    if (data[key]) {\n      // Double check.\n      return data[key].medium_f;\n    }\n  },\n\n  /**\n   * S: Salutation\n   * F: First Name(givenName)\n   * M: Middle Name\n   * L: Last Name(familyName)\n   * X: Suffix\n   * I: Informal Name\n   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.\n   * @return {string} format pattern\n   */\n  getNameFormatPatternShort: function getNameFormatPatternShort(localeStr) {\n    var key = this.getFallback(localeStr);\n\n    if (data[key]) {\n      // Double check.\n      return data[key].short_f;\n    }\n  },\n\n  /**\n   * S: Salutation\n   * F: First Name(givenName)\n   * M: Middle Name\n   * L: Last Name(familyName)\n   * X: Suffix\n   * I: Informal Name\n   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.\n   * @return {string} format pattern\n   */\n  getNameFormatPatternLong: function getNameFormatPatternLong(localeStr) {\n    var key = this.getFallback(localeStr);\n\n    if (data[key]) {\n      // Double check.\n      return data[key].long_f;\n    }\n  },\n\n  /**\n   * S: Salutation\n   * F: First Name(givenName)\n   * M: Middle Name\n   * L: Last Name(familyName)\n   * X: Suffix\n   * I: Informal Name\n   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.\n   * @return {string} input order\n   */\n  getNameInputOrder: function getNameInputOrder(localeStr) {\n    var key = this.getFallback(localeStr);\n\n    if (data[key]) {\n      // Double check.\n      return data[key].input;\n    }\n  },\n\n  /**\n   * Format name values for given locale.\n   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.\n   * @param {{first: string, middle: string, last: string, salutation: string, suffix: string, informal: string}} values\n   * @returns {string} the formatted name\n   */\n  formatNameShort: function formatNameShort(localeStr, values) {\n    var key = this.getFallback(localeStr);\n\n    if (data[key]) {\n      // Double check.\n      return this.buildName(data[key].short_f, values);\n    }\n  },\n\n  /**\n   * Format name values for given locale.\n   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.\n   * @param {{first: string, middle: string, last: string, salutation: string, suffix: string, informal: string}} values\n   * @returns {string} the formatted name\n   */\n  formatNameMedium: function formatNameMedium(localeStr, values) {\n    var key = this.getFallback(localeStr);\n\n    if (data[key]) {\n      // Double check.\n      return this.buildName(data[key].medium_f, values);\n    }\n  },\n\n  /**\n   * Format name values for given locale.\n   * @param {string} locale string, like zh_CN, zh_CN_PINYIN, or de.\n   * @param {{first: string, middle: string, last: string, salutation: string, suffix: string, informal: string}} values\n   * @returns {string} the formatted name\n   */\n  formatNameLong: function formatNameLong(localeStr, values) {\n    var key = this.getFallback(localeStr);\n\n    if (data[key]) {\n      // Double check.\n      return this.buildName(data[key].long_f, values);\n    }\n  },\n\n  /**\n   * Creates an array of address lines given the format and the values to use.\n   * @param {string} pattern\n   * @param @param {{first: string, middle: string, last: string, salutation: string, suffix: string, informal: string}} values\n   * @returns {string} the text for use in the address\n   */\n  buildName: function buildName(pattern, values) {\n    var format = formatParser.parse(pattern);\n    var sb = [];\n\n    for (var i = 0; i < format.parts.length; i++) {\n      var part = format.parts[i];\n\n      if (part.type === 'text') {\n        sb.push(part.text);\n      } else if (part.type === 'field') {\n        if (part.field === fieldConstants.SALUTATION) {\n          sb.push(values.salutation || '');\n        } else if (part.field === fieldConstants.FIRST) {\n          sb.push(values.first || '');\n        } else if (part.field === fieldConstants.MIDDLE) {\n          sb.push(values.middle || '');\n        } else if (part.field === fieldConstants.LAST) {\n          sb.push(values.last || '');\n        } else if (part.field === fieldConstants.SUFFIX) {\n          sb.push(values.suffix || '');\n        } else if (part.field === fieldConstants.INFORMAL) {\n          sb.push(values.informal || '');\n        } else {}\n      }\n    }\n\n    return sb.join('').trim().replace(/  /g, ' ');\n  },\n  // Resolve the reference by tracing down the _ref value.\n  followReferences: function followReferences(key) {\n    if (data[key] && data[key]._ref) {\n      return this.followReferences(data[key]._ref);\n    }\n\n    return key;\n  },\n  // Get fall back key.\n  getFallback: function getFallback(localeStr) {\n    // Resolve the reference.\n    var key = this.followReferences(localeStr);\n\n    if (!data[key]) {\n      return 'DEFAULT'; // Always fall back to 'US'.\n    }\n\n    return key;\n  }\n};\nexport { name };","import { numberFormatFallback } from './numberFormatFallback';\nimport { normalizeOptions, exceedsSafeLength, getFromCache } from './utils';\nexport function numberFormat(options) {\n  const normalizedOpts = Object.assign({}, normalizeOptions(options));\n\n  if (!('Intl' in window)) {\n    return numberFormatFallback(normalizedOpts);\n  }\n\n  return {\n    format: value => {\n      if (value && exceedsSafeLength(value)) {\n        return numberFormatFallback(normalizedOpts).format(value);\n      }\n\n      const numberFormatInstance = getFromCache(normalizedOpts);\n      return numberFormatInstance.format(value);\n    }\n  };\n}","import { NumberOptions } from './numberOptions';\nimport { getNumberFormat } from '../localizationService';\nexport function numberFormatFallback(options) {\n  const skeleton = new NumberOptions(options).getSkeleton();\n  return {\n    format: value => {\n      return getNumberFormat(skeleton).format(value);\n    }\n  };\n}","import numberFormat from '@salesforce/i18n/number.numberFormat';\nimport percentFormat from '@salesforce/i18n/number.percentFormat';\nimport currencyFormat from '@salesforce/i18n/number.currencyFormat';\nimport currency from '@salesforce/i18n/currency';\nimport { updateFractionPart, updateIntegerPart, updateCurrencySymbol, getCurrency } from './utils';\n\nfunction NumberOptions(options) {\n  this.options = options || {};\n}\n\nNumberOptions.prototype.isCurrency = function () {\n  return this.options.style === 'currency';\n};\n\nNumberOptions.prototype.isPercent = function () {\n  return this.options.style === 'percent';\n};\n\nNumberOptions.prototype.isDefaultCurrency = function () {\n  return !this.options.currency || currency === this.options.currency;\n};\n\nNumberOptions.prototype.getDefaultSkeleton = function () {\n  return this.isCurrency() ? currencyFormat : this.isPercent() ? percentFormat : numberFormat;\n};\n\nNumberOptions.prototype.getSkeleton = function () {\n  const options = this.options;\n  const defaultSkeleton = this.getDefaultSkeleton();\n  let skeleton = updateFractionPart(defaultSkeleton, options);\n  skeleton = updateIntegerPart(skeleton, options);\n\n  if (!this.isDefaultCurrency()) {\n    skeleton = updateCurrencySymbol(skeleton, getCurrency(options), options);\n  }\n\n  return skeleton;\n};\n\nexport { NumberOptions };","import locale from '@salesforce/i18n/locale';\nimport numberFormat from '@salesforce/i18n/number.numberFormat';\nimport percentFormat from '@salesforce/i18n/number.percentFormat';\nimport currencyFormat from '@salesforce/i18n/number.currencyFormat';\nimport currency from '@salesforce/i18n/currency'; // For possible parameters, see the Intl.NumberFormat spec:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat#Parameters\n\nconst POSSIBLE_OPTS = {\n  style: true,\n  currency: true,\n  currencyDisplay: true,\n  useGrouping: true,\n  minimumIntegerDigits: true,\n  minimumFractionDigits: true,\n  maximumFractionDigits: true,\n  minimumSignificantDigits: true,\n  maximumSignificantDigits: true\n};\nconst STYLE = {\n  DECIMAL: 'decimal',\n  CURRENCY: 'currency',\n  PERCENT: 'percent'\n};\nconst CURRENCY_DISPLAY = {\n  CODE: 'code',\n  // USD\n  SYMBOL: 'symbol',\n  // $\n  NAME: 'name' // US Dollars\n\n};\nconst SAFE_NUM_LENGTH = 15;\nconst SAFE_NUM_REGEXP = /0+$/;\nconst numberFormatInstancesCache = {};\n\nfunction getStringOfChar(char, amount) {\n  return new Array(amount + 1).join(char);\n}\n\nfunction getGroupingCount(skeleton) {\n  const match = skeleton.match(/,[#0]*\\./);\n  return match ? match[0].length - 2 : 0;\n}\n\nfunction getOptionsUniqueKey(options) {\n  return Object.keys(options).sort().reduce((prev, optionName) => {\n    if (POSSIBLE_OPTS[optionName]) {\n      return prev + optionName + options[optionName] + '';\n    }\n\n    return prev;\n  }, '');\n}\n\nfunction toNumber(value, defaultValue) {\n  const number = parseInt(value, 10);\n\n  if (isNaN(number)) {\n    return defaultValue;\n  }\n\n  return number;\n}\n\nfunction getFractionPart(options) {\n  const minimumDigits = toNumber(options.minimumFractionDigits, 0);\n  const maximumDigits = Math.max(toNumber(options.maximumFractionDigits, 0), minimumDigits);\n  return '.' + new Array(minimumDigits + 1).join('0') + new Array(maximumDigits - minimumDigits + 1).join('#');\n}\n\nfunction updateFractionPart(skeleton, options) {\n  const fractionPart = getFractionPart(options);\n  return addFractionsToPattern(skeleton, fractionPart);\n}\n\nfunction addFractionsToPattern(pattern, fractionPart) {\n  if (!fractionPart) {\n    return pattern;\n  } // if pattern has two formats (one for positive and one for negative numbers), add fractions to both patterns\n\n\n  if (pattern.indexOf(';') > 0) {\n    const [positivePattern, negativePattern] = pattern.split(';');\n    return `${addFractionsToPattern(positivePattern, fractionPart)};${addFractionsToPattern(negativePattern, fractionPart)}`;\n  } // If the pattern already has a fraction part, replace it with the fractions calculated from the options\n\n\n  if (pattern.indexOf('.') > 0) {\n    return pattern.replace(/\\.(0|#)*/, fractionPart);\n  } // If the pattern doesn't have a fraction part, we need to add it to the pattern\n  // We need to add the fraction part after the last digit (represented by '0' or '#')\n\n\n  const position = Math.max(pattern.lastIndexOf('0'), pattern.lastIndexOf('#')) + 1;\n  return [pattern.slice(0, position), fractionPart, pattern.slice(position)].join('');\n}\n\nfunction updateCurrencySymbol(skeleton, currencyCode, options) {\n  const symbol = String.fromCharCode(164);\n\n  if (options.currencyDisplay === CURRENCY_DISPLAY.NAME) {\n    // append the currency code at the end.\n    return skeleton.replace(symbol, '') + currencyCode;\n  }\n\n  return skeleton.replace(symbol, currencyCode);\n}\n\nfunction updateIntegerPart(skeleton, options) {\n  const minimumIntegerDigits = options.minimumIntegerDigits;\n  const groupingCount = getGroupingCount(skeleton);\n\n  if (!minimumIntegerDigits) {\n    return skeleton;\n  }\n\n  if (minimumIntegerDigits <= groupingCount) {\n    return skeleton.replace(/,[#0]*\\./, ',' + getStringOfChar('#', groupingCount - minimumIntegerDigits) + getStringOfChar('0', minimumIntegerDigits) + '.');\n  }\n\n  return skeleton.replace(/[#0]*\\./, getStringOfChar('0', minimumIntegerDigits - groupingCount) + ',' + getStringOfChar('0', groupingCount) + '.');\n}\n\nfunction getBestMatchCurrencySymbol(code, currencyDisplay) {\n  if (!('Intl' in window)) {\n    return code; // fail gracefully.\n  }\n\n  const opts = {\n    style: 'currency',\n    currency: code,\n    minimumFractionDigits: 0\n  };\n\n  if (currencyDisplay) {\n    opts.currencyDisplay = currencyDisplay;\n  }\n\n  const nf = getFromCache(opts);\n  return nf.format(2).replace(/2/g, '');\n}\n\nfunction getCurrency(options) {\n  const currencyDisplay = options.currencyDisplay || CURRENCY_DISPLAY.SYMBOL;\n\n  if (currencyDisplay === CURRENCY_DISPLAY.SYMBOL || currencyDisplay === CURRENCY_DISPLAY.NAME) {\n    return getBestMatchCurrencySymbol(options.currency, currencyDisplay);\n  }\n\n  return options.currency;\n}\n\nfunction getFromCache(options) {\n  const optionsUniqueKey = getOptionsUniqueKey(options);\n  let numberFormatInstance = numberFormatInstancesCache[optionsUniqueKey];\n\n  if (numberFormatInstance) {\n    return numberFormatInstance;\n  }\n\n  numberFormatInstance = new Intl.NumberFormat(locale, options);\n  numberFormatInstancesCache[optionsUniqueKey] = numberFormatInstance;\n  return numberFormatInstance;\n}\n\nfunction exceedsSafeLength(value) {\n  const numberAsString = value.toString();\n  const [intPart, fractionPart] = numberAsString.split('.'); // This count strips out insignificant trailing zeroes in the fraction part of the number.\n\n  const digitCount = intPart.length + (fractionPart ? fractionPart.replace(SAFE_NUM_REGEXP, '').length : 0);\n  return digitCount >= SAFE_NUM_LENGTH;\n}\n\nfunction normalizedMinimumFractionDigits(options) {\n  const fractionSkeleton = getFallbackFractionSkeleton(options.style);\n  const fractionDigits = fractionSkeleton.replace(/[^0]/g, '');\n  return fractionDigits.length;\n}\n\nfunction normalizedMaximumFractionDigits(options) {\n  const fractionSkeleton = getFallbackFractionSkeleton(options.style);\n  const fractionDigits = fractionSkeleton.replace(/[^0#]/g, '');\n  return Math.max(options.minimumFractionDigits, fractionDigits.length);\n}\n\nfunction getFallbackFractionSkeleton(style) {\n  let styleFormat = numberFormat;\n\n  if (style === STYLE.CURRENCY) {\n    styleFormat = currencyFormat;\n  } else if (style === STYLE.PERCENT) {\n    styleFormat = percentFormat;\n  }\n\n  const format = styleFormat.split(';')[0];\n  return format.split('.')[1] || '';\n}\n\nfunction normalizeOptions(options) {\n  const normalizedOpts = Object.assign({}, options);\n  normalizedOpts.currency = normalizedOpts.currency || currency;\n\n  if (normalizedOpts.minimumFractionDigits === undefined) {\n    normalizedOpts.minimumFractionDigits = normalizedMinimumFractionDigits(normalizedOpts);\n  }\n\n  if (normalizedOpts.maximumFractionDigits === undefined || normalizedOpts.maximumFractionDigits < normalizedOpts.minimumFractionDigits) {\n    normalizedOpts.maximumFractionDigits = normalizedMaximumFractionDigits(normalizedOpts);\n  }\n\n  return normalizedOpts;\n}\n\nexport { exceedsSafeLength, getFromCache, getCurrency, normalizeOptions, updateIntegerPart, updateFractionPart, updateCurrencySymbol };","/*\n * Regex to test a string for an ISO8601 Date. The following formats are matched.\n * Note that if a time element is present (e.g. 'T'), the string should have a time zone designator (Z or +hh:mm or -hh:mm).\n *\n *  YYYY\n *  YYYY-MM\n *  YYYY-MM-DD\n *  YYYY-MM-DDThh:mmTZD\n *  YYYY-MM-DDThh:mm:ssTZD\n *  YYYY-MM-DDThh:mm:ss.STZD\n *\n *\n * @see: https://www.w3.org/TR/NOTE-datetime\n */\nconst ISO8601_STRICT_PATTERN = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z){1})?)?)?$/i;\n/* Regex to test a string for an ISO8601 partial time or full time:\n * hh:mm\n * hh:mm:ss\n * hh:mm:ss.S\n * full time = partial time + TZD\n */\n\nconst ISO8601_TIME_PATTERN = /^\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\nexport const STANDARD_TIME_FORMAT = 'HH:mm:ss.SSS';\nexport const STANDARD_DATE_FORMAT = 'YYYY-MM-DD';\nexport const TIME_SEPARATOR = 'T';\nconst TIMEZONE_INDICATOR = /(Z|([+-])(\\d{2}):(\\d{2}))$/;\nexport function isValidISODateTimeString(dateTimeString) {\n  return isValidISO8601String(dateTimeString) && isValidDate(dateTimeString);\n}\nexport function isValidISOTimeString(timeString) {\n  if (!isValidISO8601TimeString(timeString)) {\n    return false;\n  }\n\n  const timeOnly = removeTimeZoneSuffix(timeString);\n  return isValidDate(`2018-09-09T${timeOnly}Z`);\n}\nexport function removeTimeZoneSuffix(dateTimeString) {\n  if (typeof dateTimeString === 'string') {\n    return dateTimeString.split(TIMEZONE_INDICATOR)[0];\n  }\n\n  return dateTimeString;\n}\n\nfunction isValidISO8601String(dateTimeString) {\n  if (typeof dateTimeString !== 'string') {\n    return false;\n  }\n\n  return ISO8601_STRICT_PATTERN.test(dateTimeString);\n}\n\nfunction isValidISO8601TimeString(timeString) {\n  if (typeof timeString !== 'string') {\n    return false;\n  }\n\n  return ISO8601_TIME_PATTERN.test(timeString);\n}\n\nfunction isValidDate(value) {\n  // Date.parse returns NaN if the argument doesn't represent a valid date\n  const timeStamp = Date.parse(value);\n  return isFinite(timeStamp);\n}","import _implicitStylesheets from \"./layoutItem.css\";\n\nimport _implicitScopedStylesheets from \"./layoutItem.scoped.css?scoped=true\";\n\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  key: 0\n};\nconst stc1 = [];\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {s: api_slot} = $api;\n  return [api_slot(\"\", stc0, stc1, $slotset)];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.slots = [\"\"];\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-layoutItem_layoutItem\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./layoutItem.html\";\nimport { normalizeFlexibility, normalizePadding, validateSize, computeLayoutClass, normalizeSize, normalizeDirection } from './styleUtils';\n/**\n * The basic element in a lightning-layout component.\n * A layout item groups information together to define visual grids, spacing, and sections.\n * @slot default Placeholder for your content in lightning-layout-item.\n */\n\nclass LightningLayoutItem extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this._flexibility = void 0;\n    this._alignmentBump = void 0;\n    this._padding = void 0;\n    this._size = void 0;\n    this._smallDeviceSize = void 0;\n    this._mediumDeviceSize = void 0;\n    this._largeDeviceSize = void 0;\n    this._layoutClass = [];\n  }\n\n  /**\n   * Make the item fluid so that it absorbs any extra space in its\n   * container or shrinks when there is less space. Allowed values are:\n   * auto (columns grow or shrink equally as space allows),\n   * shrink (columns shrink equally as space decreases),\n   * no-shrink (columns don't shrink as space reduces),\n   * grow (columns grow equally as space increases),\n   * no-grow (columns don't grow as space increases),\n   * no-flex (columns don't grow or shrink as space changes).\n   * Use a comma-separated value for multiple options, such as 'auto, no-shrink'.\n   * @type {object}\n   */\n  get flexibility() {\n    return this._flexibility;\n  }\n\n  set flexibility(value) {\n    this._flexibility = normalizeFlexibility(value);\n    this.updateClassList();\n  }\n\n  /**\n   * Specifies a direction to bump the alignment of adjacent layout items. Allowed values are left, top, right, bottom.\n   * @type {string}\n   */\n  get alignmentBump() {\n    return this._alignmentBump;\n  }\n\n  set alignmentBump(value) {\n    this._alignmentBump = normalizeDirection(value);\n    this.updateClassList();\n  }\n\n  /**\n   * Sets padding to either the right and left sides of a container,\n   * or all sides of a container. Allowed values are horizontal-small,\n   * horizontal-medium, horizontal-large, around-small, around-medium, around-large.\n   * @type {string}\n   */\n  get padding() {\n    return this._padding;\n  }\n\n  set padding(value) {\n    this._padding = normalizePadding(value);\n    this.updateClassList();\n  }\n\n  /**\n   * If the viewport is divided into 12 parts, size indicates the\n   * relative space the container occupies. Size is expressed as\n   * an integer from 1 through 12. This applies for all device-types.\n   * @type {number}\n   */\n  get size() {\n    return this._size;\n  }\n\n  set size(value) {\n    this._size = normalizeSize(value);\n    this.validateSize();\n    this.updateClassList();\n  }\n\n  /**\n   * If the viewport is divided into 12 parts, this attribute indicates\n   * the relative space the container occupies on device-types larger than\n   * mobile. It is expressed as an integer from 1 through 12.\n   * @type {number}\n   */\n  get smallDeviceSize() {\n    return this._smallDeviceSize;\n  }\n\n  set smallDeviceSize(value) {\n    this._smallDeviceSize = normalizeSize(value);\n    this.validateSize();\n    this.updateClassList();\n  }\n\n  /**\n   * If the viewport is divided into 12 parts, this attribute indicates\n   * the relative space the container occupies on device-types larger than\n   * tablet. It is expressed as an integer from 1 through 12.\n   * @type {number}\n   */\n  get mediumDeviceSize() {\n    return this._mediumDeviceSize;\n  }\n\n  set mediumDeviceSize(value) {\n    this._mediumDeviceSize = normalizeSize(value);\n    this.validateSize();\n  }\n\n  /**\n   * If the viewport is divided into 12 parts, this attribute indicates\n   * the relative space the container occupies on device-types larger than\n   * desktop. It is expressed as an integer from 1 through 12.\n   * @type {number}\n   */\n  get largeDeviceSize() {\n    return this._largeDeviceSize;\n  }\n\n  set largeDeviceSize(value) {\n    this._largeDeviceSize = normalizeSize(value);\n    this.validateSize();\n    this.updateClassList();\n  }\n\n  connectedCallback() {\n    this.updateClassList();\n  }\n\n  updateClassList() {\n    this.classList.remove(...this._layoutClass);\n    const config = computeLayoutClass({\n      default: this.size,\n      small: this.smallDeviceSize,\n      medium: this.mediumDeviceSize,\n      large: this.largeDeviceSize\n    }, this.flexibility, this.padding, this.alignmentBump);\n    this._layoutClass = Object.keys(config);\n    this.classList.add(...this._layoutClass);\n  }\n\n  validateSize() {\n    validateSize(this.size, this.smallDeviceSize, this.mediumDeviceSize, this.largeDeviceSize);\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningLayoutItem, {\n  publicProps: {\n    flexibility: {\n      config: 3\n    },\n    alignmentBump: {\n      config: 3\n    },\n    padding: {\n      config: 3\n    },\n    size: {\n      config: 3\n    },\n    smallDeviceSize: {\n      config: 3\n    },\n    mediumDeviceSize: {\n      config: 3\n    },\n    largeDeviceSize: {\n      config: 3\n    }\n  },\n  track: {\n    _flexibility: 1,\n    _alignmentBump: 1,\n    _padding: 1,\n    _size: 1,\n    _smallDeviceSize: 1,\n    _mediumDeviceSize: 1,\n    _largeDeviceSize: 1\n  },\n  fields: [\"_layoutClass\"]\n});\n\nexport default _registerComponent(LightningLayoutItem, {\n  tmpl: _tmpl\n});","import { normalizeString } from 'lightning/utilsPrivate';\nimport { classSet } from 'lightning/utils';\nconst SIZE_MIN = 1;\nconst SIZE_MAX = 12;\nconst DEFAULT_LAYOUT_SIZE = {\n  default: null,\n  small: null,\n  medium: null,\n  large: null\n};\nconst PADDING = ['horizontal-small', 'horizontal-medium', 'horizontal-large', 'around-small', 'around-medium', 'around-large'];\nconst PADDING_CLASS = {\n  'slds-p-right_small': 'horizontal-small',\n  'slds-p-left_small': 'horizontal-small',\n  'slds-p-right_medium': 'horizontal-medium',\n  'slds-p-left_medium': 'horizontal-medium',\n  'slds-p-right_large': 'horizontal-large',\n  'slds-p-left_large': 'horizontal-large',\n  'slds-p-around_small': 'around-small',\n  'slds-p-around_medium': 'around-medium',\n  'slds-p-around_large': 'around-large'\n};\nconst FLEXIBILITY = ['auto', 'shrink', 'no-shrink', 'grow', 'no-grow', 'no-flex'];\nconst FLEX_CLASS = {\n  'slds-col': 'auto',\n  'slds-grow': 'grow',\n  'slds-shrink': 'shrink',\n  'slds-grow-none': 'no-grow',\n  'slds-shrink-none': 'no-shrink',\n  'slds-no-flex': 'no-flex'\n};\nconst SIZE_CLASS = {\n  default: 'slds-size_',\n  small: 'slds-small-size_',\n  medium: 'slds-medium-size_',\n  large: 'slds-large-size_'\n};\nconst DIRECTION = ['left', 'top', 'right', 'bottom'];\nexport const STYLE_ERROR = {\n  FLEX_CONFLICT: 'You cannot have `flexibility` value to be set to `auto` and `no-flex` together for <lightning-layout-item> component',\n  SIZE_RANGE: 'Invalid `size` attribute for <lightning-layout-item> component. The `size` attribute should be an integer between 1 and 12',\n  SMALL_SIZE_RANGE: 'Invalid `smallDeviceSize` attribute for <lightning-layout-item> component. The `smallDeviceSize` attribute should be an integer between 1 and 12',\n  MEDIUM_SIZE_RANGE: 'Invalid `mediumDeviceSize` attribute for <lightning-layout-item> component. The `mediumDeviceSize` attribute should be an integer between 1 and 12',\n  LARGE_SIZE_RANGE: 'Invalid `largeDeviceSize` attribute for <lightning-layout-item> component. The `largeDeviceSize` attribute should be an integer between 1 and 12',\n  SIZE_REQUIRED: 'You cannot have device specific size attributes for <lightning-layout-item> component without specifying the `size` attribute'\n};\n\nfunction hasConflict(value) {\n  return value.some(item => item === 'auto') && value.some(item => item === 'no-flex');\n}\n\nfunction toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  } else if (typeof value === 'string') {\n    value = value.split(',');\n    return value.map(item => item.trim());\n  }\n\n  return [value];\n}\n\nexport function normalizeDirection(value, fallback) {\n  value = value ? value.toLowerCase() : ' ';\n  return normalizeString(value, {\n    fallbackValue: fallback || '',\n    validValues: DIRECTION\n  });\n}\nexport function normalizePadding(value) {\n  value = value ? value.toLowerCase() : ' ';\n  return normalizeString(value, {\n    fallbackValue: ' ',\n    validValues: PADDING\n  });\n}\nexport function normalizeFlexibility(value) {\n  value = toArray(value);\n\n  if (hasConflict(value)) {\n    throw new Error(STYLE_ERROR.FLEX_CONFLICT);\n  }\n\n  return value.filter(item => FLEXIBILITY.some(allowed => item === allowed));\n}\nexport function normalizeSize(value) {\n  if (value != null) {\n    const size = parseFloat(value);\n    return isNaN(size) ? null : Math.round(size);\n  }\n\n  return value;\n}\n\nfunction computePaddingClass(padding, computedClass) {\n  computedClass = computedClass || classSet();\n  padding = padding || ' ';\n  Object.keys(PADDING_CLASS).forEach(key => {\n    if (PADDING_CLASS[key].toLowerCase() === padding) {\n      computedClass.add(key);\n    }\n  });\n  return computedClass;\n}\n\nfunction computeFlexibilityClass(flexibility, computedClass) {\n  computedClass = computedClass || classSet();\n  flexibility = flexibility || [];\n  Object.keys(FLEX_CLASS).forEach(key => {\n    if (flexibility.some(flex => flex === FLEX_CLASS[key])) {\n      computedClass.add(key);\n    }\n  });\n  return computedClass;\n}\n\nfunction computeSizeClass(layoutSize, computedClass) {\n  computedClass = computedClass || classSet();\n  layoutSize = layoutSize || DEFAULT_LAYOUT_SIZE;\n  Object.keys(SIZE_CLASS).forEach(key => {\n    const size = layoutSize[key];\n\n    if (size != null && size !== 0) {\n      computedClass.add(`${SIZE_CLASS[key]}${size}-of-12`);\n    }\n  });\n  return computedClass;\n}\n\nfunction computeBumpClass(direction, computedClass) {\n  computedClass = computedClass || classSet();\n  direction = direction || '';\n\n  if (direction !== '') {\n    computedClass.add(`slds-col_bump-${direction}`);\n  }\n\n  return computedClass;\n}\n\nexport function computeLayoutClass(layoutSize, flexibility, padding, bump) {\n  const computedClass = computePaddingClass(padding);\n  computeFlexibilityClass(flexibility, computedClass);\n  computeSizeClass(layoutSize, computedClass);\n  computeBumpClass(bump, computedClass);\n  return computedClass;\n}\nexport function validateSize(size, smallDeviceSize, mediumDeviceSize, largeDeviceSize) {\n  if (size != null && !(SIZE_MIN <= size && size <= SIZE_MAX)) {\n    throw new Error(STYLE_ERROR.SIZE_RANGE);\n  }\n\n  if (smallDeviceSize != null && !(SIZE_MIN <= smallDeviceSize && smallDeviceSize <= SIZE_MAX)) {\n    throw new Error(STYLE_ERROR.SMALL_SIZE_RANGE);\n  }\n\n  if (mediumDeviceSize != null && !(SIZE_MIN <= mediumDeviceSize && mediumDeviceSize <= SIZE_MAX)) {\n    throw new Error(STYLE_ERROR.MEDIUM_SIZE_RANGE);\n  }\n\n  if (largeDeviceSize && !(SIZE_MIN <= largeDeviceSize && largeDeviceSize <= SIZE_MAX)) {\n    throw new Error(STYLE_ERROR.LARGE_SIZE_RANGE);\n  }\n\n  if (size == null && (smallDeviceSize != null || mediumDeviceSize != null || largeDeviceSize != null)) {\n    throw new Error(STYLE_ERROR.SIZE_REQUIRED);\n  }\n\n  return true;\n}","function stylesheet(token, useActualHostSelector, useNativeDirPseudoclass) {\n  var shadowSelector = token ? (\"[\" + token + \"]\") : \"\";\n  var hostSelector = token ? (\"[\" + token + \"-host]\") : \"\";\n  return \"@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {.slds-slot\" + shadowSelector + \" {display: flex;}}\";\n  /*LWC compiler v2.13.0*/\n}\nexport default [stylesheet];","import _implicitStylesheets from \"./layout.css\";\n\nimport _implicitScopedStylesheets from \"./layout.scoped.css?scoped=true\";\n\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  classMap: {\n    \"slds-slot\": true\n  },\n  key: 0\n};\nconst stc1 = [];\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {s: api_slot} = $api;\n  return [api_slot(\"\", stc0, stc1, $slotset)];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.slots = [\"\"];\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-layout_layout\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./layout.html\";\nimport { normalizeParam, computeLayoutClass, HORIZONTAL_ALIGN, VERTICAL_ALIGN, BOUNDARY } from './styleUtils';\nimport { normalizeBoolean } from 'lightning/utilsPrivate';\n/**\n * Represents a responsive grid system for arranging containers on a page.\n */\n\nclass LightningLayout extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this._horizontalAlign = void 0;\n    this._verticalAlign = void 0;\n    this._pullToBoundary = void 0;\n    this._multipleRows = void 0;\n    this._layoutClass = [];\n  }\n\n  /**\n   * Determines how to spread the layout items horizontally.\n   * The alignment options are center, space, spread, and end.\n   * @type {string}\n   * @default\n   */\n  get horizontalAlign() {\n    return this._horizontalAlign;\n  }\n\n  set horizontalAlign(value) {\n    this._horizontalAlign = normalizeParam(value, HORIZONTAL_ALIGN);\n    this.updateClassList();\n  }\n\n  /**\n   * Determines how to align the layout items vertically in the container.\n   * The alignment options are start, center, end, and stretch.\n   * @type {string}\n   * @default\n   */\n  get verticalAlign() {\n    return this._verticalAlign;\n  }\n\n  set verticalAlign(value) {\n    this._verticalAlign = normalizeParam(value, VERTICAL_ALIGN);\n    this.updateClassList();\n  }\n\n  /**\n   * Pulls layout items to the layout boundaries and corresponds\n   * to the padding size on the layout item. Possible values are small, medium, or large.\n   * @type {string}\n   * @default\n   *\n   */\n  get pullToBoundary() {\n    return this._pullToBoundary;\n  }\n\n  set pullToBoundary(value) {\n    this._pullToBoundary = normalizeParam(value, BOUNDARY);\n    this.updateClassList();\n  }\n\n  /**\n   * If present, layout items wrap to the following line when they exceed the layout width.\n   * @type {boolean}\n   * @default false\n   */\n  get multipleRows() {\n    return this._multipleRows || false;\n  }\n\n  set multipleRows(value) {\n    this._multipleRows = normalizeBoolean(value);\n    this.updateClassList();\n  }\n\n  connectedCallback() {\n    this.updateClassList();\n  }\n\n  updateClassList() {\n    this.classList.remove(...this._layoutClass);\n    const config = computeLayoutClass(this.horizontalAlign, this.verticalAlign, this.pullToBoundary, this.multipleRows);\n    this._layoutClass = Object.keys(config);\n    this.classList.add(...this._layoutClass);\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningLayout, {\n  publicProps: {\n    horizontalAlign: {\n      config: 3\n    },\n    verticalAlign: {\n      config: 3\n    },\n    pullToBoundary: {\n      config: 3\n    },\n    multipleRows: {\n      config: 3\n    }\n  },\n  track: {\n    _horizontalAlign: 1,\n    _verticalAlign: 1,\n    _pullToBoundary: 1,\n    _multipleRows: 1\n  },\n  fields: [\"_layoutClass\"]\n});\n\nexport default _registerComponent(LightningLayout, {\n  tmpl: _tmpl\n});","import { normalizeString } from 'lightning/utilsPrivate';\nimport { classSet } from 'lightning/utils';\nconst HALIN_CLASS = {\n  center: 'slds-grid_align-center',\n  space: 'slds-grid_align-space',\n  spread: 'slds-grid_align-spread',\n  end: 'slds-grid_align-end'\n};\nconst VALIN_CLASS = {\n  start: 'slds-grid_vertical-align-start',\n  center: 'slds-grid_vertical-align-center',\n  end: 'slds-grid_vertical-align-end',\n  stretch: 'slds-grid_vertical-stretch'\n};\nconst BOUNDARY_CLASS = {\n  small: 'slds-grid_pull-padded',\n  medium: 'slds-grid_pull-padded-medium',\n  large: 'slds-grid_pull-padded-large'\n};\nexport const VERTICAL_ALIGN = Object.keys(VALIN_CLASS);\nexport const BOUNDARY = Object.keys(BOUNDARY_CLASS);\nexport const HORIZONTAL_ALIGN = Object.keys(HALIN_CLASS);\nconst ROWS_CLASS = 'slds-wrap';\nconst GRID_CLASS = 'slds-grid';\nexport function normalizeParam(value, valid, fallback) {\n  value = value ? value.toLowerCase() : ' ';\n  return normalizeString(value, {\n    fallbackValue: fallback || ' ',\n    validValues: valid || []\n  });\n}\nexport function computeLayoutClass(hAlign, vAlign, boundary, multiRows) {\n  const computedClass = classSet(GRID_CLASS);\n\n  if (hAlign !== ' ' && HALIN_CLASS[hAlign]) {\n    computedClass.add(HALIN_CLASS[hAlign]);\n  }\n\n  if (vAlign !== ' ' && VALIN_CLASS[vAlign]) {\n    computedClass.add(VALIN_CLASS[vAlign]);\n  }\n\n  if (boundary !== ' ' && BOUNDARY_CLASS[boundary]) {\n    computedClass.add(BOUNDARY_CLASS[boundary]);\n  }\n\n  if (multiRows) {\n    computedClass.add(ROWS_CLASS);\n  }\n\n  return computedClass;\n}","import { TransformBuilder } from './transformBuilder';\nexport class Constraint {\n  constructor(type, config) {\n    const {\n      target,\n      element,\n      pad,\n      boxDirections\n    } = config;\n    const {\n      horizontal,\n      vertical\n    } = config.targetAlign;\n    this._element = element;\n    this._targetElement = target;\n    this.destroyed = false;\n    this._transformer = new TransformBuilder().type(type).align(horizontal, vertical).pad(pad).boxDirections(boxDirections).build();\n  }\n\n  detach() {\n    this._disabled = true;\n  }\n\n  attach() {\n    this._disabled = false;\n  }\n\n  computeDisplacement() {\n    if (!this._disabled) {\n      this._targetElement.refresh();\n\n      this._element.refresh();\n\n      this._pendingBox = this._transformer.transform(this._targetElement, this._element);\n    }\n\n    return this;\n  }\n\n  computePosition() {\n    const el = this._element;\n\n    if (!this._disabled) {\n      Object.keys(this._pendingBox).forEach(key => {\n        el.setDirection(key, this._pendingBox[key]);\n      });\n    }\n\n    return this;\n  }\n\n  destroy() {\n    this._element.release();\n\n    this._targetElement.release();\n\n    this._disabled = true;\n    this.destroyed = true;\n  }\n\n}","import { normalizeString } from 'lightning/utilsPrivate';\nimport { WindowManager } from './util'; // TODO: Remove, not currently in use.\n\nconst ALIGN_REGEX = /^(left|right|center)\\s(top|bottom|center)$/;\nexport const Direction = {\n  Center: 'center',\n  Middle: 'middle',\n  Right: 'right',\n  Left: 'left',\n  Bottom: 'bottom',\n  Top: 'top',\n  Default: 'default'\n};\nconst VerticalMap = {\n  top: Direction.Top,\n  bottom: Direction.Bottom,\n  center: Direction.Middle\n};\nconst HorizontalMap = {\n  left: Direction.Left,\n  right: Direction.Right,\n  center: Direction.Center\n};\nconst FlipMap = {\n  left: Direction.Right,\n  right: Direction.Left,\n  top: Direction.Bottom,\n  bottom: Direction.Top,\n  center: Direction.Center,\n  default: Direction.Right\n};\n\nfunction getContainerSize(parent) {\n  if (parent) {\n    return parent.getBoundingClientRect();\n  }\n\n  const rect = {\n    width: WindowManager.window.innerWidth || document.body.clientWidth || 0,\n    height: WindowManager.window.innerHeight || document.body.clientHeight || 0,\n    top: 0,\n    left: 0\n  };\n  rect.bottom = rect.height;\n  rect.right = rect.width;\n  return rect;\n}\n\nexport function normalizeDirection(direction, defaultValue) {\n  return normalizeString(direction, {\n    fallbackValue: defaultValue || Direction.Default,\n    validValues: [Direction.Center, Direction.Right, Direction.Left, Direction.Bottom, Direction.Top, Direction.Middle, Direction.Default]\n  });\n}\nexport function mapToHorizontal(value) {\n  value = normalizeDirection(value, Direction.Left);\n  return HorizontalMap[value];\n}\nexport function mapToVertical(value) {\n  value = normalizeDirection(value, Direction.Left);\n  return VerticalMap[value];\n}\nexport function flipDirection(value) {\n  value = normalizeDirection(value, Direction.Left);\n  return FlipMap[value];\n} // TODO: Remove, not currently in use.\n\nexport function isValidDirection(value) {\n  return value && value.match(ALIGN_REGEX);\n}\nexport function checkFlipPossibility(parent, element, target, leftAsBoundary) {\n  const viewPort = getContainerSize(parent);\n  const windowViewPort = getContainerSize();\n  const elemRect = element.getBoundingClientRect();\n  const referenceElemRect = target.getBoundingClientRect();\n  const height = typeof elemRect.height !== 'undefined' ? elemRect.height : elemRect.bottom - elemRect.top;\n  const width = typeof elemRect.width !== 'undefined' ? elemRect.width : elemRect.right - elemRect.left; // TODO: We'll need to revisit the leftAsBoundary config property. Either we'll need a better\n  // name to cover the RTL language cases and maybe open up the possibility of bounding the\n  // element to the target in both the horizontal and vertical directions.\n  // The boundary shrinks the available area to the edge of the target rather than the viewport.\n\n  let rightAsBoundary = false;\n\n  if (document.dir === 'rtl') {\n    rightAsBoundary = leftAsBoundary;\n    leftAsBoundary = false;\n  } // Bug Fix for https://gus.lightning.force.com/lightning/r/ADM_Work__c/a07B0000008DxOhIAK/view\n  // If viewport is scrollableParent, then should count the top of scrollerParent,\n  // otherwise, window top is 0. no change to original logic.\n  // When used in console app, console's viewport is not window, but a scrollable div, then popup can be cut off easily.\n  // scrollable parent => if any parent element set overflow-y:auto, then inner element won't popup, unless use position:fix.\n\n\n  const aboveSpace = referenceElemRect.top - viewPort.top - height;\n  const belowSpace = viewPort.height - referenceElemRect.bottom - height; // If there is scrollable parent, always check aboveSpace > 0\n\n  const hasSpaceAbove = aboveSpace >= 0 || parent == null && belowSpace < 0 && aboveSpace > belowSpace;\n  const hasSpaceBelow = belowSpace >= 0 || aboveSpace < 0 && belowSpace > aboveSpace; // Assuming left alignment is specified this tests if:\n  // - there's room to accommodate the element with right alignment\n  //      - within the viewport, if parent present\n  // - there's not enough room to accommodate the element with left alignment\n\n  let shouldAlignToRight = false;\n\n  if (parent) {\n    shouldAlignToRight = referenceElemRect.right - viewPort.left >= width && referenceElemRect.left + width > (rightAsBoundary ? referenceElemRect.right : viewPort.width);\n  } else {\n    shouldAlignToRight = referenceElemRect.right >= width && referenceElemRect.left + width > (rightAsBoundary ? referenceElemRect.right : viewPort.width);\n  } // Assuming right alignment is specified this tests if:\n  // - there's room to accommodate the element with left alignment\n  //      - within the viewport if parent present\n  // - there's not enough room to accommodate the element with right alignment\n\n\n  let shouldAlignToLeft = false;\n\n  if (parent) {\n    shouldAlignToLeft = referenceElemRect.left + width <= viewPort.right && referenceElemRect.right - viewPort.left - width < (leftAsBoundary ? referenceElemRect.left : 0);\n  } else {\n    shouldAlignToLeft = referenceElemRect.left + width <= viewPort.width && referenceElemRect.right - width < (leftAsBoundary ? referenceElemRect.left : 0);\n  }\n\n  if (!shouldAlignToLeft && !shouldAlignToRight && parent) {\n    shouldAlignToRight = (referenceElemRect.right - viewPort.left >= width || referenceElemRect.right >= width) && referenceElemRect.left + width > (rightAsBoundary ? referenceElemRect.right : viewPort.width);\n    shouldAlignToLeft = (referenceElemRect.left + width <= viewPort.right || referenceElemRect.left + width <= windowViewPort.width) && referenceElemRect.right - width < (leftAsBoundary ? referenceElemRect.left : 0);\n  } // Assuming center alignment, does the viewport have space to fit half of the element around\n  // the target?\n\n\n  const centerOverflow = {\n    left: referenceElemRect.left - width * 0.5 < 0,\n    right: referenceElemRect.right + width * 0.5 > viewPort.width,\n    top: referenceElemRect.top - height * 0.5 < 0,\n    bottom: referenceElemRect.bottom + height * 0.5 > viewPort.height\n  };\n  return {\n    shouldAlignToLeft,\n    shouldAlignToRight,\n    hasSpaceAbove,\n    hasSpaceBelow,\n    centerOverflow\n  };\n}","import { isInDom, WindowManager } from './util';\nexport class ElementProxy {\n  constructor(el, id) {\n    this.id = id;\n    this.width = 0;\n    this.height = 0;\n    this.left = 0;\n    this.top = 0;\n    this.right = 0;\n    this.bottom = 0;\n    this._dirty = false;\n    this._node = null;\n    this._releaseCb = null;\n\n    if (!el) {\n      throw new Error('Element missing');\n    } // W-3262919\n    // for some reason I cannot figure out sometimes the\n    // window, which clearly a window object, is not the window object\n    // this will correct that. It might be related to locker\n\n\n    if (WindowManager.isWindow(el)) {\n      el = WindowManager.window;\n    }\n\n    this._node = el;\n    this.setupObserver();\n    this.refresh();\n  }\n\n  setupObserver() {\n    // this check is because phantomjs does not support\n    // mutation observers. The consqeuence here\n    // is that any browser without mutation observers will\n    // fail to update dimensions if they changwe after the proxy\n    // is created and the proxy is not not refreshed\n    if (WindowManager.MutationObserver && !this._node.isObserved) {\n      // Use mutation observers to invalidate cache. It's magic!\n      this._observer = new WindowManager.MutationObserver(this.refresh.bind(this)); // do not observe the window\n\n      if (!WindowManager.isWindow(this._node)) {\n        this._observer.observe(this._node, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n\n        this._node.isObserved = true;\n      }\n    }\n  }\n\n  setReleaseCallback(cb, scope) {\n    const scopeObj = scope || this;\n    this._releaseCb = cb.bind(scopeObj);\n  }\n\n  checkNodeIsInDom() {\n    // if underlying DOM node is gone,\n    // this proxy should be released\n    if (!isInDom(this._node)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  refresh() {\n    const w = WindowManager.window;\n\n    if (!this.isDirty()) {\n      if (!this.checkNodeIsInDom()) {\n        return this.release();\n      }\n\n      let box, x, scrollTop, scrollLeft;\n\n      if (typeof w.pageYOffset !== 'undefined') {\n        scrollTop = w.pageYOffset;\n        scrollLeft = w.pageXOffset;\n      } else {\n        scrollTop = w.scrollY;\n        scrollLeft = w.scrollX;\n      }\n\n      if (!WindowManager.isWindow(this._node)) {\n        // force paint\n        // eslint-disable-next-line no-unused-vars\n        const offsetHeight = this._node.offsetHeight;\n        box = this._node.getBoundingClientRect(); // not using integers causes weird rounding errors\n        // eslint-disable-next-line guard-for-in\n\n        for (x in box) {\n          this[x] = Math.floor(box[x]);\n        }\n\n        this.top = Math.floor(this.top + scrollTop);\n        this.bottom = Math.floor(this.top + box.height);\n        this.left = Math.floor(this.left + scrollLeft);\n        this.right = Math.floor(this.left + box.width);\n      } else {\n        box = {};\n        this.width = WindowManager.documentElement.clientWidth;\n        this.height = WindowManager.documentElement.clientHeight;\n        this.left = scrollLeft;\n        this.top = scrollTop;\n        this.right = WindowManager.documentElement.clientWidth + scrollLeft;\n        this.bottom = WindowManager.documentElement.clientHeight;\n      }\n\n      this._dirty = false;\n    }\n\n    return this._dirty;\n  }\n\n  getNode() {\n    return this._node;\n  }\n\n  isDirty() {\n    return this._dirty;\n  }\n\n  bake() {\n    const w = WindowManager.window;\n\n    const absPos = this._node.getBoundingClientRect();\n\n    const style = w.getComputedStyle(this._node) || this._node.style;\n\n    const hasPageOffset = typeof w.pageYOffset !== 'undefined';\n    const scrollTop = hasPageOffset ? w.pageYOffset : w.scrollY;\n    const scrollLeft = hasPageOffset ? w.pageXOffset : w.scrollX;\n    const originalLeft = style.left.match(/auto|fixed/) ? '0' : parseInt(style.left.replace('px', ''), 10);\n    const originalTop = style.top.match(/auto|fixed/) ? '0' : parseInt(style.top.replace('px', ''), 10);\n    let leftDif = Math.round(this.left - (absPos.left + scrollLeft));\n    const topDif = this.top - (absPos.top + scrollTop);\n    const viewPortWidth = w.innerWidth || document.body.clientWidth;\n    let rightPos = parseInt(style.right, 10);\n\n    if (originalLeft + leftDif + parseInt(style.width, 10) > viewPortWidth && rightPos <= 0) {\n      rightPos = rightPos < 0 ? -rightPos : leftDif;\n      this._node.style.right = -rightPos + 'px';\n      leftDif = 0;\n    }\n\n    this._node.style.left = `${originalLeft + leftDif}px`;\n    this._node.style.top = `${originalTop + topDif}px`;\n\n    if (this._restoreSize) {\n      // Only store the first height/width which is the original height/width.\n      if (this.originalHeight === undefined) {\n        this.originalHeight = this._node.style.height;\n      }\n\n      if (this.originalWidth === undefined) {\n        this.originalWidth = this._node.style.width;\n      }\n\n      this._node.style.width = `${this.width}px`;\n      this._node.style.height = `${this.height}px`;\n    }\n\n    this._dirty = false;\n  }\n\n  setDirection(direction, val) {\n    this[direction] = val;\n    this._dirty = true; // if size is changed, should restore the original size.\n\n    if (direction === 'height' || direction === 'width') {\n      this._restoreSize = true;\n    }\n  }\n\n  release() {\n    if (this._restoreSize) {\n      this._node.style.width = this.originalWidth;\n      this._node.style.height = this.originalHeight;\n\n      if (this._removeMinHeight) {\n        this._node.style.minHeight = '';\n      }\n    }\n\n    if (this._releaseCb) {\n      this._releaseCb(this);\n    } // Due to https://github.com/salesforce/lwc/pull/1423\n    // require to call disconnect explicitly.\n\n\n    if (this._observer) {\n      this._observer.disconnect();\n\n      this._observer = null;\n    }\n  }\n\n  querySelectorAll(selector) {\n    return this._node.querySelectorAll(selector);\n  }\n\n}","import { registerDecorators as _registerDecorators } from \"lwc\";\nimport { ElementProxy } from './elementProxy';\nimport { timeout, WindowManager, POSITION_ATTR_NAME } from './util';\nimport { assert } from 'lightning/utilsPrivate';\n\nclass ProxyCache {\n  constructor() {\n    this.proxyCache = {};\n  }\n\n  get count() {\n    return Object.keys(this.proxyCache).length;\n  }\n\n  releaseOrphanProxies() {\n    for (const proxy in this.proxyCache) {\n      if (!this.proxyCache[proxy].el.checkNodeIsInDom()) {\n        this.proxyCache[proxy].el.release();\n      }\n    }\n  }\n\n  bakeOff() {\n    for (const proxy in this.proxyCache) {\n      if (this.proxyCache[proxy].el.isDirty()) {\n        this.proxyCache[proxy].el.bake();\n      }\n    }\n  }\n\n  getReferenceCount(proxy) {\n    const id = proxy.id;\n\n    if (!id || !this.proxyCache[id]) {\n      return 0;\n    }\n\n    return this.proxyCache[id].refCount;\n  }\n\n  release(proxy) {\n    const proxyInstance = this.proxyCache[proxy.id];\n\n    if (proxyInstance) {\n      --proxyInstance.refCount;\n    }\n\n    if (proxyInstance && proxyInstance.refCount <= 0) {\n      delete this.proxyCache[proxy.id];\n    }\n  }\n\n  reset() {\n    this.proxyCache = {};\n  }\n\n  create(element) {\n    let key = 'window';\n\n    if (!WindowManager.isWindow(element)) {\n      key = element ? element.getAttribute(POSITION_ATTR_NAME) : null; // 1 - Node.ELEMENT_NODE, 11 - Node.DOCUMENT_FRAGMENT_NODE\n\n      assert(key && element.nodeType && (element.nodeType !== 1 || element.nodeType !== 11), `Element Proxy requires an element and has property ${POSITION_ATTR_NAME}`);\n    }\n\n    if (this.proxyCache[key]) {\n      this.proxyCache[key].refCount++;\n      return this.proxyCache[key].el;\n    }\n\n    const newProxy = new ElementProxy(element, key);\n    newProxy.setReleaseCallback(release, newProxy);\n    this.proxyCache[key] = {\n      el: newProxy,\n      refCount: 1\n    }; // run GC\n\n    timeout(0).then(() => {\n      this.releaseOrphanProxies();\n    });\n    return this.proxyCache[key].el;\n  }\n\n}\n\n_registerDecorators(ProxyCache, {\n  fields: [\"proxyCache\"]\n});\n\nconst elementProxyCache = new ProxyCache();\nexport function releaseOrphanProxies() {\n  return elementProxyCache.releaseOrphanProxies();\n}\nexport function bakeOff() {\n  elementProxyCache.bakeOff();\n}\nexport function getReferenceCount(proxy) {\n  return elementProxyCache.getReferenceCount(proxy);\n}\nexport function release(proxy) {\n  return elementProxyCache.release(proxy);\n}\nexport function reset() {\n  elementProxyCache.reset();\n}\nexport function createProxy(element) {\n  return elementProxyCache.create(element);\n}\nexport function count() {\n  return elementProxyCache.count;\n}","import { isShadowRoot } from './util';\nexport const OVERLAY_TYPE = {\n  NONE: 'none',\n  MODAL: 'uiModal',\n  DIALOG: 'lightning-dialog',\n  POPOVER: 'lightning-popover',\n  PANEL: 'uiPanel'\n};\nexport function isOverlay(element) {\n  const isDialog = element.localName === OVERLAY_TYPE.DIALOG;\n\n  if (isDialog) {\n    return OVERLAY_TYPE.DIALOG;\n  }\n\n  const isPopover = element.localName === OVERLAY_TYPE.POPOVER;\n\n  if (isPopover) {\n    return OVERLAY_TYPE.POPOVER;\n  }\n\n  const isModal = element.classList && element.classList.contains(OVERLAY_TYPE.MODAL);\n\n  if (isModal) {\n    return OVERLAY_TYPE.MODAL;\n  }\n\n  const isPanel = element.classList && element.classList.contains(OVERLAY_TYPE.PANEL);\n\n  if (isPanel) {\n    return OVERLAY_TYPE.PANEL;\n  }\n\n  return OVERLAY_TYPE.NONE;\n}\n\nfunction isInsideOverlay(element) {\n  if (!element) {\n    return {\n      isInside: false,\n      type: null,\n      overlay: null\n    };\n  }\n\n  const type = isOverlay(element);\n\n  if (type !== OVERLAY_TYPE.NONE) {\n    return {\n      isInside: true,\n      type,\n      overlay: element\n    };\n  }\n\n  if (!element.parentNode) {\n    return {\n      isInside: false,\n      type: null,\n      overlay: null\n    };\n  }\n\n  return isInsideOverlay(isShadowRoot(element.parentNode) ? element.parentNode.host : element.parentNode);\n}\n\nexport class OverlayDetector {\n  constructor(element) {\n    this._element = element;\n    this._detection = isInsideOverlay(this._element) || {\n      isInside: false,\n      overlay: null\n    };\n  }\n\n  get isInsideModal() {\n    return this.isInside && (this._detection.type === OVERLAY_TYPE.MODAL || this._detection.type === OVERLAY_TYPE.DIALOG);\n  }\n\n  get isInside() {\n    return this._detection.isInside;\n  }\n\n  get overlay() {\n    return this._detection.overlay;\n  }\n\n}","import { registerDecorators as _registerDecorators } from \"lwc\";\nexport { Direction } from './direction';\nimport { Constraint } from './constraint';\nimport { checkFlipPossibility, Direction, flipDirection, mapToHorizontal, mapToVertical, normalizeDirection } from './direction';\nimport { createProxy } from './elementProxyCache';\nimport { getPositionTarget, getScrollableParent, getScrollableParentFromEventPath, isDomNode, normalizeElement, normalizePosition, requestAnimationFrameAsPromise, WindowManager } from './util';\nimport { addConstraints, bindEvents, nextIndex, rebaseIndex, reposition, scheduleReposition } from './reposition';\nimport { assert } from 'lightning/utilsPrivate';\nimport { Relationship } from './relationship';\nimport { OverlayDetector } from './overlayDetector';\nconst DEFAULT_MIN_HEIGHT = '1.875rem';\n\nfunction setupObserver(config, scrollableParent) {\n  const observedElement = config.element;\n  let observer = null;\n\n  if (WindowManager.MutationObserver && !observedElement.isObserved) {\n    observer = new WindowManager.MutationObserver(() => {});\n    observer.observe(observedElement, {\n      attributes: true,\n      subtree: true,\n      childList: true\n    });\n    observedElement.isObserved = true;\n  }\n\n  if (scrollableParent) {\n    scrollableParent.addEventListener('scroll', scheduleReposition);\n\n    config.removeListeners = () => {\n      scrollableParent.removeEventListener('scroll', scheduleReposition);\n    };\n  }\n\n  return observer;\n}\n\nfunction validateConfig(config) {\n  assert(config.element && isDomNode(config.element), 'Element is undefined or missing, or not a Dom Node');\n  assert(config.target && (WindowManager.isWindow(config.target) || isDomNode(config.target)), 'Target is undefined or missing');\n}\n\nfunction createRelationship(originalConfig, disableReposition, eventComposedPath) {\n  bindEvents();\n  let scrollableParent = getScrollableParent(getPositionTarget(originalConfig.target), WindowManager.window);\n\n  if (!scrollableParent && eventComposedPath) {\n    scrollableParent = getScrollableParentFromEventPath(eventComposedPath);\n  }\n\n  const config = normalizeConfig(scrollableParent, originalConfig);\n\n  if (config.alignWidth && config.element.style.position === 'fixed') {\n    config.element.style.width = config.target.getBoundingClientRect().width + 'px';\n  }\n\n  const constraintList = []; // This observer and the test for scrolling children\n  // is so that if a panel contains a scroll we do not\n  // proxy the events to the \"parent\"  (actually the target's parent)\n\n  const observer = setupObserver(config, scrollableParent);\n\n  if (config.appendToBody) {\n    document.body.appendChild(config.element);\n  }\n\n  config.element = createProxy(config.element);\n  config.target = createProxy(config.target); // Add horizontal constraint.\n\n  const horizontalConfig = Object.assign({}, config);\n\n  if (horizontalConfig.padLeft !== undefined) {\n    horizontalConfig.pad = horizontalConfig.padLeft;\n  } // Add vertical constraint.\n\n\n  const verticalConfig = Object.assign({}, config);\n\n  if (verticalConfig.padTop !== undefined) {\n    verticalConfig.pad = verticalConfig.padTop;\n  }\n\n  constraintList.push(new Constraint(mapToHorizontal(config.align.horizontal), horizontalConfig));\n  constraintList.push(new Constraint(mapToVertical(config.align.vertical), verticalConfig));\n  const autoShrink = config.autoShrink.height || config.autoShrink.width;\n\n  if (config.scrollableParentBound && scrollableParent) {\n    const parent = normalizeElement(scrollableParent);\n    const boxConfig = {\n      element: config.element,\n      enabled: config.enabled,\n      target: createProxy(parent),\n      align: {},\n      targetAlign: {},\n      pad: 3,\n      boxDirections: {\n        top: true,\n        bottom: true,\n        left: true,\n        right: true\n      }\n    };\n\n    if (autoShrink) {\n      const style = boxConfig.element.getNode().style;\n\n      if (!style.minHeight) {\n        style.minHeight = config.minHeight;\n        boxConfig.element._removeMinHeight = true;\n      }\n\n      boxConfig.boxDirections = {\n        top: !!config.autoShrink.height,\n        bottom: !!config.autoShrink.height,\n        left: !!config.autoShrink.width,\n        right: !!config.autoShrink.width\n      };\n      constraintList.push(new Constraint('shrinking box', boxConfig));\n    } else {\n      constraintList.push(new Constraint('bounding box', boxConfig));\n    }\n  }\n\n  if (config.keepInViewport) {\n    constraintList.push(new Constraint('bounding box', {\n      element: config.element,\n      enabled: config.enabled,\n      target: createProxy(window),\n      align: {},\n      targetAlign: {},\n      pad: 3,\n      boxDirections: {\n        top: true,\n        bottom: true,\n        left: true,\n        right: true\n      }\n    }));\n  }\n\n  addConstraints(constraintList);\n\n  if (!disableReposition) {\n    reposition();\n  }\n\n  return new Relationship(config, constraintList, scrollableParent, observer);\n}\n\nfunction isAutoFlipHorizontal(config) {\n  return config.autoFlip || config.autoFlipHorizontal;\n}\n\nfunction isAutoFlipVertical(config) {\n  return config.autoFlip || config.autoFlipVertical;\n}\n\nfunction normalizeAlignments(config, flipConfig) {\n  const align = {\n    horizontal: config.align.horizontal,\n    vertical: config.align.vertical\n  };\n  const targetAlign = {\n    horizontal: config.targetAlign.horizontal,\n    vertical: config.targetAlign.vertical\n  }; // Horizontal alignments flip for RTL languages.\n\n  if (document.dir === 'rtl') {\n    align.horizontal = flipDirection(align.horizontal);\n    targetAlign.horizontal = flipDirection(targetAlign.horizontal);\n  } // When using the autoFlip flags with center alignment, we change the element alignment to fit\n  // within the viewport when it's detected that it overflows the edge of the viewport.\n\n\n  let vFlip = false;\n\n  if (isAutoFlipVertical(config)) {\n    if (align.vertical === Direction.Bottom) {\n      vFlip = !flipConfig.hasSpaceAbove && flipConfig.hasSpaceBelow;\n    } else if (align.vertical === Direction.Top) {\n      vFlip = flipConfig.hasSpaceAbove && !flipConfig.hasSpaceBelow;\n    } else if (align.vertical === Direction.Center) {\n      if (flipConfig.centerOverflow.top && !flipConfig.centerOverflow.bottom) {\n        align.vertical = targetAlign.vertical = Direction.Top;\n      } else if (flipConfig.centerOverflow.bottom && !flipConfig.centerOverflow.top) {\n        align.vertical = targetAlign.vertical = Direction.Bottom;\n      }\n    }\n  }\n\n  let hFlip = false;\n\n  if (isAutoFlipHorizontal(config)) {\n    if (align.horizontal === Direction.Left) {\n      hFlip = flipConfig.shouldAlignToRight && !flipConfig.shouldAlignToLeft;\n    } else if (align.horizontal === Direction.Right) {\n      hFlip = flipConfig.shouldAlignToLeft && !flipConfig.shouldAlignToRight;\n    } else if (align.horizontal === Direction.Center) {\n      if (flipConfig.centerOverflow.left && !flipConfig.centerOverflow.right) {\n        align.horizontal = targetAlign.horizontal = Direction.Left;\n      } else if (flipConfig.centerOverflow.right && !flipConfig.centerOverflow.left) {\n        align.horizontal = targetAlign.horizontal = Direction.Right;\n      }\n    }\n  }\n\n  return {\n    align: {\n      horizontal: hFlip ? flipDirection(align.horizontal) : normalizeDirection(align.horizontal, Direction.Left),\n      vertical: vFlip ? flipDirection(align.vertical) : normalizeDirection(align.vertical, Direction.Top)\n    },\n    targetAlign: {\n      horizontal: hFlip ? flipDirection(targetAlign.horizontal) : normalizeDirection(targetAlign.horizontal, Direction.Left),\n      vertical: vFlip ? flipDirection(targetAlign.vertical) : normalizeDirection(targetAlign.vertical, Direction.Bottom)\n    }\n  };\n}\n\nfunction normalizeConfig(parent, config) {\n  config.align = config.align || {};\n  config.targetAlign = config.targetAlign || {};\n  const flipConfig = checkFlipPossibility(config.overlay.isInside ? null : parent, // For modal/panel, dialog/popover, should always popup.\n  // And consider window is the viewport, ignore scrollable parent.\n  // Otherwise, when stay on flat page, should use scrollable parent as viewpoint.\n  config.element, config.target, config.leftAsBoundary);\n  const {\n    align,\n    targetAlign\n  } = normalizeAlignments(config, flipConfig); // When inside modal, element may expand out of the viewport and be cut off.\n  // So if inside modal, and don't have enough space above or below, will add bounding box rule.\n  // IMPORTANT: config.isInsideModal is for element, not target.\n\n  if (config.isInsideModal && !flipConfig.hasSpaceAbove && !flipConfig.hasSpaceBelow) {\n    config.scrollableParentBound = true;\n  }\n\n  return {\n    target: config.target,\n    element: config.element,\n    align,\n    targetAlign,\n    alignWidth: config.alignWidth,\n    scrollableParentBound: config.scrollableParentBound,\n    keepInViewport: config.keepInViewport,\n    pad: config.pad,\n    padTop: config.padTop,\n    padLeft: config.padLeft,\n    autoShrink: {\n      height: config.autoShrink || config.autoShrinkHeight,\n      width: config.autoShrink || config.autoShrinkWidth\n    },\n    minHeight: config.minHeight || DEFAULT_MIN_HEIGHT\n  };\n}\n\nfunction toElement(root, target) {\n  if (target && typeof target === 'string') {\n    return root.querySelector(target);\n  } else if (target && typeof target === 'function') {\n    return target();\n  }\n\n  return target;\n}\n\nexport function startPositioning(root, config, disableReposition) {\n  assert(root, 'Root is undefined or missing');\n  assert(config, 'Config is undefined or missing');\n  const node = normalizeElement(root);\n  const target = toElement(node, config.target);\n  const element = toElement(node, config.element); // when target/element is selector, there is chance, dom isn't present anymore.\n\n  if (!target || !element) {\n    return null;\n  }\n\n  config.target = normalizeElement(target);\n  config.element = normalizeElement(element); // Check if element is inside modal overlay.\n\n  const result = new OverlayDetector(config.element); // IMPORTANT: config.isInsideModal will be used to decide if element should use modal as viewport.\n\n  config.isInsideModal = result.isInsideModal; // stackManager will increase the zIndex too.\n  // if detect inside modal, read modal zIndex and rebase to it.\n\n  if (config.isInsideModal && result.overlay) {\n    const index = parseInt(result.overlay.style.zIndex, 10);\n    rebaseIndex(index);\n  } // Also should check if target inside modal too.\n\n\n  const targetResult = new OverlayDetector(config.target); // if detect target is inside modal, read modal zindex and rebase to it.\n  // for example, lightning-helptext, lightning-primitive-bubble by default is global.\n  // So it won't be in any modal. For other use case, target and element is inside same modal.\n\n  if (targetResult.isInsideModal && targetResult.overlay) {\n    const index = parseInt(targetResult.overlay.style.zIndex, 10);\n    rebaseIndex(index);\n  } // Element absolute / fixed must be set prior to getBoundingClientRect call or\n  // the scrollable parent (usually due to uiModal/uiPanel) will push the page down.\n\n\n  const overlayCheck = normalizePosition(config.element, result, nextIndex(), config.target, config.alignWidth);\n  config.element = overlayCheck.element;\n  config.overlay = overlayCheck.overlay;\n  validateConfig(config);\n  const relationship = createRelationship(config, disableReposition); // Scroll regions within a shadowRoot are skipped while traversing parent nodes.\n  // Components that contain a scroll region in their template\n  // must handle the `privatescrollablecontainer` event and execute the callback with the event path.\n  // The event path is used to find the scrollable parent and the constraints\n  // for positioning are set according to this element.\n  // Usage in parent component with scroll region:\n  // addEventListener('privatescrollablecontainer', (event) => {\n  //     const { callback } = event.detail;\n  //     callback(event.composedPath());\n  //     event.stopPropagation();\n  // });\n\n  root.dispatchEvent(new CustomEvent('privatescrollablecontainer', {\n    composed: true,\n    bubbles: true,\n    detail: {\n      callback: eventComposedPath => {\n        var updatedReltnWrtoScrollParent = createRelationship(config, disableReposition, eventComposedPath);\n        relationship.config.align.horizontal = updatedReltnWrtoScrollParent.config.align.horizontal;\n        relationship.config.align.vertical = updatedReltnWrtoScrollParent.config.align.vertical;\n      }\n    }\n  }));\n  return relationship;\n}\nexport function stopPositioning(relationship) {\n  if (relationship) {\n    relationship.destroy();\n  }\n}\nexport class AutoPosition {\n  constructor(root) {\n    this._autoPositionUpdater = null;\n    this._root = root;\n  }\n\n  start(config) {\n    return requestAnimationFrameAsPromise().then(() => {\n      let promise = Promise.resolve();\n\n      if (!this._autoPositionUpdater) {\n        this._autoPositionUpdater = startPositioning(this._root, config);\n      } else {\n        promise = promise.then(() => {\n          return this._autoPositionUpdater.reposition();\n        });\n      }\n\n      return promise.then(() => {\n        return this._autoPositionUpdater;\n      });\n    });\n  }\n\n  stop() {\n    if (this._autoPositionUpdater) {\n      stopPositioning(this._autoPositionUpdater);\n      this._autoPositionUpdater = null;\n    }\n\n    return Promise.resolve();\n  }\n\n}\n\n_registerDecorators(AutoPosition, {\n  fields: [\"_autoPositionUpdater\"]\n});","import { reposition } from './reposition';\nimport { POSITION_ATTR_NAME } from './util';\nexport class Relationship {\n  constructor(config, constraintList, scrollableParent, observer) {\n    this.config = config;\n    this.constraintList = constraintList;\n    this.scrollableParent = scrollableParent;\n    this.observer = observer;\n  }\n\n  disable() {\n    this.constraintList.forEach(constraintToDisable => {\n      constraintToDisable.detach();\n    });\n  }\n\n  enable() {\n    this.constraintList.forEach(constraintToEnable => {\n      constraintToEnable.attach();\n    });\n  }\n\n  destroy() {\n    if (this.config.removeListeners) {\n      this.config.removeListeners();\n      this.config.removeListeners = undefined;\n    }\n\n    while (this.constraintList.length > 0) {\n      this.constraintList.pop().destroy();\n    } // Clean up node appended to body of dom\n\n\n    if (this.config.appendToBody && this.config.element) {\n      // eslint-disable-next-line @lwc/lwc/no-document-query\n      const nodeToRemove = document.querySelector(`[${POSITION_ATTR_NAME}=\"${this.config.element.getAttribute(POSITION_ATTR_NAME)}\"]`);\n\n      if (nodeToRemove) {\n        nodeToRemove.parentNode.removeChild(nodeToRemove);\n      }\n    } // Due to https://github.com/salesforce/lwc/pull/1423\n    // require to call disconnect explicitly.\n\n\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n\n  reposition() {\n    return new Promise(resolve => {\n      reposition(() => {\n        resolve();\n      });\n    });\n  }\n\n}","import { registerDecorators as _registerDecorators } from \"lwc\";\nimport { bakeOff } from './elementProxyCache';\nimport { getZIndexBaseline } from 'lightning/utilsPrivate';\n\nclass RepositionQueue {\n  constructor() {\n    this.callbacks = [];\n    this.repositionScheduled = false;\n    this._constraints = [];\n    this.timeoutId = 0;\n    this.lastIndex = getZIndexBaseline();\n    this.eventsBound = false;\n  }\n\n  get nextIndex() {\n    return this.lastIndex++;\n  }\n\n  get constraints() {\n    return this._constraints;\n  }\n\n  set constraints(value) {\n    this._constraints = this._constraints.concat(value);\n  }\n\n  dispatchRepositionCallbacks() {\n    while (this.callbacks.length > 0) {\n      this.callbacks.shift()();\n    }\n  }\n\n  add(callback) {\n    if (typeof callback === 'function') {\n      this.callbacks.push(callback);\n      return true;\n    }\n\n    return false;\n  }\n\n  scheduleReposition(callback) {\n    if (this.timeoutId === 0) {\n      // eslint-disable-next-line @lwc/lwc/no-async-operation\n      this.timeoutId = setTimeout(() => {\n        this.reposition(callback);\n      }, 10);\n    }\n  }\n\n  reposition(callback) {\n    // all the callbacks will be called\n    if (typeof callback === 'function') {\n      this.callbacks.push(callback);\n    } // this is for throttling\n\n\n    clearTimeout(this.timeoutId);\n    this.timeoutId = 0; // this semaphore is to make sure\n    // if reposition is called twice within one frame\n    // we only run this once\n\n    if (!this.repositionScheduled) {\n      // eslint-disable-next-line @lwc/lwc/no-async-operation\n      requestAnimationFrame(() => {\n        this.repositionScheduled = false; // this must be executed in order or constraints\n        // will behave oddly\n\n        this._constraints = this._constraints.filter(constraint => {\n          if (!constraint.destroyed) {\n            constraint.computeDisplacement().computePosition();\n            return true;\n          }\n\n          return false;\n        });\n        bakeOff();\n        this.dispatchRepositionCallbacks();\n      });\n      this.repositionScheduled = true;\n    }\n  }\n\n  get repositioning() {\n    if (!this._reposition) {\n      this._reposition = this.scheduleReposition.bind(this);\n    }\n\n    return this._reposition;\n  }\n\n  bindEvents() {\n    if (!this.eventsBound) {\n      window.addEventListener('resize', this.repositioning);\n      window.addEventListener('scroll', this.repositioning);\n      this.eventsBound = true;\n    }\n  }\n\n  detachEvents() {\n    window.removeEventListener('resize', this.repositioning);\n    window.removeEventListener('scroll', this.repositioning);\n    this.eventsBound = false;\n  }\n\n  rebase(index) {\n    if (this.lastIndex <= index) {\n      this.lastIndex = index + 1;\n    }\n  }\n\n}\n\n_registerDecorators(RepositionQueue, {\n  fields: [\"callbacks\", \"repositionScheduled\", \"_constraints\", \"timeoutId\", \"lastIndex\", \"eventsBound\"]\n});\n\nconst positionQueue = new RepositionQueue();\nexport function scheduleReposition(callback) {\n  positionQueue.scheduleReposition(callback);\n}\nexport function bindEvents() {\n  positionQueue.bindEvents();\n}\nexport function addConstraints(list) {\n  positionQueue.constraints = list;\n}\nexport function reposition(callback) {\n  positionQueue.reposition(callback);\n}\nexport function nextIndex() {\n  return positionQueue.nextIndex;\n}\nexport function rebaseIndex(index) {\n  return positionQueue.rebase(index);\n}","import { Transformers, toTransformFunctions } from './transformers';\nimport { Direction } from './direction';\nexport class TransformBuilder {\n  type(value) {\n    this._type = value;\n    return this;\n  }\n\n  align(horizontal, vertical) {\n    this._transformX = toTransformFunctions(horizontal);\n    this._transformY = toTransformFunctions(vertical);\n    return this;\n  }\n\n  pad(value) {\n    this._pad = parseInt(value, 10);\n    return this;\n  }\n\n  boxDirections(value) {\n    this._boxDirections = value;\n    return this;\n  }\n\n  build() {\n    const AConstructor = Transformers[this._type] ? Transformers[this._type] : Transformers[Direction.Default];\n    return new AConstructor(this._pad || 0, this._boxDirections || {}, this._transformX || toTransformFunctions(Direction.left), this._transformY || toTransformFunctions(Direction.left));\n  }\n\n}","class Transformer {\n  constructor(pad, boxDirections, transformX, transformY) {\n    this.pad = pad || 0;\n    this.boxDirections = boxDirections || {\n      left: true,\n      right: true\n    };\n\n    this.transformX = transformX || function () {};\n\n    this.transformY = transformY || function () {};\n  }\n\n  transform() {// no-op\n  }\n\n}\n\nclass TopTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    return {\n      top: Math.floor(this.transformY(targetBox.top, targetBox, elementBox) + this.pad)\n    };\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nclass BottomTransFormer extends Transformer {\n  transform(targetBox, elementBox) {\n    return {\n      top: Math.floor(this.transformY(targetBox.top, targetBox, elementBox) - elementBox.height - this.pad)\n    };\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nclass CenterTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    return {\n      left: Math.floor(this.transformX(targetBox.left, targetBox, elementBox) - 0.5 * elementBox.width)\n    };\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nclass MiddleTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    return {\n      top: Math.floor(0.5 * (2 * targetBox.top + targetBox.height - elementBox.height))\n    };\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nexport class LeftTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    return {\n      left: Math.floor(this.transformX(targetBox.left, targetBox, elementBox) + this.pad)\n    };\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nclass RightTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    return {\n      left: Math.floor(this.transformX(targetBox.left, targetBox, elementBox) - elementBox.width - this.pad)\n    };\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nclass BelowTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    const top = targetBox.top + targetBox.height + this.pad;\n    return elementBox.top < top ? {\n      top\n    } : {};\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nconst MIN_HEIGHT = 36; // Minimum Line Height\n\nconst MIN_WIDTH = 36;\n\nclass ShrinkingBoxTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    const retBox = {};\n\n    if (this.boxDirections.top && elementBox.top < targetBox.top + this.pad) {\n      retBox.top = targetBox.top + this.pad;\n      retBox.height = Math.max(elementBox.height - (retBox.top - elementBox.top), MIN_HEIGHT);\n    }\n\n    if (this.boxDirections.left && elementBox.left < targetBox.left + this.pad) {\n      retBox.left = targetBox.left + this.pad;\n      retBox.width = Math.max(elementBox.width - (retBox.left - elementBox.left), MIN_WIDTH);\n    }\n\n    if (this.boxDirections.right && elementBox.left + elementBox.width > targetBox.left + targetBox.width - this.pad) {\n      retBox.right = targetBox.left + targetBox.width - this.pad;\n      retBox.width = Math.max(retBox.right - (retBox.left || elementBox.left), MIN_WIDTH);\n    }\n\n    if (this.boxDirections.bottom && elementBox.top + elementBox.height > targetBox.top + targetBox.height - this.pad) {\n      retBox.bottom = targetBox.top + targetBox.height - this.pad;\n      retBox.height = Math.max(retBox.bottom - (retBox.top || elementBox.top), MIN_HEIGHT);\n    }\n\n    return retBox;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nclass BoundingBoxTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    const retBox = {};\n\n    if (this.boxDirections.top && elementBox.top < targetBox.top + this.pad) {\n      retBox.top = targetBox.top + this.pad;\n    }\n\n    if (this.boxDirections.left && elementBox.left < targetBox.left + this.pad) {\n      retBox.left = targetBox.left + this.pad;\n    }\n\n    if (this.boxDirections.right && elementBox.left + elementBox.width > targetBox.left + targetBox.width - this.pad) {\n      retBox.left = targetBox.left + targetBox.width - elementBox.width - this.pad;\n    }\n\n    if (this.boxDirections.bottom && elementBox.top + elementBox.height > targetBox.top + targetBox.height - this.pad) {\n      retBox.top = targetBox.top + targetBox.height - elementBox.height - this.pad;\n    }\n\n    return retBox;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nclass InverseBoundingBoxTransformer extends Transformer {\n  transform(targetBox, elementBox) {\n    const retBox = {};\n\n    if (this.boxDirections.left && targetBox.left - this.pad < elementBox.left) {\n      retBox.left = targetBox.left - this.pad;\n    }\n\n    if (this.boxDirections.right && elementBox.left + elementBox.width < targetBox.left + targetBox.width + this.pad) {\n      retBox.left = targetBox.width + this.pad - elementBox.width + targetBox.left;\n    }\n\n    if (this.boxDirections.top && targetBox.top < elementBox.top + this.pad) {\n      retBox.top = targetBox.top - this.pad;\n    }\n\n    if (this.boxDirections.bottom && elementBox.top + elementBox.height < targetBox.top + targetBox.height + this.pad) {\n      retBox.top = targetBox.height + this.pad - elementBox.height + targetBox.top;\n    }\n\n    return retBox;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nconst TransformFunctions = {\n  center(input, targetBox) {\n    return Math.floor(input + 0.5 * targetBox.width);\n  },\n\n  right(input, targetBox) {\n    return input + targetBox.width;\n  },\n\n  left(input) {\n    return input;\n  },\n\n  bottom(input, targetBox) {\n    return input + targetBox.height;\n  }\n\n};\nexport const Transformers = {\n  top: TopTransformer,\n  bottom: BottomTransFormer,\n  center: CenterTransformer,\n  middle: MiddleTransformer,\n  left: LeftTransformer,\n  right: RightTransformer,\n  below: BelowTransformer,\n  'bounding box': BoundingBoxTransformer,\n  'shrinking box': ShrinkingBoxTransformer,\n  'inverse bounding box': InverseBoundingBoxTransformer,\n  default: Transformer\n};\nexport function toTransformFunctions(value) {\n  return TransformFunctions[value] || TransformFunctions.left;\n}","import { assert } from 'lightning/utilsPrivate';\nimport dir from '@salesforce/i18n/dir';\nexport const POSITION_ATTR_NAME = 'data-position-id';\n\nclass BrowserWindow {\n  get window() {\n    if (!this._window) {\n      this._window = window; // JTEST/Ingtegration: getComputedStyle may be null\n\n      if (!this.window.getComputedStyle) {\n        this.window.getComputedStyle = node => {\n          return node.style;\n        };\n      }\n    }\n\n    return this._window;\n  }\n\n  mockWindow(value) {\n    // For test, allow mock window.\n    this._window = value;\n  }\n\n  get documentElement() {\n    assert(this.window.document, 'Missing window.document');\n    return this.window.document.documentElement;\n  }\n\n  get MutationObserver() {\n    return this.window.MutationObserver;\n  }\n\n  isWindow(element) {\n    return element && element.toString() === '[object Window]';\n  }\n\n}\n\nexport const WindowManager = new BrowserWindow();\nexport function isShadowRoot(node) {\n  return node && node.nodeType === 11;\n}\n\nfunction enumerateParent(elem, stopEl, checker) {\n  // document.body is not necessarily a body tag, because of the (very rare)\n  // case of a frameset.\n  if (!elem || elem === stopEl || elem === document.body) {\n    return null;\n  } // if overflow is auto and overflow-y is also auto,\n  // however in firefox the opposite is not true\n\n\n  try {\n    // getComputedStyle throws an exception\n    // if elem is not an element\n    // (can happen during unrender)\n    const computedStyle = WindowManager.window.getComputedStyle(elem);\n\n    if (!computedStyle) {\n      return null;\n    }\n\n    if (checker(computedStyle)) {\n      return elem;\n    }\n\n    return enumerateParent(isShadowRoot(elem.parentNode) ? elem.parentNode.host : elem.parentNode, stopEl, checker);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function getScrollableParent(elem, stopEl) {\n  return enumerateParent(elem, stopEl, computedStyle => {\n    const overflow = computedStyle['overflow-y'];\n    return overflow === 'auto' || overflow === 'scroll';\n  });\n}\nexport function getScrollableParentFromEventPath(eventPath) {\n  var computedStyle;\n  var overflow;\n\n  for (let i = 0; i < eventPath.length; i++) {\n    let element = eventPath[i];\n\n    if (element instanceof HTMLElement) {\n      computedStyle = WindowManager.window.getComputedStyle(element);\n      overflow = computedStyle['overflow-y'];\n\n      if (overflow === 'auto' || overflow === 'scroll') {\n        return element;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction queryOverflowHiddenParent(elem, stopEl) {\n  return enumerateParent(elem, stopEl, computedStyle => {\n    return computedStyle['overflow-x'] === 'hidden' || computedStyle['overflow-y'] === 'hidden';\n  });\n}\n\nexport function isInDom(el) {\n  if (el === WindowManager.window) {\n    return true;\n  }\n\n  if (!isShadowRoot(el.parentNode) && el.parentNode && el.parentNode.tagName && el.parentNode.tagName.toUpperCase() === 'BODY') {\n    return true;\n  }\n\n  if (isShadowRoot(el.parentNode) && el.parentNode.host) {\n    return isInDom(el.parentNode.host);\n  }\n\n  if (el.parentNode) {\n    return isInDom(el.parentNode);\n  }\n\n  return false;\n}\nexport function isScrolling(elem) {\n  return elem.scrollHeight > elem.clientHeight;\n}\nexport function isDomNode(obj) {\n  return obj.nodeType && (obj.nodeType === 1 || obj.nodeType === 11);\n}\nexport function computeAbsPos(target) {\n  const val = {\n    top: target.offsetTop,\n    left: target.offsetLeft\n  };\n\n  if (target.offsetParent) {\n    const val2 = computeAbsPos(target.offsetParent);\n    val.top += val2.top;\n    val.left += val2.left;\n  }\n\n  return val;\n}\nexport function timeout(time) {\n  return new Promise(resolve => {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\nexport function containsScrollingElement(list) {\n  const len = list.length;\n\n  if (!len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    if (isScrolling(list[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function queryScrollableChildren(element) {\n  return element.querySelectorAll('[data-scoped-scroll=\"true\"]');\n}\nexport function getPositionTarget(element) {\n  return element.tagName === 'TEXTAREA' ? isShadowRoot(element.parentNode) ? element.parentNode.host : element.parentNode : element;\n}\nlet lastId = 1000000;\nexport function generateUniqueSelector() {\n  return `lgcp-${lastId++}`;\n}\nexport function normalizeElement(element) {\n  const selector = generateUniqueSelector();\n  element.setAttribute(POSITION_ATTR_NAME, selector);\n  element = // eslint-disable-next-line @lwc/lwc/no-document-query\n  document.querySelector(`[${POSITION_ATTR_NAME}=\"${selector}\"]`) || element;\n  return element;\n}\nexport function normalizePosition(element, overlay, nextIndex, target, alignWidth) {\n  // Set element position to fixed\n  // 1. element is inside overlay\n  // or 2. When element isn't align with target's width, and target's parent has overflow-x:hidden setting.\n  const isFixed = overlay.isInside || !alignWidth && queryOverflowHiddenParent(target, WindowManager.window, true);\n  element.style.position = isFixed ? 'fixed' : 'absolute';\n  element.style.zIndex = nextIndex || 0; // W-8042285 For RTL, left is positive value instead of negative.\n\n  element.style.left = dir === 'rtl' ? '99999px' : '-9999px'; // Avoid flicker\n  // we always position from the left, but in RTL mode Omakase swaps left and right properties.\n  // To always allow positioning from the left we set right to auto so position library can do its work.\n\n  element.style.right = 'auto';\n  element.style.top = '0px'; // Avoid flicker\n\n  return {\n    element,\n    overlay\n  };\n}\nexport function requestAnimationFrameAsPromise() {\n  return new Promise(resolve => {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    requestAnimationFrame(() => resolve());\n  });\n}","import _implicitStylesheets from \"./primitiveBubble.css\";\n\nimport _implicitScopedStylesheets from \"./primitiveBubble.scoped.css?scoped=true\";\n\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  \"slds-popover__body\": true\n};\nconst stc1 = {\n  lwc: {\n    dom: \"manual\"\n  }\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {b: api_bind, h: api_element} = $api;\n  const {_m0} = $ctx;\n  return [api_element(\"div\", {\n    classMap: stc0,\n    context: stc1,\n    key: 0,\n    on: {\n      \"mouseleave\": _m0 || ($ctx._m0 = api_bind($cmp.handleMouseLeave))\n    }\n  })];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-primitiveBubble_primitiveBubble\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./primitiveBubble.html\";\nimport { classSet } from 'lightning/utils';\nimport { classListMutation } from 'lightning/utilsPrivate';\nconst DEFAULT_ALIGN = {\n  horizontal: 'left',\n  vertical: 'bottom'\n};\n\nclass LightningPrimitiveBubble extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      contentId: ''\n    };\n    this.divElement = void 0;\n  }\n\n  get contentId() {\n    return this.state.contentId;\n  }\n\n  set contentId(value) {\n    this.state.contentId = value;\n\n    if (this.state.inDOM) {\n      this.divEl.setAttribute('id', this.state.contentId);\n    }\n  }\n\n  connectedCallback() {\n    this.updateClassList();\n    this.setAttribute('role', 'tooltip');\n    this.state.inDOM = true;\n  }\n\n  disconnectedCallback() {\n    this.state.inDOM = false;\n  }\n\n  renderedCallback() {\n    // set content manually once rendered\n    // - this is required to avoid the content update being in the wrong 'tick'\n    this.setContentManually();\n    this.setIdManually();\n  }\n\n  set content(value) {\n    this.state.content = value;\n\n    if (this.state.inDOM) {\n      this.setContentManually();\n    }\n  }\n\n  get content() {\n    return this.state.content || '';\n  }\n\n  get align() {\n    return this.state.align || DEFAULT_ALIGN;\n  }\n\n  set align(value) {\n    this.state.align = value;\n    this.updateClassList();\n  }\n\n  get visible() {\n    return this.state.visible;\n  }\n\n  set visible(value) {\n    this.state.visible = value;\n    this.updateClassList();\n  }\n\n  setIdManually() {\n    this.setAttribute('id', this.state.contentId);\n  } // manually set the content value\n\n\n  setContentManually() {\n    /* manipulate DOM directly */\n    this.template.querySelector('.slds-popover__body').textContent = this.state.content;\n  } // compute class value for this bubble\n\n\n  updateClassList() {\n    const classes = classSet('slds-popover').add('slds-popover_tooltip'); // show or hide bubble\n\n    classes.add({\n      'slds-rise-from-ground': this.visible,\n      'slds-fall-into-ground': !this.visible\n    }); // apply the proper nubbin CSS class\n\n    const {\n      horizontal,\n      vertical\n    } = this.align;\n    classes.add({\n      'slds-nubbin_top-left': horizontal === 'left' && vertical === 'top',\n      'slds-nubbin_top-right': horizontal === 'right' && vertical === 'top',\n      'slds-nubbin_bottom-left': horizontal === 'left' && vertical === 'bottom',\n      'slds-nubbin_bottom-right': horizontal === 'right' && vertical === 'bottom',\n      'slds-nubbin_bottom': horizontal === 'center' && vertical === 'bottom',\n      'slds-nubbin_top': horizontal === 'center' && vertical === 'top',\n      'slds-nubbin_left': horizontal === 'left' && vertical === 'center',\n      'slds-nubbin_right': horizontal === 'right' && vertical === 'center'\n    });\n    classListMutation(this.classList, classes);\n  }\n\n  handleMouseLeave() {\n    this.visible = false;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningPrimitiveBubble, {\n  publicProps: {\n    contentId: {\n      config: 3\n    },\n    content: {\n      config: 3\n    },\n    align: {\n      config: 3\n    },\n    visible: {\n      config: 3\n    }\n  },\n  track: {\n    state: 1\n  },\n  fields: [\"divElement\"]\n});\n\nexport default _registerComponent(LightningPrimitiveBubble, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./primitiveButton.css\";\n\nimport _implicitScopedStylesheets from \"./primitiveButton.scoped.css?scoped=true\";\n\nimport {registerTemplate} from \"lwc\";\nconst stc0 = [];\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {} = $api;\n  return stc0;\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-primitiveButton_primitiveButton\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./primitiveButton.html\";\nimport { isIE11, normalizeBoolean, normalizeString, synchronizeAttrs, buttonGroupOrderClass } from 'lightning/utilsPrivate';\nimport { classSet } from 'lightning/utils';\nconst ARIA_DESCRIBEDBY = 'aria-describedby';\nconst ARIA_CONTROLS = 'aria-controls';\nconst ARIA_LABELLEDBY = 'aria-labelledby';\n/**\n * Primitive for button, buttonIcon and buttonIconStateful\n */\n\nclass LightningPrimitiveButton extends LightningElement {\n  /**\n   * Specifies whether this button should be displayed in a disabled state.\n   * Disabled buttons can't be clicked. This value defaults to false.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  get disabled() {\n    return this.state.disabled;\n  }\n\n  set disabled(value) {\n    this.state.disabled = normalizeBoolean(value);\n  }\n\n  set accessKey(value) {\n    this.state.accesskey = value;\n  }\n  /**\n   * Specifies a shortcut key to activate or focus an element.\n   *\n   * @type {string}\n   */\n\n\n  get accessKey() {\n    return this.state.accesskey;\n  }\n\n  get computedAccessKey() {\n    return this.state.accesskey;\n  }\n  /**\n   * Displays tooltip text when the mouse cursor moves over the element.\n   *\n   * @type {string}\n   */\n\n\n  get title() {\n    return this.state.title;\n  }\n\n  set title(value) {\n    this.state.title = value;\n  }\n  /**\n   * Label describing the button to assistive technologies.\n   *\n   * @type {string}\n   */\n\n\n  get ariaLabel() {\n    return this.state.ariaLabel;\n  }\n\n  set ariaLabel(value) {\n    this.state.ariaLabel = value;\n  }\n\n  get computedAriaLabel() {\n    return this.state.ariaLabel;\n  }\n  /**\n   * Specifies the ID or list of IDs of the element or elements that\n   * contain visible descriptive text to describe the button.\n   */\n\n\n  get ariaLabelledBy() {\n    return this.state.ariaLabelledBy;\n  }\n\n  set ariaLabelledBy(value) {\n    this.state.ariaLabelledBy = value;\n    const button = this.template.querySelector('button');\n    synchronizeAttrs(button, {\n      [ARIA_LABELLEDBY]: value\n    });\n  }\n\n  get computedAriaLabelledBy() {\n    return this.state.ariaLabelledBy;\n  }\n  /**\n   * A space-separated list of element IDs that provide descriptive labels for the button.\n   *\n   * @type {string}\n   */\n\n\n  get ariaDescribedBy() {\n    return this.state.ariaDescribedBy;\n  }\n\n  set ariaDescribedBy(value) {\n    this.state.ariaDescribedBy = value;\n    const button = this.template.querySelector('button');\n    synchronizeAttrs(button, {\n      [ARIA_DESCRIBEDBY]: value\n    });\n  }\n  /**\n   * A space-separated list of element IDs whose presence or content is controlled by this button.\n   *\n   * @type {string}\n   */\n\n\n  get ariaControls() {\n    return this.state.ariaControls;\n  }\n\n  set ariaControls(value) {\n    this.state.ariaControls = value;\n    const button = this.template.querySelector('button');\n    synchronizeAttrs(button, {\n      [ARIA_CONTROLS]: value\n    });\n  }\n  /**\n   * Indicates whether an element that the button controls is expanded or collapsed.\n   * Valid values are 'true' or 'false'. The default value is undefined.\n   *\n   * @type {string}\n   * @default undefined\n   */\n\n\n  get ariaExpanded() {\n    return this.state.ariaExpanded;\n  }\n\n  set ariaExpanded(value) {\n    this.state.ariaExpanded = normalizeString(value, {\n      fallbackValue: undefined,\n      validValues: ['true', 'false']\n    });\n  }\n\n  get computedAriaExpanded() {\n    return this.state.ariaExpanded || null;\n  }\n\n  set ariaLive(value) {\n    this.state.ariaLive = value;\n  }\n  /**\n   * Indicates that the button has an interactive popup element.\n   * Valid values are 'true', 'dialog', 'menu', 'listbox', 'tree', and 'grid' based on ARIA 1.1 specifications.\n   * The default value is undefined.\n   *\n   * @type {string}\n   * @default undefined\n   */\n\n\n  get ariaHasPopup() {\n    return this.state.ariaHasPopup;\n  }\n\n  set ariaHasPopup(value) {\n    this.state.ariaHasPopup = normalizeString(value, {\n      fallbackValue: undefined,\n      validValues: ['true', 'dialog', 'menu', 'listbox', 'tree', 'grid']\n    });\n  }\n\n  get computedAriaHasPopup() {\n    return this.state.ariaHasPopup || null;\n  }\n  /**\n   * Indicates that the button can be updated when it doesn't have focus.\n   * Valid values are 'polite', 'assertive', or 'off'. The polite value causes assistive\n   * technologies to notify users of updates at a low priority, generally without interrupting.\n   * The assertive value causes assistive technologies to notify users immediately,\n   * potentially clearing queued speech updates.\n   *\n   * @type {string}\n   */\n\n\n  get ariaLive() {\n    return this.state.ariaLive;\n  }\n\n  get computedAriaLive() {\n    return this.state.ariaLive;\n  }\n  /**\n   * Indicates whether assistive technologies present all, or only parts of,\n   * the changed region. Valid values are 'true' or 'false'.\n   *\n   * @type {string}\n   */\n\n\n  get ariaAtomic() {\n    return this.state.ariaAtomic || null;\n  }\n\n  set ariaAtomic(value) {\n    this.state.ariaAtomic = normalizeString(value, {\n      fallbackValue: undefined,\n      validValues: ['true', 'false']\n    });\n  }\n\n  get computedAriaAtomic() {\n    return this.state.ariaAtomic || null;\n  }\n  /**\n   * Sets focus on the element.\n   */\n\n\n  focus() {}\n  /**\n   * Reserved for internal use only.\n   * Describes the order of this element (first, middle or last) inside lightning-button-group.\n   * @type {string}\n   */\n\n\n  constructor() {\n    super(); // Workaround for an IE11 bug where click handlers on button ancestors\n    // receive the click event even if the button element has the `disabled`\n    // attribute set.\n\n    this._initialized = false;\n    this.state = {\n      accesskey: null,\n      ariaAtomic: null,\n      ariaControls: null,\n      ariaDescribedBy: null,\n      ariaLabelledBy: null,\n      ariaExpanded: null,\n      ariaHasPopup: null,\n      ariaLabel: null,\n      ariaLive: null,\n      disabled: false\n    };\n    this.groupOrder = '';\n\n    if (isIE11) {\n      this.template.addEventListener('click', event => {\n        if (this.disabled) {\n          event.stopImmediatePropagation();\n        }\n      });\n    }\n  }\n\n  renderedCallback() {\n    if (!this._initialized) {\n      const button = this.template.querySelector('button');\n      synchronizeAttrs(button, {\n        [ARIA_CONTROLS]: this.state.ariaControls,\n        [ARIA_DESCRIBEDBY]: this.state.ariaDescribedBy,\n        [ARIA_LABELLEDBY]: this.state.ariaLabelledBy\n      });\n      this._initialized = true;\n    }\n  }\n\n  get computedButtonClass() {\n    const classes = classSet('slds-button');\n    classes.add(buttonGroupOrderClass(this.groupOrder));\n    return classes.toString();\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningPrimitiveButton, {\n  publicProps: {\n    disabled: {\n      config: 3\n    },\n    accessKey: {\n      config: 3\n    },\n    title: {\n      config: 3\n    },\n    ariaLabel: {\n      config: 3\n    },\n    ariaLabelledBy: {\n      config: 3\n    },\n    ariaDescribedBy: {\n      config: 3\n    },\n    ariaControls: {\n      config: 3\n    },\n    ariaExpanded: {\n      config: 3\n    },\n    ariaHasPopup: {\n      config: 3\n    },\n    ariaLive: {\n      config: 3\n    },\n    ariaAtomic: {\n      config: 3\n    },\n    groupOrder: {\n      config: 0\n    }\n  },\n  publicMethods: [\"focus\"],\n  track: {\n    state: 1\n  },\n  fields: [\"_initialized\"]\n});\n\nexport default _registerComponent(LightningPrimitiveButton, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./primitiveColorpickerButton.css\";\n\nimport _implicitScopedStylesheets from \"./primitiveColorpickerButton.scoped.css?scoped=true\";\n\nimport _lightningPrimitiveIcon from \"lightning/primitiveIcon\";\nimport _lightningColorPickerPanel from \"lightning/colorPickerPanel\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  \"slds-button\": true,\n  \"slds-color-picker__summary-button\": true,\n  \"slds-button_icon\": true,\n  \"slds-button_icon-more\": true\n};\nconst stc1 = {\n  \"slds-swatch\": true\n};\nconst stc2 = {\n  \"data-id\": \"thumbnail\"\n};\nconst stc3 = {\n  classMap: {\n    \"slds-assistive-text\": true\n  },\n  key: 2\n};\nconst stc4 = {\n  props: {\n    \"iconName\": \"utility:down\",\n    \"svgClass\": \"slds-button__icon slds-button__icon_small\",\n    \"variant\": \"bare\"\n  },\n  key: 3\n};\nconst stc5 = {\n  classMap: {\n    \"slds-assistive-text\": true,\n    \"a11y-color-value\": true\n  },\n  key: 4\n};\nconst stc6 = {\n  \"color-picker-panel\": true\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {b: api_bind, d: api_dynamic_text, t: api_text, h: api_element, c: api_custom_element} = $api;\n  const {_m0, _m1} = $ctx;\n  return [api_element(\"button\", {\n    classMap: stc0,\n    attrs: {\n      \"type\": \"button\",\n      \"disabled\": $cmp.disabled ? \"\" : null\n    },\n    key: 0,\n    on: {\n      \"click\": _m0 || ($ctx._m0 = api_bind($cmp.handleColorPickerToggleClick))\n    }\n  }, [api_element(\"span\", {\n    classMap: stc1,\n    style: $cmp.colorInputStyle,\n    attrs: stc2,\n    key: 1\n  }, [api_element(\"span\", stc3, [api_text(api_dynamic_text($cmp.i18n.a11yTriggerText))])]), api_custom_element(\"lightning-primitive-icon\", _lightningPrimitiveIcon, stc4), api_element(\"span\", stc5, [api_text(api_dynamic_text($cmp.value))])]), $cmp._isColorPickerPanelOpen ? api_custom_element(\"lightning-color-picker-panel\", _lightningColorPickerPanel, {\n    classMap: stc6,\n    props: {\n      \"currentColor\": $cmp.value\n    },\n    key: 5,\n    on: {\n      \"updatecolor\": _m1 || ($ctx._m1 = api_bind($cmp.handleUpdateColorEvent))\n    }\n  }) : null];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-primitiveColorpickerButton_primitiveColorpickerButton\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./primitiveColorpickerButton.html\";\nimport labelA11yTriggerText from '@salesforce/label/LightningColorPicker.a11yTriggerText';\nimport { Direction, AutoPosition } from 'lightning/positionLibrary';\nimport { normalizeBoolean } from 'lightning/utilsPrivate';\nconst i18n = {\n  a11yTriggerText: labelA11yTriggerText\n};\n\nclass PrimitiveColorpickerButton extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this._isColorPickerPanelOpen = false;\n    this._value = '';\n    this._disabled = false;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n  /**\n   * If present, the input field is disabled and users cannot interact with it.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = normalizeBoolean(value);\n  }\n\n  focus() {\n    const button = this.template.querySelector('button');\n    return button && button.focus();\n  }\n\n  blur() {\n    const button = this.template.querySelector('button');\n    return button && button.blur();\n  }\n\n  get colorInputStyle() {\n    return `background: ${this.value || '#5679C0'};`;\n  }\n\n  handleColorPickerToggleClick(event) {\n    event.preventDefault();\n    this._isColorPickerPanelOpen = !this._isColorPickerPanelOpen;\n\n    if (this._isColorPickerPanelOpen) {\n      this.startColorPickerPositioning();\n    } else {\n      this.stopColorPickerPositioning();\n    }\n  }\n\n  startColorPickerPositioning() {\n    if (!this._autoPosition) {\n      this._autoPosition = new AutoPosition(this);\n    }\n\n    this._autoPosition.start({\n      target: () => this.template.querySelector('button.slds-color-picker__summary-button'),\n      element: () => this.template.querySelector('lightning-color-picker-panel').shadowRoot.querySelector('section'),\n      align: {\n        horizontal: Direction.Left,\n        vertical: Direction.Top\n      },\n      targetAlign: {\n        horizontal: Direction.Left,\n        vertical: Direction.Bottom\n      },\n      autoFlip: true\n    });\n  }\n\n  stopColorPickerPositioning() {\n    if (this._autoPosition) {\n      this._autoPosition.stop();\n    }\n  }\n\n  handleUpdateColorEvent(event) {\n    event.stopPropagation();\n    const detail = event.detail;\n    this._isColorPickerPanelOpen = false;\n    this.stopColorPickerPositioning();\n    this.dispatchEvent(new CustomEvent('change', {\n      detail\n    }));\n  }\n\n  get i18n() {\n    return i18n;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nPrimitiveColorpickerButton.delegatesFocus = true;\n\n_registerDecorators(PrimitiveColorpickerButton, {\n  publicProps: {\n    value: {\n      config: 3\n    },\n    disabled: {\n      config: 3\n    }\n  },\n  publicMethods: [\"focus\", \"blur\"],\n  track: {\n    _isColorPickerPanelOpen: 1,\n    _value: 1,\n    _disabled: 1\n  }\n});\n\nexport default _registerComponent(PrimitiveColorpickerButton, {\n  tmpl: _tmpl\n});","function stylesheet(token, useActualHostSelector, useNativeDirPseudoclass) {\n  var shadowSelector = token ? (\"[\" + token + \"]\") : \"\";\n  var hostSelector = token ? (\"[\" + token + \"-host]\") : \"\";\n  return \"slot\" + shadowSelector + \" {display: inline-block;}\";\n  /*LWC compiler v2.13.0*/\n}\nexport default [stylesheet];","import _implicitStylesheets from \"./primitiveFileDroppableZone.css\";\n\nimport _implicitScopedStylesheets from \"./primitiveFileDroppableZone.scoped.css?scoped=true\";\n\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  key: 0\n};\nconst stc1 = [];\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {s: api_slot} = $api;\n  return [api_slot(\"\", stc0, stc1, $slotset)];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.slots = [\"\"];\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-primitiveFileDroppableZone_primitiveFileDroppableZone\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./primitiveFileDroppableZone.html\";\nimport { normalizeBoolean } from 'lightning/utilsPrivate';\n\nclass LightningPrimitiveFileDroppableZone extends LightningElement {\n  get disabled() {\n    return this._disabled || false;\n  }\n\n  set disabled(value) {\n    this._disabled = normalizeBoolean(value);\n  }\n\n  get multiple() {\n    return this._multiple || false;\n  }\n\n  set multiple(value) {\n    this._multiple = normalizeBoolean(value);\n  }\n\n  constructor() {\n    super();\n    this._disabled = void 0;\n    this._multiple = void 0;\n    this.template.addEventListener('dragover', this.allowDrop.bind(this));\n    this.template.addEventListener('dragleave', this.handleDragLeave.bind(this));\n    this.template.addEventListener('drop', this.handleOnDrop.bind(this));\n  }\n\n  connectedCallback() {\n    this.classList.add('slds-file-selector__dropzone');\n  }\n\n  setDragOver(dragOver) {\n    this.classList.toggle('slds-has-drag-over', dragOver);\n  }\n\n  handleDragLeave() {\n    this.setDragOver(false);\n  }\n\n  handleOnDrop(event) {\n    event.preventDefault();\n    this.setDragOver(false);\n\n    if (this.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (!this.meetsMultipleCriteria(event)) {\n      event.stopPropagation();\n    }\n  }\n\n  allowDrop(event) {\n    event.preventDefault();\n\n    if (!this.disabled) {\n      this.setDragOver(true);\n    }\n  }\n\n  meetsMultipleCriteria(dragEvent) {\n    const files = dragEvent.dataTransfer.files;\n    return !(files.length > 1 && !this.multiple);\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningPrimitiveFileDroppableZone, {\n  publicProps: {\n    disabled: {\n      config: 3\n    },\n    multiple: {\n      config: 3\n    }\n  },\n  track: {\n    _disabled: 1,\n    _multiple: 1\n  }\n});\n\nexport default _registerComponent(LightningPrimitiveFileDroppableZone, {\n  tmpl: _tmpl\n});","// Cache for promises that import icon templates\nconst importPromises = {};\nconst iconTemplateCache = {};\nexport function hasIconLibrary(dir, category) {\n  const cacheKey = makeCacheKey(dir, category);\n  return !!iconTemplateCache[cacheKey];\n}\nexport function getIconLibrary(dir, category) {\n  const cacheKey = makeCacheKey(dir, category);\n  return iconTemplateCache[cacheKey] || null;\n}\nexport function fetchIconLibrary(dir, category) {\n  const cacheKey = makeCacheKey(dir, category); // If icon template is being requested, return the cached promise\n\n  if (importPromises[cacheKey]) {\n    return importPromises[cacheKey];\n  }\n\n  const promise = fetchIconTemplate(dir, category);\n  promise.then(tmpl => {\n    iconTemplateCache[cacheKey] = tmpl;\n    delete importPromises[cacheKey];\n  }).catch(() => {\n    delete importPromises[cacheKey];\n  }); // Cache the promise to import\n\n  importPromises[cacheKey] = promise;\n  return promise;\n}\n\nfunction makeCacheKey(dir, category) {\n  return `${category}${dir}`;\n} // eslint-disable-next-line @lwc/lwc/no-async-await\n\n\nasync function fetchIconTemplate(dir, category) {\n  if (dir === 'rtl') {\n    switch (category) {\n      case 'utility':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesUtilityRtl');\n          return Lib;\n        }\n\n      case 'action':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesActionRtl');\n          return Lib;\n        }\n\n      case 'standard':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesStandardRtl');\n          return Lib;\n        }\n\n      case 'doctype':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesDoctypeRtl');\n          return Lib;\n        }\n\n      case 'custom':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesCustomRtl');\n          return Lib;\n        }\n\n      default:\n        return null;\n    }\n  } else {\n    switch (category) {\n      case 'utility':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesUtility');\n          return Lib;\n        }\n\n      case 'action':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesAction');\n          return Lib;\n        }\n\n      case 'standard':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesStandard');\n          return Lib;\n        }\n\n      case 'doctype':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesDoctype');\n          return Lib;\n        }\n\n      case 'custom':\n        {\n          // eslint-disable-next-line @lwc/lwc/no-async-await\n          const {\n            default: Lib\n          } = await import('lightning/iconSvgTemplatesCustom');\n          return Lib;\n        }\n\n      default:\n        return null;\n    }\n  }\n}","function stylesheet(token, useActualHostSelector, useNativeDirPseudoclass) {\n  var shadowSelector = token ? (\"[\" + token + \"]\") : \"\";\n  var hostSelector = token ? (\"[\" + token + \"-host]\") : \"\";\n  return \"_:-ms-lang(x)\" + shadowSelector + \", svg\" + shadowSelector + \" {pointer-events: none;}\";\n  /*LWC compiler v2.13.0*/\n}\nexport default [stylesheet];","import _implicitStylesheets from \"./primitiveIcon.css\";\n\nimport _implicitScopedStylesheets from \"./primitiveIcon.scoped.css?scoped=true\";\n\nimport {registerTemplate, sanitizeAttribute} from \"lwc\";\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {fid: api_scoped_frag_id, h: api_element} = $api;\n  return [api_element(\"svg\", {\n    className: $cmp.computedClass,\n    attrs: {\n      \"focusable\": \"false\",\n      \"data-key\": $cmp.name,\n      \"aria-hidden\": \"true\"\n    },\n    key: 0,\n    svg: true\n  }, [api_element(\"use\", {\n    attrs: {\n      \"xlink:href\": sanitizeAttribute(\"use\", \"http://www.w3.org/2000/svg\", \"xlink:href\", api_scoped_frag_id($cmp.href))\n    },\n    key: 1,\n    svg: true\n  })])];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-primitiveIcon_primitiveIcon\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./primitiveIcon.html\";\nimport { classSet } from 'lightning/utils';\nimport { normalizeString as normalize } from 'lightning/utilsPrivate';\nimport standardTemplate from './primitiveIcon.html';\nimport { getName, isValidName, polyfill } from 'lightning/iconUtils';\nimport dir from '@salesforce/i18n/dir';\nimport { fetchIconLibrary, hasIconLibrary, getIconLibrary } from './fetch';\n\nclass LightningPrimitiveIcon extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this.src = void 0;\n    this.svgClass = void 0;\n    this.size = 'medium';\n    this.variant = void 0;\n    this.iconLibrary = null;\n    this._iconName = null;\n  }\n\n  get iconName() {\n    return this._iconName;\n  }\n\n  set iconName(value) {\n    if (value !== this._iconName) {\n      this._iconName = value;\n      this.requestIconTemplates();\n    }\n  }\n\n  get category() {\n    if (isValidName(this._iconName)) {\n      const [spriteName] = this._iconName.split(':');\n\n      return spriteName;\n    }\n\n    return null;\n  }\n\n  get isReady() {\n    return !!this.iconLibrary;\n  } // eslint-disable-next-line @lwc/lwc/no-async-await\n\n\n  async requestIconTemplates() {\n    if (hasIconLibrary(dir, this.category)) {\n      this.iconLibrary = getIconLibrary(dir, this.category);\n      return;\n    }\n\n    if (this.category) {\n      try {\n        this.iconLibrary = null;\n        this.iconLibrary = await fetchIconLibrary(dir, this.category);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn(`<lightning-primitive-icon> failed to dynamically import icon templates for ${this.category}: ${e.message}`);\n      }\n    }\n  }\n\n  renderedCallback() {\n    if (this.isReady || this.iconName !== this.prevIconName) {\n      this.prevIconName = this.iconName;\n      const svgElement = this.template.querySelector('svg');\n      polyfill(svgElement);\n    }\n  }\n\n  render() {\n    if (this.isReady) {\n      // If src is present, should use default template reply on given svg src\n      if (!this.src) {\n        const name = this.iconName;\n\n        if (isValidName(name)) {\n          const [spriteName, iconName] = name.split(':');\n          const template = this.iconLibrary[`${spriteName}_${iconName}`];\n\n          if (template) {\n            return template;\n          }\n        }\n      }\n    }\n\n    return standardTemplate;\n  }\n\n  get href() {\n    return this.src || '';\n  }\n\n  get name() {\n    return getName(this.iconName);\n  }\n\n  get normalizedSize() {\n    return normalize(this.size, {\n      fallbackValue: 'medium',\n      validValues: ['xx-small', 'x-small', 'small', 'medium', 'large']\n    });\n  }\n\n  get normalizedVariant() {\n    // NOTE: Leaving a note here because I just wasted a bunch of time\n    // investigating why both 'bare' and 'inverse' are supported in\n    // lightning-primitive-icon. lightning-icon also has a deprecated\n    // 'bare', but that one is synonymous to 'inverse'. This 'bare' means\n    // that no classes should be applied. So this component needs to\n    // support both 'bare' and 'inverse' while lightning-icon only needs to\n    // support 'inverse'.\n    return normalize(this.variant, {\n      fallbackValue: '',\n      validValues: ['bare', 'error', 'inverse', 'warning', 'success']\n    });\n  }\n\n  get computedClass() {\n    const {\n      normalizedSize,\n      normalizedVariant\n    } = this;\n    const classes = classSet(this.svgClass);\n\n    if (normalizedVariant !== 'bare') {\n      classes.add('slds-icon');\n    }\n\n    switch (normalizedVariant) {\n      case 'error':\n        classes.add('slds-icon-text-error');\n        break;\n\n      case 'warning':\n        classes.add('slds-icon-text-warning');\n        break;\n\n      case 'success':\n        classes.add('slds-icon-text-success');\n        break;\n\n      case 'inverse':\n      case 'bare':\n        break;\n\n      default:\n        // if custom icon is set, we don't want to set\n        // the text-default class\n        if (!this.src) {\n          classes.add('slds-icon-text-default');\n        }\n\n    }\n\n    if (normalizedSize !== 'medium') {\n      classes.add(`slds-icon_${normalizedSize}`);\n    }\n\n    return classes.toString();\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\n_registerDecorators(LightningPrimitiveIcon, {\n  publicProps: {\n    src: {\n      config: 0\n    },\n    svgClass: {\n      config: 0\n    },\n    size: {\n      config: 0\n    },\n    variant: {\n      config: 0\n    },\n    iconName: {\n      config: 3\n    }\n  },\n  fields: [\"iconLibrary\", \"_iconName\"]\n});\n\nexport default _registerComponent(LightningPrimitiveIcon, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./select.css\";\n\nimport _implicitScopedStylesheets from \"./select.scoped.css?scoped=true\";\n\nimport _lightningHelptext from \"lightning/helptext\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  \"slds-required\": true\n};\nconst stc1 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 3\n};\nconst stc2 = {\n  classMap: {\n    \"slds-select_container\": true\n  },\n  key: 4\n};\nconst stc3 = {\n  \"slds-select\": true\n};\nconst stc4 = {\n  \"slds-form-element__help\": true\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {gid: api_scoped_id, t: api_text, h: api_element, d: api_dynamic_text, c: api_custom_element, b: api_bind, k: api_key, i: api_iterator} = $api;\n  const {_m0, _m1, _m2} = $ctx;\n  return [api_element(\"label\", {\n    className: $cmp.computedLabelClass,\n    attrs: {\n      \"for\": api_scoped_id(\"select\")\n    },\n    key: 0\n  }, [$cmp.required ? api_element(\"abbr\", {\n    classMap: stc0,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 1\n  }, [api_text(\"*\")]) : null, api_text(api_dynamic_text($cmp.label))]), $cmp.fieldLevelHelp ? api_custom_element(\"lightning-helptext\", _lightningHelptext, {\n    props: {\n      \"content\": $cmp.fieldLevelHelp\n    },\n    key: 2\n  }) : null, api_element(\"div\", stc1, [api_element(\"div\", stc2, [api_element(\"select\", {\n    classMap: stc3,\n    attrs: {\n      \"autocomplete\": $cmp.autocomplete,\n      \"disabled\": $cmp.disabled ? \"\" : null,\n      \"id\": api_scoped_id(\"select\"),\n      \"multiple\": $cmp.multiple ? \"\" : null,\n      \"name\": $cmp.name,\n      \"required\": $cmp.required ? \"\" : null,\n      \"accesskey\": $cmp.accessKey,\n      \"size\": $cmp.size\n    },\n    key: 5,\n    on: {\n      \"blur\": _m0 || ($ctx._m0 = api_bind($cmp.handleBlur)),\n      \"change\": _m1 || ($ctx._m1 = api_bind($cmp.handleChange)),\n      \"focus\": _m2 || ($ctx._m2 = api_bind($cmp.handleFocus))\n    }\n  }, api_iterator($cmp.options, function (option) {\n    return [option.disabled ? api_element(\"option\", {\n      attrs: {\n        \"disabled\": \"\",\n        \"value\": option.value\n      },\n      key: api_key(6, option.value)\n    }, [api_text(api_dynamic_text(option.label))]) : null, !option.disabled ? api_element(\"option\", {\n      attrs: {\n        \"value\": option.value\n      },\n      key: api_key(7, option.value)\n    }, [api_text(api_dynamic_text(option.label))]) : null];\n  }))])]), $cmp._helpMessage ? api_element(\"div\", {\n    classMap: stc4,\n    attrs: {\n      \"aria-live\": \"assertive\",\n      \"data-help-message\": \"\",\n      \"id\": api_scoped_id(\"help-message\")\n    },\n    key: 8\n  }, [api_text(api_dynamic_text($cmp._helpMessage))]) : null];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-select_select\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./select.html\";\nimport labelRequired from '@salesforce/label/LightningControl.required';\nimport { classSet } from 'lightning/utils';\nimport { classListMutation, getRealDOMId, normalizeBoolean, synchronizeAttrs } from 'lightning/utilsPrivate';\nimport { FieldConstraintApi, InteractingState, isEmptyString, getErrorMessage, normalizeVariant, VARIANT } from 'lightning/inputUtils';\nconst i18n = {\n  required: labelRequired\n};\n\nclass LightningSelect extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this.label = void 0;\n    this.name = void 0;\n    this.messageWhenValueMissing = void 0;\n    this.accessKey = void 0;\n    this.autocomplete = void 0;\n    this._options = [];\n    this._helpMessage = '';\n    this._selectedValue = void 0;\n    this._variant = void 0;\n    this._required = false;\n    this._disabled = false;\n    this._multiple = false;\n    this._fieldLevelHelp = void 0;\n    this._size = void 0;\n  }\n\n  connectedCallback() {\n    this.classList.add('slds-form-element');\n    this.updateClassList();\n    this.interactingState = new InteractingState();\n    this.interactingState.onleave(() => this.reportValidity());\n  }\n\n  renderedCallback() {\n    if (this.options && this._selectedValue !== undefined) {\n      this.selectOptionsByValue(this._selectedValue);\n    }\n\n    synchronizeAttrs(this.selectElement, {\n      'aria-describedby': getRealDOMId(this.template.querySelector('#help-message'))\n    });\n  }\n  /**\n   * Help text detailing the purpose and function of the menu of options.\n   * The text is displayed in a tooltip above the menu.\n   * @type {string}\n   */\n\n\n  get fieldLevelHelp() {\n    return this._fieldLevelHelp;\n  }\n\n  set fieldLevelHelp(value) {\n    this._fieldLevelHelp = value;\n  }\n  /**\n   * The variant changes the appearance of the dropdown menu.\n   * Accepted variants include standard, label-inline, label-hidden, and label-stacked.\n   * This value defaults to standard, which displays the label above the dropdown menu.\n   * label-hidden hides the label but make it available to assistive technology.\n   * label-inline horizontally aligns the label and dropdown menu.\n   * label-stacked places the label above the dropdown menu.\n   * @type {string}\n   */\n\n\n  get variant() {\n    return this._variant || VARIANT.STANDARD;\n  }\n\n  set variant(value) {\n    this._variant = normalizeVariant(value);\n    this.updateClassList();\n  }\n  /**\n   * Specifies whether multiple options can be selected.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get multiple() {\n    return this._multiple;\n  }\n\n  set multiple(value) {\n    this._multiple = normalizeBoolean(value);\n  }\n  /**\n   * The number of rows in the list that should be visible at one time.\n   * Use this attribute with the multiple attribute.\n   * @type {number}\n   * @default 4\n   */\n\n\n  get size() {\n    if (!this.multiple) {\n      return null;\n    }\n\n    if (this._size === undefined) {\n      return '4';\n    }\n\n    return this._size;\n  }\n\n  set size(newValue) {\n    this._size = newValue;\n  }\n  /**\n   * Specifies whether an option must be selected.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get required() {\n    return this._required;\n  }\n\n  set required(value) {\n    this._required = normalizeBoolean(value);\n  }\n  /**\n   * Specifies whether the menu is disabled and users cannot interact with it.\n   * @type {boolean}\n   * @default false\n   */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = normalizeBoolean(value);\n  }\n  /**\n   * The value of the selected option.\n   * If empty and a value is required, the component is in an invalid state.\n   * @type {string}\n   */\n\n\n  get value() {\n    return this._selectedValue;\n  }\n\n  set value(newValue) {\n    this._selectedValue = newValue;\n\n    if (this.isConnected) {\n      this.selectOptionsByValue(newValue);\n    }\n  }\n  /**\n   * An array of menu options with key-value pairs for label and value.\n   * @type {object}\n   */\n\n\n  get options() {\n    return this._options;\n  }\n\n  set options(newValue) {\n    this._options = newValue;\n\n    if (this.isConnected && newValue) {\n      this.selectOptionsByValue(this._selectedValue);\n    }\n  }\n\n  updateClassList() {\n    classListMutation(this.classList, {\n      'slds-form-element_stacked': this.variant === VARIANT.LABEL_STACKED,\n      'slds-form-element_horizontal': this.variant === VARIANT.LABEL_INLINE\n    });\n  }\n  /**\n   * Sets focus on the select element.\n   */\n\n\n  focus() {\n    if (this.isConnected) {\n      this.selectElement.focus();\n    }\n  }\n  /**\n   * Removes focus on from the select element.\n   */\n\n\n  blur() {\n    if (this.isConnected) {\n      this.selectElement.blur();\n    }\n  }\n  /**\n   * Represents the validity states that an element can be in, with respect to constraint validation.\n   * @type {object}\n   *\n   */\n\n\n  get validity() {\n    return this._constraint.validity;\n  }\n  /**\n   * Checks if the input is valid.\n   * @returns {boolean} Indicates whether the element meets all constraint validations.\n   */\n\n\n  checkValidity() {\n    return this._constraint.checkValidity();\n  }\n  /**\n   * Sets a custom error message to be displayed when a form is submitted.\n   * @param {string} message - The string that describes the error. If message is an empty string, the error message is reset.\n   */\n\n\n  setCustomValidity(message) {\n    this._constraint.setCustomValidity(message);\n\n    this.customErrorMessage = message;\n  }\n  /**\n   * Displays the error messages and returns false if the input is invalid.\n   * If the input is valid, reportValidity() clears displayed error messages and returns true.\n   * @returns {boolean} - The validity status of the input fields.\n   */\n\n\n  reportValidity() {\n    return this._constraint.reportValidity(message => {\n      this._helpMessage = message;\n    });\n  }\n  /**\n   * Displays an error message on an invalid select field.\n   * An invalid field fails at least one constraint validation\n   * and returns false when checkValidity() is called.\n   */\n\n\n  showHelpMessageIfInvalid() {\n    const validity = this.validity;\n\n    if (validity.valid) {\n      this._helpMessage = '';\n      this.classList.remove('slds-has-error');\n    } else {\n      this.classList.add('slds-has-error');\n      this._helpMessage = getErrorMessage(validity, {\n        valueMissing: this.messageWhenValueMissing,\n        customError: this.customErrorMessage\n      });\n    }\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get selectElement() {\n    return this.template.querySelector('select');\n  }\n\n  get isLabelHidden() {\n    return this.variant === VARIANT.LABEL_HIDDEN;\n  }\n\n  get computedLabelClass() {\n    return classSet('slds-form-element__label').add({\n      'slds-assistive-text': this.isLabelHidden\n    }).toString();\n  }\n\n  get _constraint() {\n    if (!this._constraintApi) {\n      this._constraintApi = new FieldConstraintApi(() => this, {\n        valueMissing: () => {\n          const isMultipleAndNoValue = this.multiple && (!this.value || this.value.length === 0);\n          return !this.disabled && this.required && (isEmptyString(this.value) || isMultipleAndNoValue);\n        }\n      });\n    }\n\n    return this._constraintApi;\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this._selectedValue = this.getSelectedOptionValues();\n    this.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      composed: true,\n      detail: {\n        value: this._selectedValue\n      }\n    }));\n  }\n\n  handleFocus() {\n    this.interactingState.enter();\n    this.dispatchEvent(new CustomEvent('focus'));\n  }\n\n  handleBlur() {\n    this.interactingState.leave();\n    this.dispatchEvent(new CustomEvent('blur'));\n  }\n\n  selectOptionsByValue(optionValue) {\n    if (this.multiple) {\n      if (Array.isArray(optionValue)) {\n        const options = this.template.querySelectorAll('option');\n        options.forEach(option => {\n          option.selected = optionValue.includes(option.value);\n        });\n      }\n    } else {\n      this.selectElement.value = optionValue;\n    }\n  }\n\n  getSelectedOptionValues() {\n    if (this.multiple) {\n      const options = this.template.querySelectorAll('option');\n      return Array.prototype.reduce.call(options, (selectedValues, option) => {\n        if (option.selected) {\n          selectedValues.push(option.value);\n        }\n\n        return selectedValues;\n      }, []);\n    }\n\n    return this.selectElement.value;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nLightningSelect.delegatesFocus = true;\n\n_registerDecorators(LightningSelect, {\n  publicProps: {\n    label: {\n      config: 0\n    },\n    name: {\n      config: 0\n    },\n    messageWhenValueMissing: {\n      config: 0\n    },\n    accessKey: {\n      config: 0\n    },\n    autocomplete: {\n      config: 0\n    },\n    fieldLevelHelp: {\n      config: 3\n    },\n    variant: {\n      config: 3\n    },\n    multiple: {\n      config: 3\n    },\n    size: {\n      config: 3\n    },\n    required: {\n      config: 3\n    },\n    disabled: {\n      config: 3\n    },\n    value: {\n      config: 3\n    },\n    options: {\n      config: 3\n    },\n    validity: {\n      config: 1\n    }\n  },\n  publicMethods: [\"focus\", \"blur\", \"checkValidity\", \"setCustomValidity\", \"reportValidity\", \"showHelpMessageIfInvalid\"],\n  track: {\n    _options: 1\n  },\n  fields: [\"_helpMessage\", \"_selectedValue\", \"_variant\", \"_required\", \"_disabled\", \"_multiple\", \"_fieldLevelHelp\", \"_size\"]\n});\n\nexport default _registerComponent(LightningSelect, {\n  tmpl: _tmpl\n});","import _implicitStylesheets from \"./timepicker.css\";\n\nimport _implicitScopedStylesheets from \"./timepicker.scoped.css?scoped=true\";\n\nimport _lightningHelptext from \"lightning/helptext\";\nimport _lightningBaseCombobox from \"lightning/baseCombobox\";\nimport {registerTemplate} from \"lwc\";\nconst stc0 = {\n  \"slds-required\": true\n};\nconst stc1 = {\n  classMap: {\n    \"slds-form-element__control\": true\n  },\n  key: 3\n};\nconst stc2 = {\n  \"slds-form-element__help\": true\n};\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {t: api_text, h: api_element, d: api_dynamic_text, c: api_custom_element, b: api_bind, gid: api_scoped_id} = $api;\n  const {_m0, _m1, _m2, _m3, _m4, _m5, _m6} = $ctx;\n  return [!$cmp.hasExternalLabel ? api_element(\"label\", {\n    className: $cmp.computedLabelClass,\n    key: 0\n  }, [$cmp.required ? api_element(\"abbr\", {\n    classMap: stc0,\n    attrs: {\n      \"title\": $cmp.i18n.required\n    },\n    key: 1\n  }, [api_text(\"*\")]) : null, api_text(api_dynamic_text($cmp.label))]) : null, !$cmp.hasExternalLabel ? $cmp.fieldLevelHelp ? api_custom_element(\"lightning-helptext\", _lightningHelptext, {\n    props: {\n      \"content\": $cmp.fieldLevelHelp\n    },\n    key: 2\n  }) : null : null, api_element(\"div\", stc1, [api_custom_element(\"lightning-base-combobox\", _lightningBaseCombobox, {\n    props: {\n      \"autocomplete\": $cmp.autocomplete,\n      \"dropdownHeight\": \"small\",\n      \"name\": $cmp.name,\n      \"variant\": \"lookup\",\n      \"placeholder\": $cmp.placeholder,\n      \"disabled\": $cmp.disabled,\n      \"readOnly\": $cmp.readOnly,\n      \"required\": $cmp.required,\n      \"items\": $cmp.items,\n      \"inputText\": $cmp.displayValue,\n      \"inputIconName\": \"utility:clock\",\n      \"inputLabel\": $cmp.ariaLabel,\n      \"inputControlsElement\": $cmp.ariaControlsElement,\n      \"inputLabelledByElement\": $cmp.ariaLabelledByElement,\n      \"dropdownAlignment\": \"auto\"\n    },\n    key: 4,\n    on: {\n      \"ready\": _m0 || ($ctx._m0 = api_bind($cmp.handleReady)),\n      \"textchange\": _m1 || ($ctx._m1 = api_bind($cmp.handleInputChange)),\n      \"textinput\": _m2 || ($ctx._m2 = api_bind($cmp.handleTextInput)),\n      \"dropdownopenrequest\": _m3 || ($ctx._m3 = api_bind($cmp.handleDropdownOpenRequest)),\n      \"focus\": _m4 || ($ctx._m4 = api_bind($cmp.handleFocus)),\n      \"blur\": _m5 || ($ctx._m5 = api_bind($cmp.handleBlur)),\n      \"select\": _m6 || ($ctx._m6 = api_bind($cmp.handleTimeSelect))\n    }\n  })]), $cmp._errorMessage ? api_element(\"div\", {\n    classMap: stc2,\n    attrs: {\n      \"id\": api_scoped_id(\"error-message\"),\n      \"data-error-message\": \"\",\n      \"aria-live\": \"assertive\"\n    },\n    key: 5\n  }, [api_text(api_dynamic_text($cmp._errorMessage))]) : null];\n  /*LWC compiler v2.13.0*/\n}\nexport default registerTemplate(tmpl);\ntmpl.stylesheets = [];\n\n\nif (_implicitStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitStylesheets)\n}\nif (_implicitScopedStylesheets) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _implicitScopedStylesheets)\n}\nif (_implicitStylesheets || _implicitScopedStylesheets) {\n  tmpl.stylesheetToken = \"lightning-timepicker_timepicker\"\n}\n","import { registerDecorators as _registerDecorators, registerComponent as _registerComponent, LightningElement } from \"lwc\";\nimport _tmpl from \"./timepicker.html\";\n\n/* eslint-disable @lwc/lwc/no-api-reassignments */\nimport labelInvalidDate from '@salesforce/label/LightningDateTimePicker.invalidDate';\nimport labelRangeOverflow from '@salesforce/label/LightningDateTimePicker.rangeOverflow';\nimport labelRangeUnderflow from '@salesforce/label/LightningDateTimePicker.rangeUnderflow';\nimport labelRequired from '@salesforce/label/LightningControl.required';\nimport shortTimeFormat from '@salesforce/i18n/dateTime.shortTimeFormat';\nimport mediumTimeFormat from '@salesforce/i18n/dateTime.mediumTimeFormat';\nimport { getTimeToHighlight } from './utils';\nimport { classSet, formatLabel } from 'lightning/utils';\nimport { isBefore, isAfter, formatTime, parseTime, getISOTimeString, normalizeISOTime, normalizeFormattedTime } from 'lightning/internationalizationLibrary';\nimport { removeTimeZoneSuffix } from 'lightning/iso8601Utils';\nimport { normalizeBoolean, synchronizeAttrs, normalizeString } from 'lightning/utilsPrivate';\nimport { normalizeVariant, VARIANT } from 'lightning/inputUtils';\nconst i18n = {\n  invalidDate: labelInvalidDate,\n  rangeOverflow: labelRangeOverflow,\n  rangeUnderflow: labelRangeUnderflow,\n  required: labelRequired\n};\nconst STEP = 15; // in minutes\n\nconst TIME_STYLE = {\n  SHORT: 'short',\n  MEDIUM: 'medium',\n  LONG: 'long'\n};\n\nclass LightningTimePicker extends LightningElement {\n  constructor(...args) {\n    super(...args);\n    this._disabled = false;\n    this._required = false;\n    this._displayValue = null;\n    this._value = null;\n    this._min = void 0;\n    this._max = void 0;\n    this._items = [];\n    this._fieldLevelHelp = void 0;\n    this._variant = 'lookup';\n    this._mainInputId = void 0;\n    this._errorMessage = void 0;\n    this._readonly = true;\n    this._describedByElements = [];\n    this.autocomplete = 'off';\n    this.ariaLabelledByElement = void 0;\n    this.ariaControlsElement = void 0;\n    this.ariaLabel = void 0;\n    this.label = void 0;\n    this.name = void 0;\n    this.placeholder = '';\n    this.messageWhenValueMissing = void 0;\n    this._ariaDescribedByElements = void 0;\n  }\n\n  get messageWhenBadInput() {\n    return this._messageWhenBadInput || formatLabel(i18n.invalidDate, this.timeFormat);\n  }\n\n  set messageWhenBadInput(message) {\n    this._messageWhenBadInput = message;\n  }\n\n  get messageWhenRangeOverflow() {\n    // using isoValue since the manually entered time could have seconds/milliseconds and the locale format generally doesn't have this precision\n    return this._messageWhenRangeOverflow || formatLabel(i18n.rangeOverflow, normalizeISOTime(this.max, this.timeFormat).isoValue);\n  }\n\n  set messageWhenRangeOverflow(message) {\n    this._messageWhenRangeOverflow = message;\n  }\n\n  get messageWhenRangeUnderflow() {\n    return this._messageWhenRangeUnderflow || formatLabel(i18n.rangeUnderflow, normalizeISOTime(this.min, this.timeFormat).isoValue);\n  }\n\n  set messageWhenRangeUnderflow(message) {\n    this._messageWhenRangeUnderflow = message;\n  }\n\n  set ariaDescribedByElements(el) {\n    if (Array.isArray(el)) {\n      this._ariaDescribedByElements = el;\n    } else {\n      this.ariaDescribedByElements = [el];\n    }\n  }\n\n  get ariaDescribedByElements() {\n    return this._ariaDescribedByElements;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(newValue) {\n    const normalizedValue = removeTimeZoneSuffix(newValue);\n    const normalizedTime = normalizeISOTime(normalizedValue, this.timeFormat);\n    this._value = normalizedTime.isoValue;\n    this._displayValue = normalizedTime.displayValue;\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = normalizeBoolean(value);\n  }\n\n  get readOnly() {\n    return this._readonly;\n  }\n\n  set readOnly(value) {\n    this._readonly = normalizeBoolean(value);\n\n    if (this._readonly) {\n      this._variant = VARIANT.STANDARD;\n    }\n  }\n\n  get required() {\n    return this._required;\n  }\n\n  set required(value) {\n    this._required = normalizeBoolean(value);\n  }\n\n  hasBadInput() {\n    return !!this._displayValue && this._value === null;\n  }\n\n  showHelpMessage(message) {\n    if (!message) {\n      this.classList.remove('slds-has-error');\n      this._errorMessage = '';\n    } else {\n      this.classList.add('slds-has-error');\n      this._errorMessage = message;\n    }\n  }\n\n  set fieldLevelHelp(value) {\n    this._fieldLevelHelp = value;\n  }\n\n  get fieldLevelHelp() {\n    return this._fieldLevelHelp;\n  }\n\n  get variant() {\n    return this._variant || VARIANT.STANDARD;\n  }\n\n  set variant(value) {\n    this._variant = normalizeVariant(value);\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  set max(newValue) {\n    this._max = newValue;\n\n    if (this.connected) {\n      this.rebuildAndUpdateTimeList();\n    }\n  }\n\n  get min() {\n    return this._min;\n  }\n\n  set min(newValue) {\n    this._min = newValue;\n\n    if (this.connected) {\n      this.rebuildAndUpdateTimeList();\n    }\n  }\n  /**\n   * Sets focus on the input element.\n   */\n\n\n  focus() {\n    if (this.connected) {\n      this.getCombobox().focus();\n    }\n  }\n  /**\n   * Removes keyboard focus from the input element.\n   */\n\n\n  blur() {\n    if (this.connected) {\n      this.getCombobox().blur();\n    }\n  }\n\n  get timeStyle() {\n    return this._timeStyle;\n  }\n\n  set timeStyle(value) {\n    this._timeStyle = normalizeString(value, {\n      fallbackValue: TIME_STYLE.SHORT,\n      validValues: [TIME_STYLE.SHORT, TIME_STYLE.MEDIUM, TIME_STYLE.LONG]\n    });\n    this.timeFormat = this.getTimeFormatFromStyle(this._timeStyle);\n    const normalizedDate = normalizeISOTime(this._value, this.timeFormat);\n    this._displayValue = normalizedDate.displayValue;\n  }\n\n  connectedCallback() {\n    this.connected = true;\n  }\n\n  disconnectedCallback() {\n    this.connected = false;\n  }\n\n  synchronizeA11y() {\n    const label = this.template.querySelector('label');\n    const comboBox = this.template.querySelector('lightning-base-combobox');\n    let describedByElements = [];\n\n    if (this._ariaDescribedByElements) {\n      describedByElements = describedByElements.concat(this._ariaDescribedByElements);\n    }\n\n    const errorMessage = this.template.querySelector('[data-error-message]');\n\n    if (errorMessage) {\n      describedByElements.push(errorMessage);\n    }\n\n    comboBox.inputDescribedByElements = describedByElements;\n    synchronizeAttrs(label, {\n      for: this._mainInputId\n    });\n  }\n\n  renderedCallback() {\n    this.synchronizeA11y();\n  }\n\n  get displayValue() {\n    return this._displayValue;\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  get i18n() {\n    return i18n;\n  }\n\n  get isLabelHidden() {\n    return this.variant === VARIANT.LABEL_HIDDEN;\n  }\n\n  get computedLabelClass() {\n    return classSet('slds-form-element__label').add({\n      'slds-assistive-text': this.isLabelHidden\n    }).toString();\n  }\n\n  handleReady(e) {\n    this._mainInputId = e.detail.id;\n  }\n\n  buildTimeList() {\n    // We should always display the options in the short style since m/l will add an extra :00 to the options.\n    const optionsTimeFormat = shortTimeFormat;\n    const timeList = [];\n    const minTime = parseTime(removeTimeZoneSuffix(this.min));\n    const minHour = minTime ? minTime.getHours() : 0;\n    const maxTime = parseTime(removeTimeZoneSuffix(this.max));\n    const maxHour = maxTime ? maxTime.getHours() + 1 : 24;\n    const date = new Date();\n\n    for (let hour = minHour; hour < maxHour; hour++) {\n      for (let minutes = 0; minutes < 60; minutes += STEP) {\n        date.setHours(hour, minutes);\n        date.setSeconds(0, 0);\n\n        if (this.isBeforeMinTime(date, minTime)) {\n          continue; // eslint-disable-line no-continue\n        }\n\n        if (this.isAfterMaxTime(date, maxTime)) {\n          break;\n        } // @todo: should we always display it short in the combobox given that it makes no sense?\n\n\n        timeList.push({\n          type: 'option-inline',\n          text: this.format(date, optionsTimeFormat),\n          value: this.format(date)\n        });\n      }\n    }\n\n    return timeList;\n  }\n\n  get timeList() {\n    if (!this._timeList) {\n      this._timeList = this.buildTimeList();\n    }\n\n    if (!this._value) {\n      return this._timeList;\n    }\n\n    const timeToHighlight = getTimeToHighlight(this._value, STEP);\n\n    const timeList = this._timeList.map(item => {\n      const itemCopy = Object.assign({}, item);\n\n      if (item.value === this._value) {\n        itemCopy.iconName = 'utility:check';\n        itemCopy.checked = true;\n      } else {\n        itemCopy.checked = false;\n      }\n\n      if (item.value === timeToHighlight) {\n        itemCopy.highlight = true;\n      }\n\n      return itemCopy;\n    });\n\n    return timeList;\n  }\n\n  rebuildAndUpdateTimeList() {\n    // forcing the time list to be rebuilt\n    this._timeList = null;\n    this._items = this.timeList;\n  }\n\n  get timeFormat() {\n    if (!this._timeFormat) {\n      this._timeFormat = this.getTimeFormatFromStyle();\n    }\n\n    return this._timeFormat;\n  }\n\n  set timeFormat(value) {\n    this._timeFormat = value;\n  }\n\n  getCombobox() {\n    return this.template.querySelector('lightning-base-combobox');\n  }\n\n  handleFocus() {\n    this.dispatchEvent(new CustomEvent('focus'));\n  }\n\n  handleBlur() {\n    this.dispatchEvent(new CustomEvent('blur'));\n  }\n\n  handleInputChange(event) {\n    event.preventDefault();\n    event.stopPropagation(); // keeping the display value in sync with the element's value\n\n    this._displayValue = event.detail.text;\n    this._value = this.parseFormattedTime(this._displayValue);\n    this._items = this.timeList;\n    this.dispatchChangeEvent();\n  }\n\n  handleTextInput(event) {\n    event.preventDefault();\n    event.stopPropagation(); // keeping the display value in sync with the element's value\n\n    this._displayValue = event.detail.text;\n  }\n\n  handleTimeSelect(event) {\n    event.stopPropagation(); // for some reason this event is fired without detail from grouped-combobox\n\n    if (!event.detail) {\n      return;\n    }\n\n    this._value = event.detail.value;\n    this._displayValue = normalizeISOTime(this._value, this.timeFormat).displayValue;\n    this._items = this.timeList;\n    this.dispatchChangeEvent();\n  }\n\n  handleDropdownOpenRequest() {\n    this._items = this.timeList;\n  }\n\n  dispatchChangeEvent() {\n    this.dispatchEvent(new CustomEvent('change', {\n      composed: true,\n      bubbles: true,\n      detail: {\n        value: this._value\n      }\n    }));\n  }\n\n  format(date, formatString) {\n    if (formatString) {\n      return formatTime(date, formatString);\n    }\n\n    return getISOTimeString(date);\n  }\n\n  isBeforeMinTime(date, minTime) {\n    const minDate = minTime || parseTime(removeTimeZoneSuffix(this.min));\n    return minDate ? isBefore(date, minDate, 'minute') : false;\n  }\n\n  isAfterMaxTime(date, maxTime) {\n    const maxDate = maxTime || parseTime(removeTimeZoneSuffix(this.max));\n    return maxDate ? isAfter(date, maxDate, 'minute') : false;\n  }\n\n  getTimeFormatFromStyle(timeStyle) {\n    let timeFormat;\n\n    switch (timeStyle) {\n      case TIME_STYLE.MEDIUM:\n      case TIME_STYLE.LONG:\n        timeFormat = mediumTimeFormat;\n        break;\n\n      default:\n        timeFormat = shortTimeFormat;\n        break;\n    }\n\n    return timeFormat;\n  }\n\n  get allowedTimeFormats() {\n    // the locale.timeFormat is the medium format. Locale dont supports a large\n    // time format at the moment.\n    return [mediumTimeFormat, shortTimeFormat];\n  }\n  /**\n   * Parses the input time and sets the timeFormat used to parse the displayValue\n   * if it is a valid time.\n   *\n   * @param {String} displayValue - The input date.\n   * @return {null | string} - A normalized formatted time if displayValue is valid. null otherwise.\n   */\n\n\n  parseFormattedTime(displayValue) {\n    const allowedFormats = this.allowedTimeFormats;\n    const n = allowedFormats.length;\n    let i = 0,\n        value = null;\n\n    do {\n      value = normalizeFormattedTime(displayValue, allowedFormats[i]);\n      i++;\n    } while (value === null && i < n);\n\n    if (value !== null) {\n      this.timeFormat = allowedFormats[i - 1];\n    }\n\n    return value;\n  }\n\n  get hasExternalLabel() {\n    return this.variant === VARIANT.LABEL_HIDDEN && this.ariaLabelledByElement && this.ariaLabelledByElement.length;\n  }\n  /*LWC compiler v2.13.0*/\n\n\n}\n\nLightningTimePicker.delegatesFocus = true;\n\n_registerDecorators(LightningTimePicker, {\n  publicProps: {\n    autocomplete: {\n      config: 0\n    },\n    ariaLabelledByElement: {\n      config: 0\n    },\n    ariaControlsElement: {\n      config: 0\n    },\n    ariaLabel: {\n      config: 0\n    },\n    label: {\n      config: 0\n    },\n    name: {\n      config: 0\n    },\n    placeholder: {\n      config: 0\n    },\n    messageWhenValueMissing: {\n      config: 0\n    },\n    messageWhenBadInput: {\n      config: 3\n    },\n    messageWhenRangeOverflow: {\n      config: 3\n    },\n    messageWhenRangeUnderflow: {\n      config: 3\n    },\n    ariaDescribedByElements: {\n      config: 3\n    },\n    value: {\n      config: 3\n    },\n    disabled: {\n      config: 3\n    },\n    readOnly: {\n      config: 3\n    },\n    required: {\n      config: 3\n    },\n    fieldLevelHelp: {\n      config: 3\n    },\n    variant: {\n      config: 3\n    },\n    max: {\n      config: 3\n    },\n    min: {\n      config: 3\n    },\n    timeStyle: {\n      config: 3\n    }\n  },\n  publicMethods: [\"hasBadInput\", \"showHelpMessage\", \"focus\", \"blur\"],\n  track: {\n    _disabled: 1,\n    _required: 1,\n    _displayValue: 1,\n    _value: 1,\n    _min: 1,\n    _max: 1,\n    _items: 1,\n    _fieldLevelHelp: 1,\n    _variant: 1,\n    _mainInputId: 1,\n    _errorMessage: 1,\n    _readonly: 1,\n    _describedByElements: 1\n  },\n  fields: [\"_ariaDescribedByElements\"]\n});\n\nexport default _registerComponent(LightningTimePicker, {\n  tmpl: _tmpl\n});","import { getISOTimeString, parseTime } from 'lightning/internationalizationLibrary';\n/* returns the closes time in the list that should be highlighted in case the value is not in the list. E.g.\n- if value is 16:18 and the list has 15 minute intervals, returns 16:30\n*/\n\nexport function getTimeToHighlight(value, step) {\n  const selectedTime = parseTime(value);\n\n  if (!selectedTime) {\n    return null;\n  }\n\n  selectedTime.setSeconds(0, 0);\n  let closestHour = selectedTime.getHours();\n  let closestMinute = selectedTime.getMinutes();\n  const mod = closestMinute % step;\n  const quotient = Math.floor(closestMinute / step);\n\n  if (mod !== 0) {\n    const multiplier = mod < step / 2 ? quotient : quotient + 1;\n    closestMinute = multiplier * step;\n\n    if (closestMinute >= 60) {\n      if (closestHour === 23) {\n        closestMinute -= step;\n      } else {\n        closestMinute = 0;\n        closestHour++;\n      }\n    }\n\n    selectedTime.setHours(closestHour);\n    selectedTime.setMinutes(closestMinute);\n  }\n\n  return getISOTimeString(selectedTime);\n}","import { registerDecorators as _registerDecorators, createElement } from \"lwc\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AutoPosition, Direction } from 'lightning/positionLibrary';\nimport { assert, guid, normalizeAriaAttribute, normalizeString } from 'lightning/utilsPrivate';\nimport LightningPrimitiveBubble from 'lightning/primitiveBubble';\nexport { Direction } from 'lightning/positionLibrary';\nexport const BUBBLE_PREFIX = `salesforce-lightning-tooltip-bubble`;\nconst BUBBLE_ID = `${BUBBLE_PREFIX}_${guid()}`;\n\nfunction isResizeObserverSupported() {\n  return window.ResizeObserver != null;\n}\n\nfunction buildResizeObserver(callback) {\n  if (isResizeObserverSupported()) {\n    return new ResizeObserver(callback);\n  }\n\n  return {\n    observe() {},\n\n    unobserve() {}\n\n  };\n}\n/**\n * Shared instance of a primitive bubble used as a tooltip by most components. This was originally\n * defined in the helptext component which is where the minWidth style came from.\n * TODO: We may want to revisit the minWidth style with the PO and/or UX.\n */\n\n\nlet CACHED_BUBBLE_ELEMENT;\n\nfunction getCachedBubbleElement() {\n  if (!CACHED_BUBBLE_ELEMENT) {\n    CACHED_BUBBLE_ELEMENT = createElement('lightning-primitive-bubble', {\n      is: LightningPrimitiveBubble\n    });\n    CACHED_BUBBLE_ELEMENT.contentId = BUBBLE_ID;\n    CACHED_BUBBLE_ELEMENT.style.position = 'absolute';\n    CACHED_BUBBLE_ELEMENT.style.minWidth = '75px'; // hide bubble element on create\n\n    CACHED_BUBBLE_ELEMENT.classList.add('slds-hide');\n    CACHED_BUBBLE_ELEMENT.addEventListener('transitionend', () => {\n      // W-7201022 https://gus.lightning.force.com/lightning/r/ADM_Work__c/a07B00000079kNjIAI/view\n      // The tooltip uses absolute positioning and visibility gets set to hidden to\n      // hide it from view which means it's still part of the document layout.\n      // If we don't hide the bubble it could stay on the page and accidentally scroll pages\n      // in the console app after a tab switch, especially when the tab content lengths differ.\n      if (!CACHED_BUBBLE_ELEMENT.visible) {\n        CACHED_BUBBLE_ELEMENT.classList.add('slds-hide');\n      }\n    });\n  }\n\n  return CACHED_BUBBLE_ELEMENT;\n}\n\nconst ARIA_DESCRIBEDBY = 'aria-describedby';\n/**\n * Used as a position offset to compensate for the nubbin. The dimensions of the nubbin are not\n * included in the position library bounding box calculations. This is the size in pixels of the\n * nubbin.\n * TODO: We may want to measure this instead in cases it changes.\n */\n\nconst NUBBIN_SIZE = 16;\n/**\n * Used in the calculation that moves the tooltip to a location that places the nubbin at the\n * center of the target element. This is the nubbin offset from the edge of the bubble in pixels\n * when using slds-nubbin_bottom-left or slds-nubbin_bottom-right.\n * TODO: We may want to measure this instead in case it changes.\n */\n\nconst NUBBIN_OFFSET = 24;\n/**\n * Known tooltip types:\n * - info: used in cases where target already has click handlers such as button-icon\n * - toggle: used in cases where target only shows a tooltip such as helptext\n */\n\nexport const TooltipType = {\n  Info: 'info',\n  Toggle: 'toggle'\n};\n/**\n * Allows us to attach a tooltip to components. Typical usage is as follows:\n * - Create an instance of Tooltip\n * - Call Tooltip.initialize() to add the appropriate listeners to the element that needs a tooltip\n * See buttonIcon and buttonMenu for example usage.\n */\n\nexport class Tooltip {\n  /**\n   * A shared instance of primitiveBubble is used when an element is not specified in the config\n   * object.\n   * @param {string} value the content of the tooltip\n   * @param {object} config specifies the root component, target element of the tooltip\n   */\n  constructor(value, config) {\n    this._autoPosition = null;\n    this._disabled = true;\n    this._initialized = false;\n    this._visible = false;\n    this._config = {};\n    assert(config.target, 'target for tooltip is undefined or missing');\n    this.value = value;\n    this._root = config.root;\n    this._target = config.target;\n    this._config = _objectSpread({}, config);\n    this._config.align = config.align || {};\n    this._config.targetAlign = config.targetAlign || {};\n    this._type = normalizeString(config.type, {\n      fallbackValue: TooltipType.Info,\n      validValues: Object.values(TooltipType)\n    }); // If a tooltip element is not given, fall back on the globally shared instance.\n\n    this._element = config.element;\n\n    if (!this._element) {\n      this._element = getCachedBubbleElement;\n      const bubbleElement = getCachedBubbleElement();\n\n      if (bubbleElement.parentNode === null) {\n        document.body.appendChild(bubbleElement);\n      }\n    }\n\n    this.handleDocumentTouch = this.handleDocumentTouch.bind(this);\n  }\n  /**\n   * Disables the tooltip.\n   */\n\n\n  detach() {\n    this._disabled = true;\n  }\n  /**\n   * Enables the tooltip.\n   */\n\n\n  attach() {\n    this._disabled = false;\n  }\n  /**\n   * Adds the appropriate event listeners to the target element to make the tooltip appear. Also\n   * links the tooltip and target element via the aria-describedby attribute for screen readers.\n   */\n\n\n  initialize() {\n    const target = this._target();\n\n    if (!this._initialized && target) {\n      switch (this._type) {\n        case TooltipType.Toggle:\n          this.addToggleListeners();\n          break;\n\n        case TooltipType.Info:\n        default:\n          this.addInfoListeners();\n          break;\n      }\n\n      const ariaDescribedBy = normalizeAriaAttribute([target.getAttribute(ARIA_DESCRIBEDBY), this._element().contentId]);\n      target.setAttribute(ARIA_DESCRIBEDBY, ariaDescribedBy);\n      this._initialized = true;\n    }\n  }\n\n  addInfoListeners() {\n    const target = this._target();\n\n    if (!this._initialized && target) {\n      ['mouseenter', 'focus'].forEach(name => target.addEventListener(name, () => this.show())); // Unlike the tooltip in Aura, we want clicks and keys to dismiss the tooltip.\n\n      ['mouseleave', 'blur', 'click', 'keydown'].forEach(name => target.addEventListener(name, event => this.hideIfNotSelfCover(event)));\n    }\n  }\n\n  hideIfNotSelfCover(event) {\n    if (event.type === 'mouseleave' && event.clientX && event.clientY) {\n      // In any chance, if mouseleave is caused by tooltip itself, it would means\n      // tooltip cover the target which mostly caused by dynamic resize of tooltip by CSS or JS.\n      try {\n        const elementMouseIsOver = document.elementFromPoint ? document.elementFromPoint(event.clientX, event.clientY) : null;\n\n        if (elementMouseIsOver === this._element()) {\n          if (!isResizeObserverSupported()) {\n            this.startPositioning();\n          }\n\n          return;\n        }\n      } catch (ex) {// Jest Throw Exception\n      }\n    }\n\n    this.hide();\n  }\n\n  handleDocumentTouch() {\n    if (this._visible) {\n      this.hide();\n    }\n  }\n\n  addToggleListeners() {\n    const target = this._target();\n\n    if (!this._initialized && target) {\n      target.addEventListener('touchstart', e => {\n        e.stopPropagation();\n        this.toggle();\n      });\n      ['mouseenter', 'focus'].forEach(name => target.addEventListener(name, () => this.show()));\n      ['mouseleave', 'blur'].forEach(name => target.addEventListener(name, event => this.hideIfNotSelfCover(event)));\n    }\n  }\n\n  get resizeObserver() {\n    if (!this._resizeObserver) {\n      this._resizeObserver = buildResizeObserver(() => {\n        if (this._visible && this._autoPosition) {\n          this.startPositioning();\n        }\n      });\n    }\n\n    return this._resizeObserver;\n  }\n\n  show() {\n    if (this._disabled) {\n      return;\n    }\n\n    this._visible = true;\n\n    const tooltip = this._element();\n    /* We only change the visibility of the cached bubble element here,\n       for custom bubble elements, we expect them to react to `visible`\n       property change */\n\n\n    if (CACHED_BUBBLE_ELEMENT) {\n      // Show cached bubble element\n      CACHED_BUBBLE_ELEMENT.classList.remove('slds-hide');\n    }\n\n    tooltip.content = this._value;\n    this.startPositioning();\n    document.addEventListener('touchstart', this.handleDocumentTouch);\n    this.resizeObserver.observe(tooltip);\n  }\n\n  hide() {\n    this._visible = false;\n\n    const tooltip = this._element();\n\n    tooltip.visible = this._visible;\n    this.stopPositioning();\n    document.removeEventListener('touchstart', this.handleDocumentTouch);\n    this.resizeObserver.unobserve(tooltip);\n  }\n\n  toggle() {\n    if (this._visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n    this._disabled = !value;\n  }\n\n  get initialized() {\n    return this._initialized;\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  startPositioning() {\n    if (!this._autoPosition) {\n      this._autoPosition = new AutoPosition(this._root);\n    } // The lightning-helptext component was originally left aligned.\n\n\n    const align = {\n      horizontal: this._config.align.horizontal || Direction.Left,\n      vertical: this._config.align.vertical || Direction.Bottom\n    };\n    const targetAlign = {\n      horizontal: this._config.targetAlign.horizontal || Direction.Left,\n      vertical: this._config.targetAlign.vertical || Direction.Top\n    }; // Pads the tooltip so its nubbin is at the center of the target element.\n\n    const targetBox = this._target().getBoundingClientRect();\n\n    const padLeft = targetBox.width * 0.5 - NUBBIN_OFFSET;\n\n    this._autoPosition.start({\n      target: this._target,\n      element: this._element,\n      align,\n      targetAlign,\n      autoFlip: true,\n      padTop: NUBBIN_SIZE,\n      padLeft\n    }).then(autoPositionUpdater => {\n      // The calculation above may have flipped the alignment of the tooltip. When the\n      // tooltip changes alignment we need to update the nubbin class to have it draw in\n      // the appropriate place.\n      if (autoPositionUpdater) {\n        const tooltip = this._element();\n\n        tooltip.align = autoPositionUpdater.config.align;\n        tooltip.visible = this._visible;\n      }\n    });\n  }\n\n  stopPositioning() {\n    if (this._autoPosition) {\n      this._autoPosition.stop();\n    }\n  }\n\n}\n\n_registerDecorators(Tooltip, {\n  fields: [\"_autoPosition\", \"_disabled\", \"_initialized\", \"_visible\", \"_config\"]\n});","import { isIE11 } from './browser';\n/**\n * Does the browser display animation.\n * Always returns false for IE11 due to performance.\n */\n\nexport function hasAnimation() {\n  if (isIE11) {\n    return false;\n  } // JEST Workaround\n\n\n  if (!window.matchMedia) {\n    return true;\n  }\n\n  const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n  return !(!mediaQuery || mediaQuery.matches);\n}","/* All Valid Aria Attributes, in camel case\n * - it's better to start from camel-case\n *   because `aria-${_.kebabCase('describedBy')}` => 'aria-described-by' (NOT aria property)\n * - correct aria property: 'aria-describedby'\n *  https://www.w3.org/TR/wai-aria/\n */\nconst ARIA_PROP_LIST = ['activeDescendant', 'atomic', 'autoComplete', 'busy', 'checked', 'colCount', 'colIndex', 'colSpan', 'controls', 'current', 'describedAt', 'describedBy', 'description', 'details', 'disabled', 'dropEffect', 'errorMessage', 'expanded', 'flowTo', 'grabbed', 'hasPopup', 'hidden', 'invalid', 'keyShortcuts', 'label', 'labelledBy', 'level', 'live', 'modal', 'multiLine', 'multiSelectable', 'orientation', 'owns', 'placeholder', 'posInSet', 'pressed', 'readOnly', 'relevant', 'required', 'roleDescription', 'rowCount', 'rowIndex', 'rowSpan', 'selected', 'setSize', 'sort', 'valueMax', 'valueMin', 'valueNow', 'valueText'];\n/**\n * Generate an ARIA lookup object when passing in a list of ARIA values\n * @param {Array} list A list of ARIA properties (array of strings)\n * @param {String} type A type which defaults to output ARIA properties as modified kebab-case, or camel-case\n * @example 'valueMax' string becomes: { VALUEMAX: 'aria-valuemax' }\n * @returns {Object} A lookup object for ARIA properties in (modified) kebab-case or camel-case\n */\n\nconst getAriaLookup = (list, type = 'default') => {\n  if (!list || list.length === 0) {\n    throw new Error('List of aria properties is required');\n  }\n\n  const lookupObj = {};\n\n  if (type === 'default') {\n    list.forEach(name => {\n      const nameUpperCase = name.toUpperCase();\n\n      if (!lookupObj[nameUpperCase]) {\n        lookupObj[nameUpperCase] = `aria-${name.toLowerCase()}`;\n      }\n    });\n    return lookupObj;\n  }\n\n  list.forEach(name => {\n    const ariaPropertyLowerCase = `aria-${name.toLowerCase()}`;\n    const ariaPropertyCamelCase = `aria${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n\n    if (!lookupObj[ariaPropertyLowerCase]) {\n      lookupObj[ariaPropertyLowerCase] = ariaPropertyCamelCase;\n    }\n  });\n  return lookupObj;\n};\n/**\n * ARIA lookup, 'modified' kebab-case\n * Given an array of aria property strings in camel-case, produce a lookup object\n * NOTE: 'ariaDescribedBy' (camel-case ARIA property) in TRUE kebab-case would be:\n * - 'aria-described-by' (not valid ARIA)\n * - 'aria-describedby' (valid ARIA, or modified kebab-case)\n * Example: 'describedBy' -> { DESCRIBEDBY: 'aria-describedby' }\n */\n\n\nexport const ARIA = getAriaLookup(ARIA_PROP_LIST);\n/**\n * ARIA lookup, aria-property (key): 'ariaCamelCase' (value)\n * Example: 'valueMax' -> { 'aria-valuemax': 'ariaValueMax' }\n * Useful for converting from normal aria properties to aria camel cased values\n */\n\nexport const ARIA_TO_CAMEL = getAriaLookup(ARIA_PROP_LIST, 'cc');\n/**\n * Set either 'aria-describedby' or 'aria-description' value for accessibility\n * based on the presence of 'description' api value and support of the newer ARIA\n * 'aria-description'.  At launch, Firefox, Safari do not support it (and IE11 never will).\n * https://caniuse.com/mdn-api_element_ariadescription\n * @private\n * @returns {boolean} true indicates aria-description is supported; false, no support\n */\n// cached value, so check once and only once\n\nlet ariaDescriptionSupported = null;\nexport function isAriaDescriptionSupported() {\n  // return previously cached value, don't recheck\n  if (ariaDescriptionSupported !== null) {\n    return ariaDescriptionSupported;\n  } // if not previously set, test for browser support\n\n\n  const testVal = 'test ability to set';\n  const span = document.createElement('span');\n\n  try {\n    span.ariaDescription = testVal;\n    const ariaDescVal = span.getAttribute(ARIA.DESCRIPTION);\n    ariaDescriptionSupported = testVal === ariaDescVal;\n  } catch (e) {\n    ariaDescriptionSupported = false;\n  }\n\n  return ariaDescriptionSupported;\n}","export function assert(condition, message) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!condition) {\n      throw new Error(message);\n    }\n  }\n}","export const isIE11 = isIE11Test(navigator);\nexport const isChrome = isChromeTest(navigator);\nexport const isSafari = isSafariTest(navigator); // The following functions are for tests only\n\nexport function isIE11Test(navigator) {\n  // https://stackoverflow.com/questions/17447373/how-can-i-target-only-internet-explorer-11-with-javascript\n  return /Trident.*rv[ :]*11\\./.test(navigator.userAgent);\n}\nexport function isChromeTest(navigator) {\n  // https://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome\n  return /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n}\nexport function isSafariTest(navigator) {\n  // via https://stackoverflow.com/questions/49872111/detect-safari-and-stop-script\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}","export function classListMutation(classList, config) {\n  Object.keys(config).forEach(key => {\n    if (typeof key === 'string' && key.length) {\n      if (config[key]) {\n        classList.add(key);\n      } else {\n        classList.remove(key);\n      }\n    }\n  });\n}","/**\nAn emitter implementation based on the Node.js EventEmitter API:\nhttps://nodejs.org/dist/latest-v6.x/docs/api/events.html#events_class_eventemitter\n**/\nexport class EventEmitter {\n  constructor() {\n    this.registry = {};\n  }\n  /**\n  Registers a listener on the emitter\n  @method EventEmitter#on\n  @param {String} name - The name of the event\n  @param {Function} listener - The callback function\n  @return {EventEmitter} - Returns a reference to the `EventEmitter` so that calls can be chained\n  **/\n\n\n  on(name, listener) {\n    this.registry[name] = this.registry[name] || [];\n    this.registry[name].push(listener);\n    return this;\n  }\n  /**\n  Registers a listener on the emitter that only executes once\n  @method EventEmitter#once\n  @param {String} name - The name of the event\n  @param {Function} listener - The callback function\n  @return {EventEmitter} - Returns a reference to the `EventEmitter` so that calls can be chained\n  **/\n\n\n  once(name, listener) {\n    const doOnce = function () {\n      listener.apply(null, arguments);\n      this.removeListener(name, doOnce);\n    }.bind(this);\n\n    this.on(name, doOnce);\n    return this;\n  }\n  /**\n  Synchronously calls each listener registered with the specified event\n  @method EventEmitter#emit\n  @param {String} name - The name of the event\n  @return {Boolean} - Returns `true` if the event had listeners, `false` otherwise\n  **/\n\n\n  emit(name) {\n    const args = Array.prototype.slice.call(arguments, 1);\n    const listeners = this.registry[name];\n    let count = 0;\n\n    if (listeners) {\n      listeners.forEach(listener => {\n        count += 1;\n        listener.apply(null, args);\n      });\n    }\n\n    return count > 0;\n  }\n  /**\n  Removes the specified `listener` from the listener array for the event named `name`\n  @method EventEmitter#removeListener\n  @param {String} name - The name of the event\n  @param {Function} listener - The callback function\n  @return {EventEmitter} - Returns a reference to the `EventEmitter` so that calls can be chained\n  **/\n\n\n  removeListener(name, listener) {\n    const listeners = this.registry[name];\n\n    if (listeners) {\n      for (let i = 0, len = listeners.length; i < len; i += 1) {\n        if (listeners[i] === listener) {\n          listeners.splice(i, 1);\n          return this;\n        }\n      }\n    }\n\n    return this;\n  }\n\n}","/**\n * Utility function to generate an unique guid.\n * used on state objects to provide a performance aid when iterating\n * through the items and marking them for render\n * @returns {String} an unique string ID\n */\nexport function guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}","/**\n * This marks all siblings of the blocking elements and the siblings of all of its parents as inert by setting\n * 'aria-hidden' to 'true'.\n *\n * This assumes that the DOM is not being modified while the blocking element is showing, otherwise observers would\n * be needed.\n *\n * @param {Element} blockingElement The active element that will be be blocking the rest of the page.\n * @returns {Array} An array of {node, ariaHidden} objects, where node is the node that had its ariaHidden set\n * to 'true', and ariaHidden is the previous value of the 'aria-hidden' attribute. Use this to restore inertness.\n */\nexport function makeEverythingExceptElementInert(blockingElement) {\n  const savedInertElements = [];\n  let nonInertElement = blockingElement;\n  let parent = nonInertElement.parentNode.host || nonInertElement.parentNode;\n\n  while (parent != null) {\n    if (parent.nodeType === Node.ELEMENT_NODE) {\n      // Start with the first child, if the parent blockingElement has a shadow root then use the first child of that\n      let child = parent.firstChild;\n\n      if (child === null && parent.shadowRoot) {\n        child = parent.shadowRoot.firstChild;\n      }\n\n      while (child !== null) {\n        // Ignore the blocking elements and all its parents (nonInertElement).\n        if (child.nodeType === Node.ELEMENT_NODE && child !== nonInertElement && child.localName !== 'head') {\n          savedInertElements.push({\n            node: child,\n            ariaHidden: child.ariaHidden\n          });\n          child.ariaHidden = true;\n        }\n\n        child = child.nextSibling;\n      }\n\n      nonInertElement = parent;\n      parent = parent.parentNode;\n    } else if (parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      // It maybe a custom component, attempt to get the host\n      parent = parent.host;\n    } else {\n      parent = parent.parentNode;\n    }\n  }\n\n  return savedInertElements;\n}\nexport function restoreInertness(savedInertElements) {\n  savedInertElements.forEach(element => {\n    if (element.node) {\n      element.node.ariaHidden = element.ariaHidden;\n    }\n  });\n}","export const keyCodes = {\n  tab: 9,\n  backspace: 8,\n  enter: 13,\n  escape: 27,\n  space: 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  delete: 46,\n  shift: 16\n}; // Acceptable values are defined here: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n// remove this function when IE11 support is dropped\n\nexport function normalizeKeyValue(value) {\n  switch (value) {\n    case 'Spacebar':\n      return ' ';\n\n    case 'Esc':\n      return 'Escape';\n\n    case 'Del':\n      return 'Delete';\n\n    case 'Left':\n      return 'ArrowLeft';\n\n    case 'Right':\n      return 'ArrowRight';\n\n    case 'Down':\n      return 'ArrowDown';\n\n    case 'Up':\n      return 'ArrowUp';\n\n    default:\n      return value;\n  }\n}\nconst buffer = {};\nexport function isShiftMetaOrControlKey(event) {\n  return event.shiftKey || event.metaKey || event.ctrlKey;\n}\n/**\n * Runs an action and passes the string of buffered keys typed within a short time period.\n * Use for type-ahead like functionality in menus, lists, comboboxes, and similar components.\n *\n * @param {CustomEvent} event A keyboard event\n * @param {Function} action function to run, it's passed the buffered text\n */\n\nexport function runActionOnBufferedTypedCharacters(event, action) {\n  const letter = event.key;\n\n  if (letter && letter.length > 1) {\n    // Not an individual character/letter, but rather a special code (like Shift, Backspace, etc.)\n    return;\n  } // If we were going to clear what keys were typed, don't yet.\n\n\n  if (buffer._clearBufferId) {\n    clearTimeout(buffer._clearBufferId);\n  }\n\n  buffer._keyBuffer = buffer._keyBuffer || [];\n\n  buffer._keyBuffer.push(letter);\n\n  const matchText = buffer._keyBuffer.join('').toLowerCase();\n\n  action(matchText); // eslint-disable-next-line @lwc/lwc/no-async-operation\n\n  buffer._clearBufferId = setTimeout(() => {\n    buffer._keyBuffer = [];\n  }, 700);\n}","import { makeAbsoluteUrl } from './url';\nexport const urlRegexString = \"((?:(?:https?|ftp):\\\\/\\\\/(?:[\\\\w\\\\-\\\\|=%~#\\\\/+*@\\\\.,;:\\\\?!']|&){0,2047}(?:[\\\\(\\\\)\\\\.\\\\w=\\\\/+#-]*)[^\\\\s()\\\\.<>,;\\\\[\\\\]`'\\\"])|(?:\\\\b(?:[a-z0-9](?:[-a-z0-9]{0,62}[a-z0-9])?\\\\.)+(?:AC|AD|AE|AERO|AF|AG|AI|AL|AM|AN|AO|AQ|AR|ARPA|AS|ASIA|AT|AU|AW|AX|AZ|BA|BB|BD|BE|BF|BG|BH|BI|BIZ|BJ|BM|BN|BO|BR|BS|BT|BV|BW|BY|BZ|CA|CAT|CC|CD|CF|CG|CH|CI|CK|CL|CM|CN|CO|COM|COOP|CR|CU|CV|CX|CY|CZ|DE|DJ|DK|DM|DO|DZ|EC|EDU|EE|EG|ER|ES|ET|EU|FI|FJ|FK|FM|FO|FR|GA|GB|GD|GE|GF|GG|GH|GI|GL|GM|GN|GOV|GP|GQ|GR|GS|GT|GU|GW|GY|HK|HM|HN|HR|HT|HU|ID|IE|IL|IM|IN|INFO|INT|IO|IQ|IR|IS|IT|JE|JM|JO|JOBS|JP|KE|KG|KH|KI|KM|KN|KP|KR|KW|KY|KZ|LA|LB|LC|LI|LK|LR|LS|LT|LU|LV|LY|MA|MC|MD|ME|MG|MH|MIL|MK|ML|MM|MN|MO|MOBI|MP|MQ|MR|MS|MT|MU|MUSEUM|MV|MW|MX|MY|MZ|NA|NAME|NC|NE|NET|NF|NG|NI|NL|NO|NP|NR|NU|NZ|OM|ORG|PA|PE|PF|PG|PH|PK|PL|PM|PN|PR|PRO|PS|PT|PW|PY|QA|RE|RO|RS|RU|RW|SA|SB|SC|SD|SE|SG|SH|SI|SJ|SK|SL|SM|SN|SO|SR|ST|SU|SV|SY|SZ|TC|TD|TEL|TF|TG|TH|TJ|TK|TL|TM|TN|TO|TP|TR|TRAVEL|TT|TV|TW|TZ|UA|UG|UK|US|UY|UZ|VA|VC|VE|VG|VI|VN|VU|WF|WS|XN--0ZWM56D|XN--11B5BS3A9AJ6G|XN--80AKHBYKNJ4F|XN--9T4B11YI5A|XN--DEBA0AD|XN--FIQS8S|XN--FIQZ9S|XN--G6W251D|XN--HGBK6AJ7F53BBA|XN--HLCJ6AYA9ESC7A|XN--J6W193G|XN--JXALPDLP|XN--KGBECHTV|XN--KPRW13D|XN--KPRY57D|XN--MGBAAM7A8H|XN--MGBERP4A5D4AR|XN--P1AI|XN--WGBH1C|XN--ZCKZAH|YE|YT|ZA|ZM|ZW)(?!@(?:[a-z0-9](?:[-a-z0-9]{0,62}[a-z0-9])?\\\\.)+(?:AC|AD|AE|AERO|AF|AG|AI|AL|AM|AN|AO|AQ|AR|ARPA|AS|ASIA|AT|AU|AW|AX|AZ|BA|BB|BD|BE|BF|BG|BH|BI|BIZ|BJ|BM|BN|BO|BR|BS|BT|BV|BW|BY|BZ|CA|CAT|CC|CD|CF|CG|CH|CI|CK|CL|CM|CN|CO|COM|COOP|CR|CU|CV|CX|CY|CZ|DE|DJ|DK|DM|DO|DZ|EC|EDU|EE|EG|ER|ES|ET|EU|FI|FJ|FK|FM|FO|FR|GA|GB|GD|GE|GF|GG|GH|GI|GL|GM|GN|GOV|GP|GQ|GR|GS|GT|GU|GW|GY|HK|HM|HN|HR|HT|HU|ID|IE|IL|IM|IN|INFO|INT|IO|IQ|IR|IS|IT|JE|JM|JO|JOBS|JP|KE|KG|KH|KI|KM|KN|KP|KR|KW|KY|KZ|LA|LB|LC|LI|LK|LR|LS|LT|LU|LV|LY|MA|MC|MD|ME|MG|MH|MIL|MK|ML|MM|MN|MO|MOBI|MP|MQ|MR|MS|MT|MU|MUSEUM|MV|MW|MX|MY|MZ|NA|NAME|NC|NE|NET|NF|NG|NI|NL|NO|NP|NR|NU|NZ|OM|ORG|PA|PE|PF|PG|PH|PK|PL|PM|PN|PR|PRO|PS|PT|PW|PY|QA|RE|RO|RS|RU|RW|SA|SB|SC|SD|SE|SG|SH|SI|SJ|SK|SL|SM|SN|SO|SR|ST|SU|SV|SY|SZ|TC|TD|TEL|TF|TG|TH|TJ|TK|TL|TM|TN|TO|TP|TR|TRAVEL|TT|TV|TW|TZ|UA|UG|UK|US|UY|UZ|VA|VC|VE|VG|VI|VN|VU|WF|WS|XN--0ZWM56D|XN--11B5BS3A9AJ6G|XN--80AKHBYKNJ4F|XN--9T4B11YI5A|XN--DEBA0AD|XN--FIQS8S|XN--FIQZ9S|XN--G6W251D|XN--HGBK6AJ7F53BBA|XN--HLCJ6AYA9ESC7A|XN--J6W193G|XN--JXALPDLP|XN--KGBECHTV|XN--KPRW13D|XN--KPRY57D|XN--MGBAAM7A8H|XN--MGBERP4A5D4AR|XN--P1AI|XN--WGBH1C|XN--ZCKZAH|YE|YT|ZA|ZM|ZW))(?:/[\\\\w\\\\-=?/.&;:%~,+@#*]{0,2048}(?:[\\\\w=/+#-]|\\\\([^\\\\s()]*\\\\)))?(?:$|(?=\\\\.$)|(?=\\\\.\\\\s)|(?=[^\\\\w\\\\.]))))\";\nexport const emailRegexString = '([\\\\w-\\\\.\\\\+_]{1,64}@(?:[\\\\w-]){1,255}(?:\\\\.[\\\\w-]{1,255}){1,10})';\nexport const newLineRegexString = '(\\r\\n|\\r|\\n)';\nexport const tagRegexString = '(<a[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</a>|<a[\\\\s]+[^>]+/>|' + '<i?frame[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</i?frame>|<i?frame[\\\\s]+[^>]+/>|' + '<area[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</area>|<area[\\\\s]+[^>]+/>|' + '<link[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</link>|<link[\\\\s]+[^>]+/>|' + '<img[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</img>|<img[\\\\s]+[^>]+>|' + '<form[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</form>|<form[\\\\s]+[^>]+/>|' + '<body[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</body>|<body[\\\\s]+[^>]+/>|' + '<head[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</head>|<head[\\\\s]+[^>]+/>|' + '<input[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</input>|<input[\\\\s]+[^>]+/>|' + '<button[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</button>|<button[\\\\s]+[^>]+/>|' + '<blockquote[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</blockquote>|<blockquote[\\\\s]+[^>]+/>|' + '<q[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</q>|<q[\\\\s]+[^>]+/>|' + '<del[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</del>|<del[\\\\s]+[^>]+/>|' + '<ins[\\\\s]+[^>]+[^/]>[\\\\s\\\\S]*?</ins>|<ins[\\\\s]+[^>]+/>)';\nexport const createHttpHref = function (url) {\n  return makeAbsoluteUrl(url);\n};\nexport const createEmailHref = function (email) {\n  return `mailto:${email}`;\n};","import { urlRegexString, newLineRegexString, emailRegexString, createHttpHref, createEmailHref } from './linkUtils';\n/*\n * Regex was taken from aura lib and refactored\n */\n\nconst linkRegex = new RegExp(`(${newLineRegexString})|${urlRegexString}|${emailRegexString}`, 'gi');\nconst linkRegexNoNewLine = new RegExp(`${urlRegexString}|${emailRegexString}`, 'gi');\nconst emailRegex = new RegExp(emailRegexString, 'gi');\nconst newLineRegex = new RegExp(newLineRegexString, 'gi');\n\nfunction getTextPart(text) {\n  return {\n    isText: true,\n    value: text\n  };\n}\n\nfunction getUrlPart(url, index) {\n  return {\n    isLink: true,\n    value: url,\n    href: createHttpHref(url),\n    key: `${url}-${index}`\n  };\n}\n\nfunction getEmailPart(email, index) {\n  return {\n    isLink: true,\n    value: email,\n    href: createEmailHref(email),\n    key: `${email}-${index}`\n  };\n}\n\nfunction getNewlinePart(index) {\n  return {\n    isNewline: true,\n    key: index\n  };\n}\n\nfunction getLinkPart(link, index, ignoreNewLines) {\n  if (!ignoreNewLines && link.match(newLineRegex)) {\n    return getNewlinePart(index);\n  } else if (link.match(emailRegex)) {\n    return getEmailPart(link, index);\n  }\n\n  return getUrlPart(link, index);\n}\n/**\n * Parse text into parts of text, links, emails, new lines\n * @param text {string} Text to parse into linkified parts\n * @param ignoreNewLines {boolean} Boolean indicating whether to return new line parts or not\n * if true new lines are included in text/url/email parts otherwise they are returned in their\n * own parts by default\n * @returns {[]}\n */\n\n\nexport function parseToFormattedLinkifiedParts(text, ignoreNewLines = false) {\n  const parts = [];\n  const re = ignoreNewLines ? linkRegexNoNewLine : linkRegex;\n  let match;\n  let index = 0;\n\n  while ((match = re.exec(text)) !== null) {\n    let link = match[0];\n    const endsWithQuote = link && link.endsWith('&quot'); // If we found an email or url match, then create a text part for everything\n    // up to the match and then create the part for the email or url\n\n    if (match.index > 0) {\n      parts.push(getTextPart(text.slice(0, match.index)));\n    }\n\n    if (endsWithQuote) {\n      link = link.slice(0, link.lastIndexOf('&quot'));\n    }\n\n    parts.push(getLinkPart(link, index, ignoreNewLines));\n\n    if (endsWithQuote) {\n      parts.push(getTextPart('&quot'));\n    }\n\n    text = text.substring(re.lastIndex);\n    re.lastIndex = 0;\n    index = index + 1;\n  }\n\n  if (text != null && text !== '') {\n    parts.push(getTextPart(text));\n  }\n\n  return parts;\n}\n/**\n * Parse text into parts of text and new lines\n * @param text {string} Text to parse into parts\n * @returns {[]}\n */\n\nexport function parseToFormattedParts(text) {\n  return text.split(newLineRegex).map((part, index) => {\n    return index % 2 === 0 ? getTextPart(part) : getNewlinePart();\n  });\n}","/**\nA string normalization utility for attributes.\n@param {String} value - The value to normalize.\n@param {Object} config - The optional configuration object.\n@param {String} [config.fallbackValue] - The optional fallback value to use if the given value is not provided or invalid. Defaults to an empty string.\n@param {Array} [config.validValues] - An optional array of valid values. Assumes all input is valid if not provided.\n@return {String} - The normalized value.\n**/\nexport function normalizeString(value, config = {}) {\n  const {\n    fallbackValue = '',\n    validValues,\n    toLowerCase = true\n  } = config;\n  let normalized = typeof value === 'string' && value.trim() || '';\n  normalized = toLowerCase ? normalized.toLowerCase() : normalized;\n\n  if (validValues && validValues.indexOf(normalized) === -1) {\n    normalized = fallbackValue;\n  }\n\n  return normalized;\n}\n/**\nA boolean normalization utility for attributes.\n@param {Any} value - The value to normalize.\n@return {Boolean} - The normalized value.\n**/\n\nexport function normalizeBoolean(value) {\n  return typeof value === 'string' || !!value;\n}\nexport function normalizeArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return [];\n}\n/**\nA aria attribute normalization utility.\n@param {Any} value - A single aria value or an array of aria values\n@return {String} - A space separated list of aria values\n**/\n\nexport function normalizeAriaAttribute(value) {\n  let arias = Array.isArray(value) ? value : [value];\n  arias = arias.map(ariaValue => {\n    if (typeof ariaValue === 'string') {\n      return ariaValue.replace(/\\s+/g, ' ').trim();\n    }\n\n    return '';\n  }).filter(ariaValue => !!ariaValue);\n  return arias.length > 0 ? arias.join(' ') : null;\n}","// hide panel on scroll\nconst POSITION_CHANGE_THRESHOLD = 5;\nexport function observePosition(target, threshold = POSITION_CHANGE_THRESHOLD, originalRect, callback) {\n  // retrieve current bounding client rect of target element\n  const newBoundingRect = target.getBoundingClientRect();\n  const newLeft = newBoundingRect.left;\n  const newTop = newBoundingRect.top; // old bounding rect values\n\n  const oldLeft = originalRect.left;\n  const oldTop = originalRect.top; // if we have a position change (horizontal or vertical) equal or greater to the threshold then execute the callback\n\n  const horizontalShiftDelta = Math.abs(newLeft - oldLeft);\n  const verticalShiftDelta = Math.abs(newTop - oldTop);\n\n  if (horizontalShiftDelta >= threshold || verticalShiftDelta >= threshold) {\n    callback();\n  }\n}","const VALID_PAGE_REFERENCE_PROPERTIES = new Set(['type', 'attributes', 'state']);\nexport function isValidPageReference(object) {\n  return object && object.type && typeof object.type === 'string' && object.attributes && typeof object.attributes === 'object' && Object.keys(object).every(prop => VALID_PAGE_REFERENCE_PROPERTIES.has(prop));\n}","import locale from '@salesforce/i18n/locale';\nconst NA_PHONE_NUMBER = '($1) $2-$3';\nconst IS_TEN_DIGITS = /^\\d{10}$/;\nconst TEN_TO_NA = /(\\d{3})(\\d{3})(\\d{4})/;\nconst IS_ELEVEN_DIGITS = /^1\\d{10}$/;\nconst ELEVEN_TO_NA = /1(\\d{3})(\\d{3})(\\d{4})$/; // The locale argument has been added for tests since there's currently no clean way of mocking the locale\n\nexport function toNorthAmericanPhoneNumber(value, userLocale) {\n  if (!isNorthAmericanCountry(userLocale || locale)) {\n    return value;\n  }\n\n  if (IS_TEN_DIGITS.test(value)) {\n    return value.replace(TEN_TO_NA, NA_PHONE_NUMBER);\n  } else if (IS_ELEVEN_DIGITS.test(value)) {\n    return value.replace(ELEVEN_TO_NA, NA_PHONE_NUMBER);\n  }\n\n  return value || '';\n}\n\nfunction isNorthAmericanCountry(userLocale) {\n  const localeCountry = getLocaleCountry(userLocale);\n\n  if (localeCountry === 'US' || localeCountry === 'CA') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getLocaleCountry(userLocale) {\n  if (!userLocale) {\n    // just adding a guard in case locale is undefined\n    return null;\n  }\n\n  const [, country] = userLocale.split('-');\n  return country;\n}","export function raf(fn) {\n  let ticking = false;\n  return function (event) {\n    if (!ticking) {\n      // eslint-disable-next-line @lwc/lwc/no-async-operation\n      requestAnimationFrame(() => {\n        fn.call(this, event);\n        ticking = false;\n      });\n    }\n\n    ticking = true;\n  };\n}","/**\n * Set an attribute on an element, if it's a normal element\n * it will use setAttribute, if it's an LWC component\n * it will use the public property\n *\n * @param {HTMLElement} element The element to act on\n * @param {String} attribute the attribute to set\n * @param {Any} value the value to set\n */\nexport function smartSetAttribute(element, attribute, value) {\n  if (element.tagName.match(/^LIGHTNING/i)) {\n    attribute = attribute.replace(/-\\w/g, m => m[1].toUpperCase());\n    element[attribute] = value ? value : null;\n  } else if (value) {\n    element.setAttribute(attribute, value);\n  } else {\n    element.removeAttribute(attribute);\n  }\n}","const URL_CHECK_REGEX = /^(\\/+|\\.+|ftp|http(s?):\\/\\/)/i;\nexport function isAbsoluteUrl(url) {\n  return URL_CHECK_REGEX.test(url);\n}\nexport function makeAbsoluteUrl(url) {\n  const protocol = window.location.protocol;\n  return isAbsoluteUrl(url) ? url : `${protocol}//${url}`;\n}","/**\n * Create a deep copy of an object or array\n * @param {object|array} obj - item to be copied\n * @returns {object|array} copy of the item\n */\nexport function deepCopy(obj) {\n  if (Object(obj) !== obj) {\n    // primitives\n    return obj;\n  }\n\n  if (obj instanceof Set) {\n    return new Set(obj);\n  }\n\n  if (obj instanceof Date) {\n    return new Date(obj);\n  }\n\n  if (typeof obj === 'function') {\n    return obj.bind({});\n  }\n\n  if (Array.isArray(obj)) {\n    const obj2 = [];\n    const len = obj.length;\n\n    for (let i = 0; i < len; i++) {\n      obj2.push(deepCopy(obj[i]));\n    }\n\n    return obj2;\n  }\n\n  const result = Object.create({});\n  let keys = Object.keys(obj);\n\n  if (obj instanceof Error) {\n    // Error properties are non-enumerable\n    keys = Object.getOwnPropertyNames(obj);\n  }\n\n  const len = keys.length;\n\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    result[key] = deepCopy(obj[key]);\n  }\n\n  return result;\n}\n/**\n * Compare two arrays and return true if they are equal\n * @param {array} array1 - first array to compare\n * @param {array} array2 - second array to compare\n * @returns {boolean} if the arrays are identical\n */\n\nexport function arraysEqual(array1, array2) {\n  // if either array is falsey, return false\n  if (!array1 || !array2) {\n    return false;\n  } // if array lengths don't match, return false\n\n\n  if (array1.length !== array2.length) {\n    return false;\n  }\n\n  for (let index = 0; index < array1.length; index++) {\n    // Check if we have nested arrays\n    if (array1[index] instanceof Array && array2[index] instanceof Array) {\n      // recurse into the nested arrays\n      if (!arraysEqual(array1[index], array2[index])) {\n        return false;\n      }\n    } else if (array1[index] !== array2[index]) {\n      // Warning - two different object instances will never be equal: {x:20} != {x:20}\n      return false;\n    }\n  }\n\n  return true;\n}\nexport const ArraySlice = Array.prototype.slice;","export { assert } from './assert';\nexport { ARIA, ARIA_TO_CAMEL, isAriaDescriptionSupported } from './aria';\nexport { EventEmitter } from './eventEmitter';\nexport { toNorthAmericanPhoneNumber } from './phonify';\nexport * from './linkUtils';\nexport { isAbsoluteUrl, makeAbsoluteUrl } from './url';\nexport { deepCopy, arraysEqual, ArraySlice } from './utility';\nexport { guid } from './guid';\nexport { classListMutation } from './classListMutation';\nexport { makeEverythingExceptElementInert, restoreInertness } from './inert';\nexport { hasAnimation } from './animation';\nexport { normalizeBoolean, normalizeString, normalizeArray, normalizeAriaAttribute } from './normalize';\nexport { keyCodes, runActionOnBufferedTypedCharacters, normalizeKeyValue, isShiftMetaOrControlKey } from './keyboard';\nexport { raf } from './scroll';\nexport { isChrome, isIE11, isSafari } from './browser';\nexport { observePosition } from './observers';\nexport { hasOnlyAllowedVideoIframes } from './videoUtils';\nexport { parseToFormattedLinkifiedParts, parseToFormattedParts } from './linkify';\nexport { isValidPageReference } from './pageReference';\nimport { smartSetAttribute } from './smartSetAttribute';\n/**\n * @param {HTMLElement} element Element to act on\n * @param {Object} values values and attributes to set, if the value is\n *                        falsy it the attribute will be removed\n */\n\nexport function synchronizeAttrs(element, values) {\n  if (!element) {\n    return;\n  }\n\n  const attributes = Object.keys(values);\n  attributes.forEach(attribute => {\n    smartSetAttribute(element, attribute, values[attribute]);\n  });\n}\n/**\n * Get the actual DOM id for an element\n * @param {HTMLElement|String} el The element to get the id for (string will just be returned)\n *\n * @returns {String} The DOM id or null\n */\n\nexport function getRealDOMId(el) {\n  if (el && typeof el === 'string') {\n    return el;\n  } else if (el) {\n    return el.getAttribute('id');\n  }\n\n  return null;\n}\n/**\n * Returns the active element traversing shadow roots\n * @returns {Element} Active Element inside shadow\n */\n\nexport function getShadowActiveElement() {\n  let activeElement = document.activeElement;\n\n  while (activeElement.shadowRoot && activeElement.shadowRoot.activeElement) {\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n\n  return activeElement;\n}\n/**\n * Returns the active elements at each shadow root level\n * @returns {Array} Active Elements  at each shadow root level\n */\n\nexport function getShadowActiveElements() {\n  let activeElement = document.activeElement;\n  const shadowActiveElements = [];\n\n  while (activeElement && activeElement.shadowRoot && activeElement.shadowRoot.activeElement) {\n    shadowActiveElements.push(activeElement);\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n\n  if (activeElement) {\n    shadowActiveElements.push(activeElement);\n  }\n\n  return shadowActiveElements;\n}\nexport function isRTL() {\n  return document.dir === 'rtl';\n}\nexport function isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\nexport function isNotUndefinedOrNull(value) {\n  return !isUndefinedOrNull(value);\n}\nconst DEFAULT_MODAL_ZINDEX = 9000;\nconst DEFAULT_ZINDEX_OFFSET = 100;\nconst DEFAULT_ZINDEX_BASELINE = DEFAULT_MODAL_ZINDEX + DEFAULT_ZINDEX_OFFSET;\n/**\n * Returns the zIndex baseline from slds zIndex variable --lwc-zIndexModal.\n * @returns {Number} zIndex baseline\n */\n\nexport function getZIndexBaseline() {\n  // When SLDS styles are present, typically on Core\n  // this currently resolves to: '9000' (string)\n  const modalZindexValueLwc = (window.getComputedStyle(document.documentElement) || document.documentElement.style).getPropertyValue('--lwc-zIndexModal');\n  const baseZindexModalLwc = parseInt(modalZindexValueLwc, 10);\n  return isNaN(baseZindexModalLwc) ? DEFAULT_ZINDEX_BASELINE : baseZindexModalLwc + DEFAULT_ZINDEX_OFFSET;\n}\nexport function timeout(interval) {\n  return new Promise(resolve => {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    setTimeout(resolve, interval);\n  });\n}\nexport function animationFrame() {\n  return new Promise(resolve => {\n    // eslint-disable-next-line @lwc/lwc/no-async-operation\n    window.requestAnimationFrame(resolve);\n  });\n}\n/**\n *\n * Decorates an input element to fire an \"input\"\n * event when the value is directly set.\n *\n * @param {HTMLElement} element The element to decorate.\n *\n */\n\nexport function decorateInputForDragon(element) {\n  const valuePropertyDescriptor = getInputValuePropertyDescriptor(element);\n  Object.defineProperty(element, 'value', {\n    set(value) {\n      valuePropertyDescriptor.set.call(this, value);\n      this.dispatchEvent(new CustomEvent('input'));\n    },\n\n    get: valuePropertyDescriptor.get,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction getInputValuePropertyDescriptor(element) {\n  return Object.getOwnPropertyDescriptor(Object.getPrototypeOf(element), 'value');\n}\n\nexport function setDecoratedDragonInputValueWithoutEvent(element, value) {\n  const valuePropertyDescriptor = getInputValuePropertyDescriptor(element);\n  return valuePropertyDescriptor.set.call(element, value);\n}\n/**\n * Escape HTML string\n * @param {String} html An html string\n * @returns {String} The escaped html string\n */\n\nexport function escapeHTML(html) {\n  return html.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n}\nexport const BUTTON_GROUP_ORDER = {\n  FIRST: 'first',\n  MIDDLE: 'middle',\n  LAST: 'last',\n  ONLY: 'only'\n};\n/**\n * returns the SLDS class for the given group order\n * @param groupOrder\n * @returns {string}\n */\n\nexport function buttonGroupOrderClass(groupOrder) {\n  return {\n    [BUTTON_GROUP_ORDER.FIRST]: 'slds-button_first',\n    [BUTTON_GROUP_ORDER.MIDDLE]: 'slds-button_middle',\n    [BUTTON_GROUP_ORDER.LAST]: 'slds-button_last',\n    [BUTTON_GROUP_ORDER.ONLY]: 'single-button'\n  }[groupOrder];\n}\n/**\n * Checks if the given component is native\n * @param {Object} cmp Component instance\n * @returns {Boolean} Whether the component is native\n */\n\nexport function isNativeComponent(cmp) {\n  if (cmp && cmp.template && cmp.template.constructor) {\n    return !!String(cmp.template.constructor).match(/\\[native code\\]/);\n  }\n\n  return false;\n}","const ALLOWED_DOMAINS = new Set(['www.youtube.com', 'www.youtube-nocookie.com', 'www.youtube.ca', 'www.youtube.jp', 'www.youtube.com.br', 'www.youtube.co.uk', 'www.youtube.nl', 'www.youtube.pl', 'www.youtube.es', 'www.youtube.ie', 'www.youtube.fr', 'player.vimeo.com', 'play.vidyard.com', 'players.brightcove.net', 'bcove.video', 'player.cloudinary.com', 'fast.wistia.net', 'i1.adis.ws', 's1.adis.ws', 'scormanywhere.secure.force.com', 'appiniummastertrial.secure.force.com']);\nexport function hasOnlyAllowedVideoIframes(htmlString) {\n  if (htmlString && htmlString.indexOf('<iframe') > -1) {\n    const parsedHtml = new DOMParser().parseFromString(htmlString, 'text/html');\n    const iframesList = Array.prototype.slice.call(parsedHtml.querySelectorAll('iframe'));\n    return iframesList.length > 0 && !iframesList.some(iframe => !isUrlAllowed(iframe.src));\n  }\n\n  return false;\n}\n\nfunction isUrlAllowed(url) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  return anchor.protocol === 'https:' && ALLOWED_DOMAINS.has(anchor.hostname);\n}","const classNamesHash = classes => {\n  return typeof classes === 'string' ? classes.trim().split(/\\s+/).reduce((acc, cn) => {\n    acc[cn] = true;\n    return acc;\n  }, {}) : classes;\n};\n\nconst proto = {\n  add(className) {\n    Object.assign(this, classNamesHash(className));\n    return this;\n  },\n\n  invert() {\n    Object.keys(this).forEach(key => {\n      this[key] = !this[key];\n    });\n    return this;\n  },\n\n  toString() {\n    return Object.keys(this).filter(key => this[key]).join(' ');\n  }\n\n};\nexport function classSet(config) {\n  return Object.assign(Object.create(proto), classNamesHash(config));\n}","/**\n * Takes label strings with placeholder params (`{0}`) and updates the label with given `args`\n * @param {string} str - any label string requiring injections of other strings/params (e.g., 'foo {0}')\n * @param  {string|array} arguments - string(s) to be injected into the `string` param\n * @returns {string} fully replaced string, e.g., '{0} is a {1}' -> 'Hal Jordan is a Green Lantern'\n */\nexport function formatLabel(str) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  let replacements = args;\n\n  if (Array.isArray(args[0])) {\n    [replacements] = args;\n  }\n\n  return str.replace(/{(\\d+)}/g, (match, i) => {\n    return replacements[i];\n  });\n}","const inputableNode = /input|select|textarea|button|object/;\n\nfunction visible(element) {\n  const {\n    width,\n    height\n  } = element.getBoundingClientRect();\n  const noZeroSize = width > 0 || height > 0;\n  return noZeroSize && window.getComputedStyle(element).visibility !== 'hidden';\n}\n\nfunction focusable(element) {\n  const nodeName = element.tagName.toLowerCase();\n  const res = inputableNode.test(nodeName) && !element.disabled || nodeName === 'a' && element.href;\n  return res && visible(element);\n}\n\nfunction tabbable(element) {\n  const isDataActionable = element.getAttribute('data-navigation') === 'enable';\n  const tabIndex = element.tabIndex;\n  return tabIndex >= 0 && focusable(element) || isDataActionable;\n}\n\nexport function queryFocusable(element) {\n  return [].slice.call(element.querySelectorAll('*'), 0).filter(tabbable);\n}","// NOTE: lightning-utils is a public library. adding new utils here means we\n// will have to support it until the end of time. Consider adding the util to\n// lightning-utils-private instead if it's something we can live with as\n// internal-only.\nexport { classSet } from './classSet';\nexport { queryFocusable } from './queryFocusable';\nexport { formatLabel } from './labelUtils';","\"use strict\";\nexports.__esModule = true;\n/*\n * Copyright (c) 2022, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nexports[\"default\"] = undefined;\n","\"use strict\";\nexports.__esModule = true;\n/*\n * Copyright (c) 2022, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nexports[\"default\"] = undefined;\n","/*\r\n * Postmonger.js   version 0.0.14\r\n * https://github.com/kevinparkerson/postmonger\r\n *\r\n * Copyright (c) 2012-2014 Kevin Parkerson\r\n * Available via the MIT or new BSD license.\r\n * Further details and documentation:\r\n * http://kevinparkerson.github.com/postmonger/\r\n *\r\n *///\r\n\r\n(function (root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine('postmonger', [], function () { return factory(root); });\r\n\t} else if (typeof exports === 'object') {\r\n\t\tmodule.exports = factory(root);\r\n\t} else {\r\n\t\t// OR use browser globals if AMD is not present\r\n\t\troot.Postmonger = factory(root);\r\n\t}\r\n}(this, function (root) {\r\n\troot = root || window;\r\n\r\n\tvar exports = exports || undefined;\r\n\tvar Postmonger;\r\n\tvar previous = root.Postmonger;\r\n\tvar _window = (root.addEventListener || root.attachEvent) ? root : window;\r\n\tvar Connection, Events, Session;\r\n\r\n\t//Set up Postmonger namespace, provide noConflict support, and version\r\n\tif (typeof(exports) !== 'undefined') {\r\n\t\tPostmonger = exports;\r\n\t} else {\r\n\t\tPostmonger = {};\r\n\t}\r\n\tPostmonger.noConflict = function () {\r\n\t\troot.Postmonger = previous;\r\n\t\treturn this;\r\n\t};\r\n\tPostmonger.version = '0.0.14';\r\n\r\n\t//Create a new Postmonger Connection\r\n\tConnection = Postmonger.Connection = function (options) {\r\n\t\toptions = (typeof(options) === 'object') ? options : {};\r\n\r\n\t\tvar connect = options.connect || _window.parent;\r\n\t\tvar from = options.from || '*';\r\n\t\tvar to = options.to || '*';\r\n\t\tvar self = this;\r\n\r\n\t\t//If string, grab based on id\r\n\t\tif (typeof(connect) === 'string') {\r\n\t\t\tconnect = document.getElementById(connect);\r\n\t\t}\r\n\r\n\t\t//If no connection, check for jquery object\r\n\t\tif (connect && !connect.postMessage && connect.jquery) {\r\n\t\t\tconnect = connect.get(0);\r\n\t\t}\r\n\r\n\t\t//If still no connection, check for iframe\r\n\t\tif (connect && !connect.postMessage && (connect.contentWindow || connect.contentDocument)) {\r\n\t\t\tconnect = connect.contentWindow || connect.contentDocument;\r\n\t\t}\r\n\r\n\t\t//Throw warning if connection could not be made\r\n\t\tif (!(connect && connect.postMessage)) {\r\n\t\t\tif (_window.console && _window.console.warn) {\r\n\t\t\t\t_window.console.warn(' Warning: Postmonger could not establish connection with ', options.connect);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tself.connect = connect;\r\n\t\tself.to = to;\r\n\t\tself.from = from;\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t//Postmonger.Events - Hacked together from Backbone.Events and two Underscore functions.\r\n\tEvents = Postmonger.Events = function () {\r\n\t\tvar eventSplitter = /\\s+/;\r\n\t\tvar self = this;\r\n\r\n\t\tself._callbacks = {};\r\n\r\n\t\tself._has = function (obj, key) {\r\n\t\t\treturn Object.prototype.hasOwnProperty.call(obj, key);\r\n\t\t};\r\n\r\n\t\tself._keys = function (obj) {\r\n\t\t\tif (Object.keys) {\r\n\t\t\t\treturn Object.keys(obj);\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof(obj)!=='object') {\r\n\t\t\t\tthrow new TypeError('Invalid object');\r\n\t\t\t}\r\n\r\n\t\t\tvar keys = [];\r\n\r\n\t\t\tfor (var key in obj) {\r\n\t\t\t\tif (self._has(obj, key)) {\r\n\t\t\t\t\tkeys[keys.length] = key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn keys;\r\n\t\t};\r\n\r\n\t\tself.on = function (events, callback, context) {\r\n\t\t\tvar calls, event, node, tail, list;\r\n\r\n\t\t\tif (!callback) {\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\tevents = events.split(eventSplitter);\r\n\r\n\t\t\tself._callbacks = self._callbacks || {};\r\n\t\t\tcalls = self._callbacks;\r\n\r\n\t\t\twhile (event = events.shift()) {\r\n\t\t\t\tlist = calls[event];\r\n\r\n\t\t\t\tnode = (list) ? list.tail : {};\r\n\t\t\t\ttail = {};\r\n\r\n\t\t\t\tnode.next = tail;\r\n\t\t\t\tnode.context = context;\r\n\t\t\t\tnode.callback = callback;\r\n\r\n\t\t\t\tcalls[event] = {\r\n\t\t\t\t\ttail: tail,\r\n\t\t\t\t\tnext: (list) ? list.next : node\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t};\r\n\r\n\t\tself.off = function (events, callback, context) {\r\n\t\t\tvar calls = self._callbacks;\r\n\t\t\tvar event, node, tail, cb, ctx;\r\n\r\n\t\t\tif (!calls) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!(events || callback || context)) {\r\n\t\t\t\tdelete self._callbacks;\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\tevents = (events) ? events.split(eventSplitter) : self._keys(calls);\r\n\r\n\t\t\twhile (event = events.shift()) {\r\n\t\t\t\tnode = calls[event];\r\n\t\t\t\tdelete calls[event];\r\n\t\t\t\tif (!node || !(callback || context)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttail = node.tail;\r\n\t\t\t\twhile ((node = node.next) !== tail) {\r\n\t\t\t\t\tcb = node.callback;\r\n\t\t\t\t\tctx = node.context;\r\n\t\t\t\t\tif (((callback && cb) !== callback) || ((context && ctx) !== context)) {\r\n\t\t\t\t\t\tself.on(event, cb, ctx);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t};\r\n\r\n\t\tself.trigger = function (events) {\r\n\t\t\tvar event, node, calls, tail, args, all, rest;\r\n\r\n\t\t\tif (!(calls = self._callbacks)) {\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\r\n\t\t\tall = calls.all;\r\n\t\t\tevents = events.split(eventSplitter);\r\n\t\t\trest = Array.prototype.slice.call(arguments, 1);\r\n\r\n\t\t\twhile (event = events.shift()) {\r\n\t\t\t\tif (node = calls[event]) {\r\n\t\t\t\t\ttail = node.tail;\r\n\t\t\t\t\twhile ((node = node.next) !== tail) {\r\n\t\t\t\t\t\tnode.callback.apply(node.context || self, rest);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (node = all) {\r\n\t\t\t\t\ttail = node.tail;\r\n\t\t\t\t\targs = [event].concat(rest);\r\n\t\t\t\t\twhile ((node = node.next) !== tail) {\r\n\t\t\t\t\t\tnode.callback.apply(node.context || self, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn self;\r\n\t\t};\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\t//Create a new Postmonger Session\r\n\tSession = Postmonger.Session = function () {\r\n\t\tvar args = (arguments.length>0) ? Array.prototype.slice.call(arguments, 0) : [{}];\r\n\t\tvar connections = [];\r\n\t\tvar incoming = new Events();\r\n\t\tvar outgoing = new Events();\r\n\t\tvar self = this;\r\n\t\tvar connection, i, j, l, ln, postMessageListener;\r\n\r\n\t\t//Session API hooks\r\n\t\tself.on = incoming.on;\r\n\t\tself.off = incoming.off;\r\n\t\tself.trigger = outgoing.trigger;\r\n\t\tself.end = function () {\r\n\t\t\tincoming.off();\r\n\t\t\toutgoing.off();\r\n\t\t\tif (_window.removeEventListener) {\r\n\t\t\t\t_window.removeEventListener('message', postMessageListener, false);\r\n\t\t\t} else if (_window.detachEvent) {\r\n\t\t\t\t_window.detachEvent('onmessage', postMessageListener);\r\n\t\t\t}\r\n\t\t\treturn self;\r\n\t\t};\r\n\r\n\t\t//Establishing connections\r\n\t\tfor (i=0, l=args.length; i<l; i++) {\r\n\t\t\tconnection = new Connection(args[i]);\r\n\t\t\tif (connection) {\r\n\t\t\t\tfor (j=0, ln=connections.length; j<ln; j++) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tconnections[j].connect === connection.connect &&\r\n\t\t\t\t\t\tconnections[j].from === connection.from &&\r\n\t\t\t\t\t\tconnections[j].to === connection.to\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tconnection = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (connection) {\r\n\t\t\t\t\tconnections.push(connection);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Listener for incoming messages\r\n\t\tpostMessageListener = function(event){\r\n\t\t\tvar conn = null;\r\n\t\t\tvar message = [];\r\n\t\t\tvar data;\r\n\t\t\tvar k, len;\r\n\r\n\t\t\t//Attempt to find the connection we're dealing with\r\n\t\t\tfor (k=0, len=connections.length; k<len; k++) {\r\n\t\t\t\tif (connections[k].connect === event.source) {\r\n\t\t\t\t\tconn = connections[k];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Check if we've found the connection\r\n\t\t\tif (!conn) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t//Check if the message is from the expected origin\r\n\t\t\tif (conn.from !== '*' && conn.from !== event.origin) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t//Check the data that's been passed\r\n\t\t\ttry{\r\n\t\t\t\tdata = JSON.parse(event.data);\r\n\t\t\t\tif(!data.e){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t//Format the passed in data\r\n\t\t\tmessage.push(data.e);\r\n\t\t\tdelete data.e;\r\n\t\t\tfor (k in data) {\r\n\t\t\t\tmessage.push(data[k]);\r\n\t\t\t}\r\n\r\n\t\t\t//Send the message\r\n\t\t\tincoming['trigger'].apply(root, message);\r\n\t\t};\r\n\r\n\t\t//Add the listener\r\n\t\tif (_window.addEventListener) {\r\n\t\t\t_window.addEventListener('message', postMessageListener, false);\r\n\t\t} else if(_window.attachEvent) {\r\n\t\t\t_window.attachEvent('onmessage', postMessageListener);\r\n\t\t} else{\r\n\t\t\tif (_window.console && _window.console.warn) {\r\n\t\t\t\t_window.console.warn('WARNING: Postmonger could not listen for messages on window %o', _window);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//Sending outgoing messages\r\n\t\toutgoing.on('all', function () {\r\n\t\t\tvar args = Array.prototype.slice.call(arguments, 0);\r\n\t\t\tvar message = {};\r\n\t\t\tvar k, len;\r\n\r\n\t\t\tmessage.e = args[0];\r\n\r\n\t\t\tfor (k=1, len=args.length; k<len; k++) {\r\n\t\t\t\tmessage['a' + k] = args[k];\r\n\t\t\t}\r\n\r\n\t\t\tfor (k=0, len=connections.length; k<len; k++) {\r\n\t\t\t\tconnections[k].connect.postMessage(JSON.stringify(message), connections[k].to);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn self;\r\n\t};\r\n\r\n\treturn Postmonger;\r\n}));\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"./\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"sfmc-activity-extract-data:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksfmc_activity_extract_data\"] = self[\"webpackChunksfmc_activity_extract_data\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import '@lwc/synthetic-shadow';\nimport { createElement } from 'lwc';\nimport ExtractData from './extract-data/extract-data';\nconst activity = createElement('c-extract-data', {\n  is: ExtractData\n});\ndocument.querySelector('#main').appendChild(activity);"],"names":[],"sourceRoot":""}